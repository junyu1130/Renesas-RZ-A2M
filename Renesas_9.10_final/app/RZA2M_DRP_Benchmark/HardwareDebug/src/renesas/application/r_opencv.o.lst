   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"r_opencv.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	_Z41__static_initialization_and_destruction_0ii:
  23              		.fnstart
  24              	.LFB10961:
  25              		.file 1 "../src/renesas/application/r_opencv.cpp"
   1:../src/renesas/application/r_opencv.cpp **** /*******************************************************************************
   2:../src/renesas/application/r_opencv.cpp **** * DISCLAIMER
   3:../src/renesas/application/r_opencv.cpp **** * This software is supplied by Renesas Electronics Corporation and is only
   4:../src/renesas/application/r_opencv.cpp **** * intended for use with Renesas products. No other uses are authorized. This
   5:../src/renesas/application/r_opencv.cpp **** * software is owned by Renesas Electronics Corporation and is protected under
   6:../src/renesas/application/r_opencv.cpp **** * all applicable laws, including copyright laws.
   7:../src/renesas/application/r_opencv.cpp **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   8:../src/renesas/application/r_opencv.cpp **** * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT
   9:../src/renesas/application/r_opencv.cpp **** * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
  10:../src/renesas/application/r_opencv.cpp **** * AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
  11:../src/renesas/application/r_opencv.cpp **** * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS
  12:../src/renesas/application/r_opencv.cpp **** * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE
  13:../src/renesas/application/r_opencv.cpp **** * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR
  14:../src/renesas/application/r_opencv.cpp **** * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE
  15:../src/renesas/application/r_opencv.cpp **** * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  16:../src/renesas/application/r_opencv.cpp **** * Renesas reserves the right, without notice, to make changes to this software
  17:../src/renesas/application/r_opencv.cpp **** * and to discontinue the availability of this software. By using this software,
  18:../src/renesas/application/r_opencv.cpp **** * you agree to the additional terms and conditions found by accessing the
  19:../src/renesas/application/r_opencv.cpp **** * following link:
  20:../src/renesas/application/r_opencv.cpp **** * http://www.renesas.com/disclaimer
  21:../src/renesas/application/r_opencv.cpp **** * Copyright (C) 2018 Renesas Electronics Corporation. All rights reserved.
  22:../src/renesas/application/r_opencv.cpp **** *******************************************************************************/
  23:../src/renesas/application/r_opencv.cpp **** 
  24:../src/renesas/application/r_opencv.cpp **** 
  25:../src/renesas/application/r_opencv.cpp **** #include <opencv.hpp>
  26:../src/renesas/application/r_opencv.cpp **** 
  27:../src/renesas/application/r_opencv.cpp **** #ifdef __cplusplus
  28:../src/renesas/application/r_opencv.cpp **** extern "C" {
  29:../src/renesas/application/r_opencv.cpp **** #endif
  30:../src/renesas/application/r_opencv.cpp **** 
  31:../src/renesas/application/r_opencv.cpp **** #include <r_bsp.h>
  32:../src/renesas/application/r_opencv.cpp **** #include "main.h"
  33:../src/renesas/application/r_opencv.cpp **** #include "r_bcd_main.h"
  34:../src/renesas/application/r_opencv.cpp **** #include "r_drp.h"
  35:../src/renesas/application/r_opencv.cpp **** #include "perform.h"
  36:../src/renesas/application/r_opencv.cpp **** #include "r_opencv.h"
  37:../src/renesas/application/r_opencv.cpp **** 
  38:../src/renesas/application/r_opencv.cpp **** //extern R_ORB g_orb_result[2];
  39:../src/renesas/application/r_opencv.cpp **** 
  40:../src/renesas/application/r_opencv.cpp **** #ifdef __cplusplus
  41:../src/renesas/application/r_opencv.cpp **** }
  42:../src/renesas/application/r_opencv.cpp **** #endif
  43:../src/renesas/application/r_opencv.cpp **** 
  44:../src/renesas/application/r_opencv.cpp **** 
  45:../src/renesas/application/r_opencv.cpp **** using namespace cv;
  46:../src/renesas/application/r_opencv.cpp **** using namespace std;
  47:../src/renesas/application/r_opencv.cpp **** 
  48:../src/renesas/application/r_opencv.cpp **** #if 0
  49:../src/renesas/application/r_opencv.cpp **** std::vector<KeyPoint> keyPoints;
  50:../src/renesas/application/r_opencv.cpp **** Ptr<FeatureDetector> orb;
  51:../src/renesas/application/r_opencv.cpp **** int cv_orb(uint8_t *src, uint16_t in_w, uint16_t in_h)
  52:../src/renesas/application/r_opencv.cpp **** {
  53:../src/renesas/application/r_opencv.cpp **** 	Mat gray_src;
  54:../src/renesas/application/r_opencv.cpp **** 	int i;
  55:../src/renesas/application/r_opencv.cpp **** 
  56:../src/renesas/application/r_opencv.cpp **** 	orb = ORB::create();
  57:../src/renesas/application/r_opencv.cpp **** 	gray_src = Mat(in_h,in_w,CV_8UC1,src);
  58:../src/renesas/application/r_opencv.cpp **** 
  59:../src/renesas/application/r_opencv.cpp **** 	orb->detect(gray_src, keyPoints);// feature point detection
  60:../src/renesas/application/r_opencv.cpp **** 
  61:../src/renesas/application/r_opencv.cpp **** 	for (i=0; i<keyPoints.size(), i<500; i++)
  62:../src/renesas/application/r_opencv.cpp **** 	{
  63:../src/renesas/application/r_opencv.cpp **** 		g_orb_result[0].pt[i].x = (uint16_t)(keyPoints[i].pt.x);
  64:../src/renesas/application/r_opencv.cpp **** 		g_orb_result[0].pt[i].y = (uint16_t)(keyPoints[i].pt.y);
  65:../src/renesas/application/r_opencv.cpp **** 	}
  66:../src/renesas/application/r_opencv.cpp **** 	g_orb_result[0].pt_num = keyPoints.size() > 500 ? 500 : keyPoints.size();
  67:../src/renesas/application/r_opencv.cpp **** 
  68:../src/renesas/application/r_opencv.cpp **** 	return 0;
  69:../src/renesas/application/r_opencv.cpp **** }
  70:../src/renesas/application/r_opencv.cpp **** 
  71:../src/renesas/application/r_opencv.cpp **** 
  72:../src/renesas/application/r_opencv.cpp **** 
  73:../src/renesas/application/r_opencv.cpp **** int cv_findcontours_boundingrect(uint8_t *img, uint16_t width, uint16_t height, uint32_t frameId)
  74:../src/renesas/application/r_opencv.cpp **** {
  75:../src/renesas/application/r_opencv.cpp **** 	Mat src;
  76:../src/renesas/application/r_opencv.cpp **** 	vector<vector<Point> > contours;
  77:../src/renesas/application/r_opencv.cpp **** 	vector<Vec4i> hierarchy;
  78:../src/renesas/application/r_opencv.cpp **** 	int i;
  79:../src/renesas/application/r_opencv.cpp **** 	RotatedRect rect;
  80:../src/renesas/application/r_opencv.cpp **** 	int contours_no = 0;
  81:../src/renesas/application/r_opencv.cpp **** 	int area_width, area_height;
  82:../src/renesas/application/r_opencv.cpp **** 	float wh_ratio;
  83:../src/renesas/application/r_opencv.cpp **** 	double area;
  84:../src/renesas/application/r_opencv.cpp **** 	Point2f box[4];
  85:../src/renesas/application/r_opencv.cpp **** 	R_Box r_box;
  86:../src/renesas/application/r_opencv.cpp **** 	R_Rect r_rect;
  87:../src/renesas/application/r_opencv.cpp **** 	int j, outofimage;
  88:../src/renesas/application/r_opencv.cpp **** 	int barcode_square_min = (width/10) * (height/10);
  89:../src/renesas/application/r_opencv.cpp **** 
  90:../src/renesas/application/r_opencv.cpp **** 	src = Mat(height,width,CV_8UC1,img);
  91:../src/renesas/application/r_opencv.cpp **** 	findContours( src, contours, hierarchy, CV_RETR_EXTERNAL, CV_CHAIN_APPROX_SIMPLE, Point(0, 0) );
  92:../src/renesas/application/r_opencv.cpp **** 
  93:../src/renesas/application/r_opencv.cpp **** 	for( i = 0; i< contours.size(); i++ )
  94:../src/renesas/application/r_opencv.cpp **** 	{
  95:../src/renesas/application/r_opencv.cpp **** 		if (i >= DRP_R_FINDC_BUFF_RECT_NUM)
  96:../src/renesas/application/r_opencv.cpp **** 			break;
  97:../src/renesas/application/r_opencv.cpp **** 
  98:../src/renesas/application/r_opencv.cpp **** 		if (frameId == 0)
  99:../src/renesas/application/r_opencv.cpp **** 		{
 100:../src/renesas/application/r_opencv.cpp **** 			//get contour of dilate image
 101:../src/renesas/application/r_opencv.cpp **** 			area = contourArea(contours[i]);
 102:../src/renesas/application/r_opencv.cpp **** 			Rect position = boundingRect(contours[i]);
 103:../src/renesas/application/r_opencv.cpp **** 			if (position.x <= 2 || position.y <= 2 ||
 104:../src/renesas/application/r_opencv.cpp **** 				position.x + position.width >= (width - 2) ||
 105:../src/renesas/application/r_opencv.cpp **** 				position.y + position.height >= (height - 2) ||
 106:../src/renesas/application/r_opencv.cpp **** 				abs(position.width - position.height) > ((position.width + position.height) >> 3))
 107:../src/renesas/application/r_opencv.cpp **** 			{
 108:../src/renesas/application/r_opencv.cpp **** 				//filter out the contour on image boundary
 109:../src/renesas/application/r_opencv.cpp **** 				continue;
 110:../src/renesas/application/r_opencv.cpp **** 			}
 111:../src/renesas/application/r_opencv.cpp **** 
 112:../src/renesas/application/r_opencv.cpp **** 			if (area > barcode_square_min)// &&
 113:../src/renesas/application/r_opencv.cpp **** 				//abs(position.width - position.height) < ((position.width + position.height) >> 3))
 114:../src/renesas/application/r_opencv.cpp **** 			{
 115:../src/renesas/application/r_opencv.cpp **** 				rect = minAreaRect(contours[i]);
 116:../src/renesas/application/r_opencv.cpp **** 				//Add 4 pixel margin
 117:../src/renesas/application/r_opencv.cpp **** 				rect.size.width += 4;
 118:../src/renesas/application/r_opencv.cpp **** 				rect.size.height += 4;
 119:../src/renesas/application/r_opencv.cpp **** 				rect.points(box);
 120:../src/renesas/application/r_opencv.cpp **** 				outofimage = 0;
 121:../src/renesas/application/r_opencv.cpp **** 				for (j=0; j<4; j++)
 122:../src/renesas/application/r_opencv.cpp **** 				{
 123:../src/renesas/application/r_opencv.cpp **** 					r_box.box[j][0] = (int)box[j].x;
 124:../src/renesas/application/r_opencv.cpp **** 					r_box.box[j][1] = (int)box[j].y;
 125:../src/renesas/application/r_opencv.cpp **** 					if (r_box.box[j][0] < 0 || r_box.box[j][0] >= width || r_box.box[j][1] < 0 || r_box.box[j][1] 
 126:../src/renesas/application/r_opencv.cpp **** 					{
 127:../src/renesas/application/r_opencv.cpp **** 						outofimage = 1;
 128:../src/renesas/application/r_opencv.cpp **** 						break;
 129:../src/renesas/application/r_opencv.cpp **** 					}
 130:../src/renesas/application/r_opencv.cpp **** 				}
 131:../src/renesas/application/r_opencv.cpp **** 				if (outofimage == 0)
 132:../src/renesas/application/r_opencv.cpp **** 				{
 133:../src/renesas/application/r_opencv.cpp **** 					memcpy(&app_contours[frameId].box[contours_no], &r_box, sizeof(R_Box));
 134:../src/renesas/application/r_opencv.cpp **** 					r_rect.x = position.x;
 135:../src/renesas/application/r_opencv.cpp **** 					r_rect.y = position.y;
 136:../src/renesas/application/r_opencv.cpp **** 					r_rect.width = position.width;
 137:../src/renesas/application/r_opencv.cpp **** 					r_rect.height = position.height;
 138:../src/renesas/application/r_opencv.cpp **** 					memcpy(&app_contours[frameId].rect[contours_no], &r_rect, sizeof(R_Rect));
 139:../src/renesas/application/r_opencv.cpp **** 					contours_no++;
 140:../src/renesas/application/r_opencv.cpp **** 				}
 141:../src/renesas/application/r_opencv.cpp **** 			}
 142:../src/renesas/application/r_opencv.cpp **** 		}
 143:../src/renesas/application/r_opencv.cpp **** 		else
 144:../src/renesas/application/r_opencv.cpp **** 		{
 145:../src/renesas/application/r_opencv.cpp **** 			//this contour has child contour
 146:../src/renesas/application/r_opencv.cpp **** 			Rect position = boundingRect(contours[i]);
 147:../src/renesas/application/r_opencv.cpp **** 
 148:../src/renesas/application/r_opencv.cpp **** 			r_rect.x = position.x;
 149:../src/renesas/application/r_opencv.cpp **** 			r_rect.y = position.y;
 150:../src/renesas/application/r_opencv.cpp **** 			r_rect.width = position.width;
 151:../src/renesas/application/r_opencv.cpp **** 			r_rect.height = position.height;
 152:../src/renesas/application/r_opencv.cpp **** 			memcpy(&app_contours[frameId].rect[contours_no], &r_rect, sizeof(R_Rect));
 153:../src/renesas/application/r_opencv.cpp **** 			contours_no++;
 154:../src/renesas/application/r_opencv.cpp **** 		}
 155:../src/renesas/application/r_opencv.cpp **** 	}
 156:../src/renesas/application/r_opencv.cpp **** 
 157:../src/renesas/application/r_opencv.cpp **** 	src.release();
 158:../src/renesas/application/r_opencv.cpp **** 
 159:../src/renesas/application/r_opencv.cpp **** 	return contours_no;
 160:../src/renesas/application/r_opencv.cpp **** }
 161:../src/renesas/application/r_opencv.cpp **** 
 162:../src/renesas/application/r_opencv.cpp **** int cv_moments(uint8_t* src, uint16_t width, uint16_t height, uint16_t* center_x, uint16_t* center_
 163:../src/renesas/application/r_opencv.cpp **** {
 164:../src/renesas/application/r_opencv.cpp **** 	double vx, vy, area;
 165:../src/renesas/application/r_opencv.cpp **** 	CvMoments m;
 166:../src/renesas/application/r_opencv.cpp **** 	Mat imgSrc = Mat(height,width,CV_8UC1,src);
 167:../src/renesas/application/r_opencv.cpp **** 
 168:../src/renesas/application/r_opencv.cpp **** 	m = moments(imgSrc, 1);
 169:../src/renesas/application/r_opencv.cpp **** 
 170:../src/renesas/application/r_opencv.cpp **** 	area = m.m00;
 171:../src/renesas/application/r_opencv.cpp **** 	*center_x = m.m10 / area;
 172:../src/renesas/application/r_opencv.cpp **** 	*center_y = m.m01 / area;
 173:../src/renesas/application/r_opencv.cpp **** 
 174:../src/renesas/application/r_opencv.cpp **** 	vx = m.mu20 - m.mu02;
 175:../src/renesas/application/r_opencv.cpp **** 	vy = m.mu11 * 2.0;
 176:../src/renesas/application/r_opencv.cpp **** 
 177:../src/renesas/application/r_opencv.cpp **** 	if (vy == 0)
 178:../src/renesas/application/r_opencv.cpp **** 	{
 179:../src/renesas/application/r_opencv.cpp **** 		*angle = 0;
 180:../src/renesas/application/r_opencv.cpp **** 	}
 181:../src/renesas/application/r_opencv.cpp **** 	else
 182:../src/renesas/application/r_opencv.cpp **** 	{
 183:../src/renesas/application/r_opencv.cpp **** 		if (vy < 0)
 184:../src/renesas/application/r_opencv.cpp **** 		{
 185:../src/renesas/application/r_opencv.cpp **** 			vx = - vx;
 186:../src/renesas/application/r_opencv.cpp **** 			vy = - vy;
 187:../src/renesas/application/r_opencv.cpp **** 		}
 188:../src/renesas/application/r_opencv.cpp **** 		*angle = atan2(vy, vx) / 2.0;
 189:../src/renesas/application/r_opencv.cpp **** 	}
 190:../src/renesas/application/r_opencv.cpp **** 	return 0;
 191:../src/renesas/application/r_opencv.cpp **** 
 192:../src/renesas/application/r_opencv.cpp **** 
 193:../src/renesas/application/r_opencv.cpp **** }
 194:../src/renesas/application/r_opencv.cpp **** #if 0
 195:../src/renesas/application/r_opencv.cpp **** static void get_transform_points(R_Box r_box, uint16_t* width, uint16_t* height, Point2f srcTri[3],
 196:../src/renesas/application/r_opencv.cpp **** {
 197:../src/renesas/application/r_opencv.cpp **** 
 198:../src/renesas/application/r_opencv.cpp **** }
 199:../src/renesas/application/r_opencv.cpp **** 
 200:../src/renesas/application/r_opencv.cpp **** void cv_getAffineTransform(R_Box r_box, int32_t m[6], uint16_t* width, uint16_t* height)
 201:../src/renesas/application/r_opencv.cpp **** {
 202:../src/renesas/application/r_opencv.cpp **** 	Mat warp_mat( 2, 3, CV_32FC1 );
 203:../src/renesas/application/r_opencv.cpp **** 	float mf[6];
 204:../src/renesas/application/r_opencv.cpp **** 	Point2f srcTri[3];
 205:../src/renesas/application/r_opencv.cpp **** 	Point2f dstTri[3];
 206:../src/renesas/application/r_opencv.cpp **** 	int i, left=0, right=0, top=0, bottom=0;
 207:../src/renesas/application/r_opencv.cpp **** 	int left_x, right_x, top_y, bottom_y;
 208:../src/renesas/application/r_opencv.cpp **** 	int left_top, top_right, right_bottom, bottom_left;
 209:../src/renesas/application/r_opencv.cpp **** 	int dx, dy;
 210:../src/renesas/application/r_opencv.cpp **** 
 211:../src/renesas/application/r_opencv.cpp **** 	left_x = right_x = r_box.box[0][0];
 212:../src/renesas/application/r_opencv.cpp **** 	top_y = bottom_y = r_box.box[0][1];
 213:../src/renesas/application/r_opencv.cpp **** 	for (i=1;i<4;i++)
 214:../src/renesas/application/r_opencv.cpp **** 	{
 215:../src/renesas/application/r_opencv.cpp **** 		if (left_x > r_box.box[i][0])
 216:../src/renesas/application/r_opencv.cpp **** 		{
 217:../src/renesas/application/r_opencv.cpp **** 			left_x = r_box.box[i][0];
 218:../src/renesas/application/r_opencv.cpp **** 			left = i;
 219:../src/renesas/application/r_opencv.cpp **** 		}
 220:../src/renesas/application/r_opencv.cpp **** 		if (right_x < r_box.box[i][0])
 221:../src/renesas/application/r_opencv.cpp **** 		{
 222:../src/renesas/application/r_opencv.cpp **** 			right_x = r_box.box[i][0];
 223:../src/renesas/application/r_opencv.cpp **** 			right = i;
 224:../src/renesas/application/r_opencv.cpp **** 		}
 225:../src/renesas/application/r_opencv.cpp **** 		if (top_y > r_box.box[i][1])
 226:../src/renesas/application/r_opencv.cpp **** 		{
 227:../src/renesas/application/r_opencv.cpp **** 			top_y = r_box.box[i][1];
 228:../src/renesas/application/r_opencv.cpp **** 			top = i;
 229:../src/renesas/application/r_opencv.cpp **** 		}
 230:../src/renesas/application/r_opencv.cpp **** 		if (bottom_y < r_box.box[i][1])
 231:../src/renesas/application/r_opencv.cpp **** 		{
 232:../src/renesas/application/r_opencv.cpp **** 			bottom_y = r_box.box[i][1];
 233:../src/renesas/application/r_opencv.cpp **** 			bottom = i;
 234:../src/renesas/application/r_opencv.cpp **** 		}
 235:../src/renesas/application/r_opencv.cpp **** 	}
 236:../src/renesas/application/r_opencv.cpp **** 
 237:../src/renesas/application/r_opencv.cpp **** 	dx = r_box.box[left][0] - r_box.box[top][0];
 238:../src/renesas/application/r_opencv.cpp **** 	dy = r_box.box[left][1] - r_box.box[top][1];
 239:../src/renesas/application/r_opencv.cpp **** 	left_top = (int)sqrt((double)dx*dx + (double)dy*dy);
 240:../src/renesas/application/r_opencv.cpp **** 	dx = r_box.box[top][0] - r_box.box[right][0];
 241:../src/renesas/application/r_opencv.cpp **** 	dy = r_box.box[top][1] - r_box.box[right][1];
 242:../src/renesas/application/r_opencv.cpp **** 	top_right = (int)sqrt((double)dx*dx + (double)dy*dy);
 243:../src/renesas/application/r_opencv.cpp **** 	dx = r_box.box[right][0] - r_box.box[bottom][0];
 244:../src/renesas/application/r_opencv.cpp **** 	dy = r_box.box[right][1] - r_box.box[bottom][1];
 245:../src/renesas/application/r_opencv.cpp **** 	right_bottom = (int)sqrt((double)dx*dx + (double)dy*dy);
 246:../src/renesas/application/r_opencv.cpp **** 	dx = r_box.box[bottom][0] - r_box.box[left][0];
 247:../src/renesas/application/r_opencv.cpp **** 	dy = r_box.box[bottom][1] - r_box.box[left][1];
 248:../src/renesas/application/r_opencv.cpp **** 	bottom_left = (int)sqrt((double)dx*dx + (double)dy*dy);
 249:../src/renesas/application/r_opencv.cpp **** 
 250:../src/renesas/application/r_opencv.cpp **** 	//DRP findcontour requires width and hight are multiple of 8
 251:../src/renesas/application/r_opencv.cpp **** 	if (left_top % 8 != 0)
 252:../src/renesas/application/r_opencv.cpp **** 	{
 253:../src/renesas/application/r_opencv.cpp **** 		left_top = (left_top + 7) & ~7;
 254:../src/renesas/application/r_opencv.cpp **** 	}
 255:../src/renesas/application/r_opencv.cpp **** 	//minimal width of DRP findcontour is 64
 256:../src/renesas/application/r_opencv.cpp **** 	if (left_top < 64)
 257:../src/renesas/application/r_opencv.cpp **** 	{
 258:../src/renesas/application/r_opencv.cpp **** 		left_top = 64;
 259:../src/renesas/application/r_opencv.cpp **** 	}
 260:../src/renesas/application/r_opencv.cpp **** 
 261:../src/renesas/application/r_opencv.cpp **** 	if (top_right % 8 != 0)
 262:../src/renesas/application/r_opencv.cpp **** 	{
 263:../src/renesas/application/r_opencv.cpp **** 		top_right = (top_right + 7) & ~7;
 264:../src/renesas/application/r_opencv.cpp **** 	}
 265:../src/renesas/application/r_opencv.cpp **** 	//minimal height of DRP findcontour is 64
 266:../src/renesas/application/r_opencv.cpp **** 	if (top_right < 32)
 267:../src/renesas/application/r_opencv.cpp **** 	{
 268:../src/renesas/application/r_opencv.cpp **** 		top_right = 32;
 269:../src/renesas/application/r_opencv.cpp **** 	}
 270:../src/renesas/application/r_opencv.cpp **** 
 271:../src/renesas/application/r_opencv.cpp **** 	srcTri[0].x = (float)r_box.box[left][0]; srcTri[0].y = (float)r_box.box[left][1];
 272:../src/renesas/application/r_opencv.cpp **** 	srcTri[1].x = (float)r_box.box[top][0]; srcTri[1].y = (float)r_box.box[top][1];
 273:../src/renesas/application/r_opencv.cpp **** 	srcTri[2].x = (float)r_box.box[right][0]; srcTri[2].y = (float)r_box.box[right][1];
 274:../src/renesas/application/r_opencv.cpp **** 	dstTri[0].x = 0.f; dstTri[0].y = 0.f;
 275:../src/renesas/application/r_opencv.cpp **** 	dstTri[1].x = (float)left_top; dstTri[1].y = 0.f;
 276:../src/renesas/application/r_opencv.cpp **** 	dstTri[2].x = dstTri[1].x; dstTri[2].y = (float)top_right;
 277:../src/renesas/application/r_opencv.cpp **** 	*width = left_top;
 278:../src/renesas/application/r_opencv.cpp **** 	*height = top_right;
 279:../src/renesas/application/r_opencv.cpp **** 	warp_mat = getAffineTransform( srcTri, dstTri );
 280:../src/renesas/application/r_opencv.cpp **** 
 281:../src/renesas/application/r_opencv.cpp **** 	memcpy(mf, warp_mat.data, 6*sizeof(float));
 282:../src/renesas/application/r_opencv.cpp **** 	for (i=0; i<6; i++)
 283:../src/renesas/application/r_opencv.cpp **** 	{
 284:../src/renesas/application/r_opencv.cpp **** 		m[i] = (int32_t)(FLTTOFIX(16,mf[i]));
 285:../src/renesas/application/r_opencv.cpp **** 	}
 286:../src/renesas/application/r_opencv.cpp **** 
 287:../src/renesas/application/r_opencv.cpp **** }
 288:../src/renesas/application/r_opencv.cpp **** #endif
 289:../src/renesas/application/r_opencv.cpp **** 
 290:../src/renesas/application/r_opencv.cpp **** int cv_affine_transform(uint8_t *src, uint8_t *dst, uint16_t* w, uint16_t* h, R_Box r_box)
 291:../src/renesas/application/r_opencv.cpp **** {
 292:../src/renesas/application/r_opencv.cpp **** 	Mat img_in, img_out;
 293:../src/renesas/application/r_opencv.cpp **** 	int i, left=0, right=0, top=0, bottom=0;
 294:../src/renesas/application/r_opencv.cpp **** 	int left_x, right_x, top_y, bottom_y;
 295:../src/renesas/application/r_opencv.cpp **** 	int left_top, top_right, right_bottom, bottom_left;
 296:../src/renesas/application/r_opencv.cpp **** 	int dx, dy;
 297:../src/renesas/application/r_opencv.cpp **** 	Point2f srcTri[3];
 298:../src/renesas/application/r_opencv.cpp **** 	Point2f dstTri[3];
 299:../src/renesas/application/r_opencv.cpp **** 
 300:../src/renesas/application/r_opencv.cpp **** 	Mat warp_mat( 2, 3, CV_32FC1 );
 301:../src/renesas/application/r_opencv.cpp **** 	img_in = Mat(*h, *w, CV_8UC1, src);
 302:../src/renesas/application/r_opencv.cpp **** 
 303:../src/renesas/application/r_opencv.cpp **** 
 304:../src/renesas/application/r_opencv.cpp **** 	left_x = right_x = r_box.box[0][0];
 305:../src/renesas/application/r_opencv.cpp **** 	top_y = bottom_y = r_box.box[0][1];
 306:../src/renesas/application/r_opencv.cpp **** 	for (i=1;i<4;i++)
 307:../src/renesas/application/r_opencv.cpp **** 	{
 308:../src/renesas/application/r_opencv.cpp **** 		if (left_x > r_box.box[i][0])
 309:../src/renesas/application/r_opencv.cpp **** 		{
 310:../src/renesas/application/r_opencv.cpp **** 			left_x = r_box.box[i][0];			left = i;
 311:../src/renesas/application/r_opencv.cpp **** 		}
 312:../src/renesas/application/r_opencv.cpp **** 		if (right_x < r_box.box[i][0])
 313:../src/renesas/application/r_opencv.cpp **** 		{
 314:../src/renesas/application/r_opencv.cpp **** 			right_x = r_box.box[i][0];			right = i;
 315:../src/renesas/application/r_opencv.cpp **** 		}
 316:../src/renesas/application/r_opencv.cpp **** 		if (top_y > r_box.box[i][1])
 317:../src/renesas/application/r_opencv.cpp **** 		{
 318:../src/renesas/application/r_opencv.cpp **** 			top_y = r_box.box[i][1];			top = i;
 319:../src/renesas/application/r_opencv.cpp **** 		}
 320:../src/renesas/application/r_opencv.cpp **** 		if (bottom_y < r_box.box[i][1])
 321:../src/renesas/application/r_opencv.cpp **** 		{
 322:../src/renesas/application/r_opencv.cpp **** 			bottom_y = r_box.box[i][1];			bottom = i;
 323:../src/renesas/application/r_opencv.cpp **** 		}
 324:../src/renesas/application/r_opencv.cpp **** 	}
 325:../src/renesas/application/r_opencv.cpp **** 
 326:../src/renesas/application/r_opencv.cpp **** 	dx = r_box.box[left][0] - r_box.box[top][0];
 327:../src/renesas/application/r_opencv.cpp **** 	dy = r_box.box[left][1] - r_box.box[top][1];
 328:../src/renesas/application/r_opencv.cpp **** 	left_top = (int)sqrt((double)dx*dx + (double)dy*dy);
 329:../src/renesas/application/r_opencv.cpp **** 	dx = r_box.box[top][0] - r_box.box[right][0];
 330:../src/renesas/application/r_opencv.cpp **** 	dy = r_box.box[top][1] - r_box.box[right][1];
 331:../src/renesas/application/r_opencv.cpp **** 	top_right = (int)sqrt((double)dx*dx + (double)dy*dy);
 332:../src/renesas/application/r_opencv.cpp **** 	dx = r_box.box[right][0] - r_box.box[bottom][0];
 333:../src/renesas/application/r_opencv.cpp **** 	dy = r_box.box[right][1] - r_box.box[bottom][1];
 334:../src/renesas/application/r_opencv.cpp **** 	right_bottom = (int)sqrt((double)dx*dx + (double)dy*dy);
 335:../src/renesas/application/r_opencv.cpp **** 	dx = r_box.box[bottom][0] - r_box.box[left][0];
 336:../src/renesas/application/r_opencv.cpp **** 	dy = r_box.box[bottom][1] - r_box.box[left][1];
 337:../src/renesas/application/r_opencv.cpp **** 	bottom_left = (int)sqrt((double)dx*dx + (double)dy*dy);
 338:../src/renesas/application/r_opencv.cpp **** 
 339:../src/renesas/application/r_opencv.cpp **** 	//DRP findcontour requires width and hight are multiple of 8
 340:../src/renesas/application/r_opencv.cpp **** 	//DRP binarization require width is multiple of 32, height is multiple of 8
 341:../src/renesas/application/r_opencv.cpp **** 	if (left_top % 32 != 0)
 342:../src/renesas/application/r_opencv.cpp **** 	{
 343:../src/renesas/application/r_opencv.cpp **** 		left_top = (left_top + 31) & ~31;
 344:../src/renesas/application/r_opencv.cpp **** 	}
 345:../src/renesas/application/r_opencv.cpp **** 	//minimal width of DRP findcontour is 64
 346:../src/renesas/application/r_opencv.cpp **** 	if (left_top < 64)
 347:../src/renesas/application/r_opencv.cpp **** 	{
 348:../src/renesas/application/r_opencv.cpp **** 		left_top = 64;
 349:../src/renesas/application/r_opencv.cpp **** 	}
 350:../src/renesas/application/r_opencv.cpp **** 
 351:../src/renesas/application/r_opencv.cpp **** 	if (top_right % 8 != 0)
 352:../src/renesas/application/r_opencv.cpp **** 	{
 353:../src/renesas/application/r_opencv.cpp **** 		top_right = (top_right + 7) & ~7;
 354:../src/renesas/application/r_opencv.cpp **** 	}
 355:../src/renesas/application/r_opencv.cpp **** 	//minimal height of DRP findcontour is 32
 356:../src/renesas/application/r_opencv.cpp **** 	//minimal height of DRP binarization adaptive is 40
 357:../src/renesas/application/r_opencv.cpp **** 	if (top_right < 40)
 358:../src/renesas/application/r_opencv.cpp **** 	{
 359:../src/renesas/application/r_opencv.cpp **** 		top_right = 40;
 360:../src/renesas/application/r_opencv.cpp **** 	}
 361:../src/renesas/application/r_opencv.cpp **** 
 362:../src/renesas/application/r_opencv.cpp **** 	srcTri[0].x = (float)r_box.box[left][0]; srcTri[0].y = (float)r_box.box[left][1];
 363:../src/renesas/application/r_opencv.cpp **** 	srcTri[1].x = (float)r_box.box[top][0]; srcTri[1].y = (float)r_box.box[top][1];
 364:../src/renesas/application/r_opencv.cpp **** 	srcTri[2].x = (float)r_box.box[right][0]; srcTri[2].y = (float)r_box.box[right][1];
 365:../src/renesas/application/r_opencv.cpp **** 	dstTri[0].x = 2.0f; dstTri[0].y = 2.0f;
 366:../src/renesas/application/r_opencv.cpp **** 	dstTri[1].x = (float)left_top - 4; dstTri[1].y = 2.0f;
 367:../src/renesas/application/r_opencv.cpp **** 	dstTri[2].x = dstTri[1].x; dstTri[2].y = (float)top_right - 4;
 368:../src/renesas/application/r_opencv.cpp **** 	*w = left_top;
 369:../src/renesas/application/r_opencv.cpp **** 	*h = top_right;
 370:../src/renesas/application/r_opencv.cpp **** 	img_out = Mat(top_right, left_top, CV_8UC1, dst, 0);
 371:../src/renesas/application/r_opencv.cpp **** 
 372:../src/renesas/application/r_opencv.cpp **** 	warp_mat = getAffineTransform( srcTri, dstTri );
 373:../src/renesas/application/r_opencv.cpp **** 	warpAffine( img_in, img_out, warp_mat, img_out.size() );
 374:../src/renesas/application/r_opencv.cpp **** 	//threshold(img_out, img_out, 254, 255, CV_THRESH_BINARY);
 375:../src/renesas/application/r_opencv.cpp **** 
 376:../src/renesas/application/r_opencv.cpp **** 	img_in.release();
 377:../src/renesas/application/r_opencv.cpp **** 	img_out.release();
 378:../src/renesas/application/r_opencv.cpp **** 
 379:../src/renesas/application/r_opencv.cpp **** 
 380:../src/renesas/application/r_opencv.cpp **** 	return 0;
 381:../src/renesas/application/r_opencv.cpp **** }
 382:../src/renesas/application/r_opencv.cpp **** 
 383:../src/renesas/application/r_opencv.cpp **** /*
 384:../src/renesas/application/r_opencv.cpp **** type defiitiobn:
 385:../src/renesas/application/r_opencv.cpp **** 	CV_MOP_ERODE        =0,
 386:../src/renesas/application/r_opencv.cpp ****    	CV_MOP_DILATE       =1,
 387:../src/renesas/application/r_opencv.cpp **** 	CV_MOP_OPEN         =2,
 388:../src/renesas/application/r_opencv.cpp ****     CV_MOP_CLOSE        =3,
 389:../src/renesas/application/r_opencv.cpp **** */
 390:../src/renesas/application/r_opencv.cpp **** int cv_morphologyEx(uint8_t *img, uint16_t width, uint16_t height, uint16_t kw, uint16_t kh, int ty
 391:../src/renesas/application/r_opencv.cpp **** {
 392:../src/renesas/application/r_opencv.cpp **** 	Mat element = getStructuringElement(MORPH_RECT, Size(kw, kh) );
 393:../src/renesas/application/r_opencv.cpp **** 	Mat imgSrc, imgDst;
 394:../src/renesas/application/r_opencv.cpp **** 
 395:../src/renesas/application/r_opencv.cpp **** 	imgSrc = Mat(height,width,CV_8UC1,img);
 396:../src/renesas/application/r_opencv.cpp **** 	imgDst = Mat(height,width,CV_8UC1,out);
 397:../src/renesas/application/r_opencv.cpp **** 
 398:../src/renesas/application/r_opencv.cpp **** 	morphologyEx(imgSrc, imgDst, type, element);
 399:../src/renesas/application/r_opencv.cpp **** 
 400:../src/renesas/application/r_opencv.cpp **** 	imgSrc.release();
 401:../src/renesas/application/r_opencv.cpp **** 	imgDst.release();
 402:../src/renesas/application/r_opencv.cpp **** 
 403:../src/renesas/application/r_opencv.cpp **** 	//R_CACHE_L1DataInvalidLine((void *)out, width*height);
 404:../src/renesas/application/r_opencv.cpp **** 	R_CACHE_L1DataCleanInvalidAll();
 405:../src/renesas/application/r_opencv.cpp **** 
 406:../src/renesas/application/r_opencv.cpp **** 	return 0;
 407:../src/renesas/application/r_opencv.cpp **** }
 408:../src/renesas/application/r_opencv.cpp **** 
 409:../src/renesas/application/r_opencv.cpp **** #endif
 410:../src/renesas/application/r_opencv.cpp **** 
 411:../src/renesas/application/r_opencv.cpp **** #if 1
 412:../src/renesas/application/r_opencv.cpp **** 
 413:../src/renesas/application/r_opencv.cpp **** int cv_threshold(uint8_t *src, uint8_t *dst, uint16_t in_w, uint16_t in_h, uint8_t thres, uint8_t m
 414:../src/renesas/application/r_opencv.cpp **** {
 415:../src/renesas/application/r_opencv.cpp **** 	Mat mat_src;
 416:../src/renesas/application/r_opencv.cpp **** 	Mat mat_dst;
 417:../src/renesas/application/r_opencv.cpp **** 
 418:../src/renesas/application/r_opencv.cpp **** 	if (src != dst)
 419:../src/renesas/application/r_opencv.cpp **** 	{
 420:../src/renesas/application/r_opencv.cpp **** 		mat_src = Mat(in_h,in_w,CV_8UC1,src);
 421:../src/renesas/application/r_opencv.cpp **** 		mat_dst = Mat(in_h,in_w,CV_8UC1,dst);
 422:../src/renesas/application/r_opencv.cpp **** 
 423:../src/renesas/application/r_opencv.cpp **** 		if (mode == 0)
 424:../src/renesas/application/r_opencv.cpp **** 		{
 425:../src/renesas/application/r_opencv.cpp **** 			threshold(mat_src, mat_dst, thres, 255, THRESH_BINARY);
 426:../src/renesas/application/r_opencv.cpp **** 		}
 427:../src/renesas/application/r_opencv.cpp **** 		else
 428:../src/renesas/application/r_opencv.cpp **** 		{
 429:../src/renesas/application/r_opencv.cpp **** 			threshold(mat_src, mat_dst, 254, 255, THRESH_BINARY | THRESH_OTSU);
 430:../src/renesas/application/r_opencv.cpp **** 		}
 431:../src/renesas/application/r_opencv.cpp **** 
 432:../src/renesas/application/r_opencv.cpp **** 		mat_src.release();
 433:../src/renesas/application/r_opencv.cpp **** 		mat_dst.release();
 434:../src/renesas/application/r_opencv.cpp **** 	}
 435:../src/renesas/application/r_opencv.cpp **** 	else
 436:../src/renesas/application/r_opencv.cpp **** 	{
 437:../src/renesas/application/r_opencv.cpp **** 		mat_src = Mat(in_h,in_w,CV_8UC1,src);
 438:../src/renesas/application/r_opencv.cpp **** 		if (mode == 0)
 439:../src/renesas/application/r_opencv.cpp **** 		{
 440:../src/renesas/application/r_opencv.cpp **** 			threshold(mat_src, mat_src, thres, 255, THRESH_BINARY);
 441:../src/renesas/application/r_opencv.cpp **** 		}
 442:../src/renesas/application/r_opencv.cpp **** 		else
 443:../src/renesas/application/r_opencv.cpp **** 		{
 444:../src/renesas/application/r_opencv.cpp **** 			threshold(mat_src, mat_src, 254, 255, THRESH_BINARY | THRESH_OTSU);
 445:../src/renesas/application/r_opencv.cpp **** 		}
 446:../src/renesas/application/r_opencv.cpp **** 		mat_src.release();
 447:../src/renesas/application/r_opencv.cpp **** 	}
 448:../src/renesas/application/r_opencv.cpp **** 
 449:../src/renesas/application/r_opencv.cpp **** 	return 0;
 450:../src/renesas/application/r_opencv.cpp **** }
 451:../src/renesas/application/r_opencv.cpp **** 
 452:../src/renesas/application/r_opencv.cpp **** int cv_bitwise_not(uint8_t *src, uint16_t in_w, uint16_t in_h)
 453:../src/renesas/application/r_opencv.cpp **** {
 454:../src/renesas/application/r_opencv.cpp **** 	Mat mat_src;
 455:../src/renesas/application/r_opencv.cpp **** 
 456:../src/renesas/application/r_opencv.cpp **** 	mat_src = Mat(in_h,in_w,CV_8UC1,src);
 457:../src/renesas/application/r_opencv.cpp **** 
 458:../src/renesas/application/r_opencv.cpp **** 	bitwise_not(mat_src,mat_src);
 459:../src/renesas/application/r_opencv.cpp **** 
 460:../src/renesas/application/r_opencv.cpp **** 	mat_src.release();
 461:../src/renesas/application/r_opencv.cpp **** 
 462:../src/renesas/application/r_opencv.cpp **** 	return 0;
 463:../src/renesas/application/r_opencv.cpp **** }
  26              		.loc 1 463 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 010050E3 		cmp	r0, #1
  32 0004 1EFF2F11 		bxne	lr
  33              		.loc 1 463 0 is_stmt 0 discriminator 1
  34 0008 FF3F0FE3 		movw	r3, #65535
  35 000c 030051E1 		cmp	r1, r3
  36 0010 1EFF2F11 		bxne	lr
  37              		.loc 1 463 0
  38 0014 10402DE9 		push	{r4, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // Standard iostream objects -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** /** @file include/iostream
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****  *  This is a Standard C++ Library header.
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****  */
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** //
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** //
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** #define _GLIBCXX_IOSTREAM 1
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** #pragma GCC system_header
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** #include <bits/c++config.h>
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** #include <ostream>
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** #include <istream>
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** {
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   /**
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  @name Standard Stream Objects
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  objects</em>.  For other declarations, see
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  They are required by default to cooperate with the global C
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  library's @c FILE streams, and to be available during program
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  startup and termination. For more information, see the section of the
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****    *  manual linked to above.
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   */
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   //@{
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   extern istream cin;		/// Linked to standard input
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   extern ostream cout;		/// Linked to standard output
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   extern wistream wcin;		/// Linked to standard input
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   extern wostream wcout;	/// Linked to standard output
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** #endif
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   //@}
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream **** 
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\iostream ****   static ios_base::Init __ioinit;
  43              		.loc 2 74 0 is_stmt 1
  44 0018 004000E3 		movw	r4, #:lower16:.LANCHOR0
  45 001c 004040E3 		movt	r4, #:upper16:.LANCHOR0
  46 0020 0400A0E1 		mov	r0, r4
  47              	.LVL1:
  48 0024 FEFFFFEB 		bl	_ZNSt8ios_base4InitC1Ev
  49              	.LVL2:
  50 0028 002000E3 		movw	r2, #:lower16:__dso_handle
  51 002c 002040E3 		movt	r2, #:upper16:__dso_handle
  52 0030 001000E3 		movw	r1, #:lower16:_ZNSt8ios_base4InitD1Ev
  53 0034 001040E3 		movt	r1, #:upper16:_ZNSt8ios_base4InitD1Ev
  54 0038 0400A0E1 		mov	r0, r4
  55 003c FEFFFFEB 		bl	__aeabi_atexit
  56              	.LVL3:
  57              		.loc 1 463 0
  58 0040 1080BDE8 		pop	{r4, pc}
  59              		.cfi_endproc
  60              	.LFE10961:
  61              		.cantunwind
  62              		.fnend
  64              		.section	.text._ZN2cv3MatD2Ev,"axG",%progbits,_ZN2cv3MatD5Ev,comdat
  65              		.align	2
  66              		.weak	_ZN2cv3MatD2Ev
  67              		.syntax unified
  68              		.arm
  69              		.fpu neon
  71              	_ZN2cv3MatD2Ev:
  72              		.fnstart
  73              	.LFB4806:
  74              		.file 3 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0.
   1:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** /*M///////////////////////////////////////////////////////////////////////////////////////
   2:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
   3:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
   4:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
   5:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //  By downloading, copying, installing or using the software you agree to this license.
   6:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //  If you do not agree to this license, do not download, install,
   7:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //  copy or use the software.
   8:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
   9:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
  10:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //                          License Agreement
  11:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //                For Open Source Computer Vision Library
  12:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
  13:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // Copyright (C) 2000-2008, Intel Corporation, all rights reserved.
  14:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // Copyright (C) 2009, Willow Garage Inc., all rights reserved.
  15:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // Copyright (C) 2013, OpenCV Foundation, all rights reserved.
  16:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // Copyright (C) 2015, Itseez Inc., all rights reserved.
  17:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // Third party copyrights are property of their respective owners.
  18:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
  19:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // Redistribution and use in source and binary forms, with or without modification,
  20:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // are permitted provided that the following conditions are met:
  21:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
  22:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //   * Redistribution's of source code must retain the above copyright notice,
  23:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //     this list of conditions and the following disclaimer.
  24:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
  25:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //   * Redistribution's in binary form must reproduce the above copyright notice,
  26:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //     this list of conditions and the following disclaimer in the documentation
  27:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //     and/or other materials provided with the distribution.
  28:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
  29:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //   * The name of the copyright holders may not be used to endorse or promote products
  30:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //     derived from this software without specific prior written permission.
  31:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
  32:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // This software is provided by the copyright holders and contributors "as is" and
  33:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // any express or implied warranties, including, but not limited to, the implied
  34:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // warranties of merchantability and fitness for a particular purpose are disclaimed.
  35:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // In no event shall the Intel Corporation or contributors be liable for any direct,
  36:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // indirect, incidental, special, exemplary, or consequential damages
  37:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // (including, but not limited to, procurement of substitute goods or services;
  38:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // loss of use, data, or profits; or business interruption) however caused
  39:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // and on any theory of liability, whether in contract, strict liability,
  40:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // or tort (including negligence or otherwise) arising in any way out of
  41:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** // the use of this software, even if advised of the possibility of such damage.
  42:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //
  43:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //M*/
  44:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  45:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifndef OPENCV_CORE_MATRIX_OPERATIONS_HPP
  46:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #define OPENCV_CORE_MATRIX_OPERATIONS_HPP
  47:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  48:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifndef __cplusplus
  49:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #  error mat.inl.hpp header must be compiled as C++
  50:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #endif
  51:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  52:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** namespace cv
  53:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
  54:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  55:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //! @cond IGNORED
  56:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  57:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //////////////////////// Input/Output Arrays ////////////////////////
  58:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  59:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline void _InputArray::init(int _flags, const void* _obj)
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { flags = _flags; obj = (void*)_obj; }
  61:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  62:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline void _InputArray::init(int _flags, const void* _obj, Size _sz)
  63:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { flags = _flags; obj = (void*)_obj; sz = _sz; }
  64:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  65:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline void* _InputArray::getObj() const { return obj; }
  66:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline int _InputArray::getFlags() const { return flags; }
  67:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline Size _InputArray::getSz() const { return sz; }
  68:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  69:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray() { init(NONE, 0); }
  70:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(int _flags, void* _obj) { init(_flags, _obj); }
  71:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const Mat& m) { init(MAT+ACCESS_READ, &m); }
  72:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const std::vector<Mat>& vec) { init(STD_VECTOR_MAT+ACCESS_READ, &ve
  73:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const UMat& m) { init(UMAT+ACCESS_READ, &m); }
  74:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const std::vector<UMat>& vec) { init(STD_VECTOR_UMAT+ACCESS_READ, &
  75:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  76:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
  77:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputArray::_InputArray(const std::vector<_Tp>& vec)
  78:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR + DataType<_Tp>::type + ACCESS_READ, &vec); }
  79:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  80:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
  81:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputArray::_InputArray(const std::vector<bool>& vec)
  82:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_BOOL_VECTOR + DataType<bool>::type + ACCESS_READ, &vec); }
  83:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  84:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
  85:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputArray::_InputArray(const std::vector<std::vector<_Tp> >& vec)
  86:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR_VECTOR + DataType<_Tp>::type + ACCESS_READ, &vec); }
  87:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  88:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
  89:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputArray::_InputArray(const std::vector<Mat_<_Tp> >& vec)
  90:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR_MAT + DataType<_Tp>::type + ACCESS_READ, &vec); }
  91:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  92:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int m, int n> inline
  93:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputArray::_InputArray(const Matx<_Tp, m, n>& mtx)
  94:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_READ, &mtx, Size(n, m)); }
  95:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
  96:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
  97:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputArray::_InputArray(const _Tp* vec, int n)
  98:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_READ, vec, Size(n, 1)); }
  99:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 100:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 101:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputArray::_InputArray(const Mat_<_Tp>& m)
 102:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + MAT + DataType<_Tp>::type + ACCESS_READ, &m); }
 103:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 104:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const double& val)
 105:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + CV_64F + ACCESS_READ, &val, Size(1,1)); }
 106:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 107:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const MatExpr& expr)
 108:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + EXPR + ACCESS_READ, &expr); }
 109:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 110:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const cuda::GpuMat& d_mat)
 111:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(CUDA_GPU_MAT + ACCESS_READ, &d_mat); }
 112:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 113:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const std::vector<cuda::GpuMat>& d_mat)
 114:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {	init(STD_VECTOR_CUDA_GPU_MAT + ACCESS_READ, &d_mat);}
 115:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 116:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const ogl::Buffer& buf)
 117:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(OPENGL_BUFFER + ACCESS_READ, &buf); }
 118:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 119:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::_InputArray(const cuda::HostMem& cuda_mem)
 120:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(CUDA_HOST_MEM + ACCESS_READ, &cuda_mem); }
 121:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 122:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputArray::~_InputArray() {}
 123:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 124:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline Mat _InputArray::getMat(int i) const
 125:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 126:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( kind() == MAT && i < 0 )
 127:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return *(const Mat*)obj;
 128:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return getMat_(i);
 129:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 130:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 131:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline bool _InputArray::isMat() const { return kind() == _InputArray::MAT; }
 132:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline bool _InputArray::isUMat() const  { return kind() == _InputArray::UMAT; }
 133:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline bool _InputArray::isMatVector() const { return kind() == _InputArray::STD_VECTOR_MAT; }
 134:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline bool _InputArray::isUMatVector() const  { return kind() == _InputArray::STD_VECTOR_UMAT; }
 135:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline bool _InputArray::isMatx() const { return kind() == _InputArray::MATX; }
 136:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline bool _InputArray::isVector() const { return kind() == _InputArray::STD_VECTOR || kind() == _
 137:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline bool _InputArray::isGpuMatVector() const { return kind() == _InputArray::STD_VECTOR_CUDA_GPU
 138:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 139:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** ////////////////////////////////////////////////////////////////////////////////////////
 140:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 141:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray() { init(ACCESS_WRITE, 0); }
 142:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(int _flags, void* _obj) { init(_flags|ACCESS_WRITE, _obj); }
 143:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(Mat& m) { init(MAT+ACCESS_WRITE, &m); }
 144:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(std::vector<Mat>& vec) { init(STD_VECTOR_MAT+ACCESS_WRITE, &vec);
 145:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(UMat& m) { init(UMAT+ACCESS_WRITE, &m); }
 146:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(std::vector<UMat>& vec) { init(STD_VECTOR_UMAT+ACCESS_WRITE, &vec
 147:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 148:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 149:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(std::vector<_Tp>& vec)
 150:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR + DataType<_Tp>::type + ACCESS_WRITE, &vec); }
 151:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 152:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 153:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(std::vector<bool>&)
 154:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { CV_Error(Error::StsUnsupportedFormat, "std::vector<bool> cannot be an output array\n"); }
 155:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 156:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 157:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(std::vector<std::vector<_Tp> >& vec)
 158:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR_VECTOR + DataType<_Tp>::type + ACCESS_WRITE, &vec); }
 159:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 160:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 161:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(std::vector<Mat_<_Tp> >& vec)
 162:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR_MAT + DataType<_Tp>::type + ACCESS_WRITE, &vec); }
 163:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 164:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 165:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(Mat_<_Tp>& m)
 166:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + MAT + DataType<_Tp>::type + ACCESS_WRITE, &m); }
 167:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 168:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int m, int n> inline
 169:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(Matx<_Tp, m, n>& mtx)
 170:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_WRITE, &mtx, Size(n, m)); }
 171:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 172:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 173:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(_Tp* vec, int n)
 174:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_WRITE, vec, Size(n, 1)); }
 175:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 176:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 177:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(const std::vector<_Tp>& vec)
 178:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + STD_VECTOR + DataType<_Tp>::type + ACCESS_WRITE, &vec); }
 179:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 180:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 181:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(const std::vector<std::vector<_Tp> >& vec)
 182:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + STD_VECTOR_VECTOR + DataType<_Tp>::type + ACCESS_WRITE, &vec); }
 183:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 184:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 185:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(const std::vector<Mat_<_Tp> >& vec)
 186:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + STD_VECTOR_MAT + DataType<_Tp>::type + ACCESS_WRITE, &vec); }
 187:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 188:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 189:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(const Mat_<_Tp>& m)
 190:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MAT + DataType<_Tp>::type + ACCESS_WRITE, &m); }
 191:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 192:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int m, int n> inline
 193:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(const Matx<_Tp, m, n>& mtx)
 194:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_WRITE, &mtx, Size(n, m)); }
 195:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 196:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 197:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _OutputArray::_OutputArray(const _Tp* vec, int n)
 198:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_WRITE, vec, Size(n, 1)); }
 199:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 200:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(cuda::GpuMat& d_mat)
 201:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(CUDA_GPU_MAT + ACCESS_WRITE, &d_mat); }
 202:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 203:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(std::vector<cuda::GpuMat>& d_mat)
 204:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {	init(STD_VECTOR_CUDA_GPU_MAT + ACCESS_WRITE, &d_mat);}
 205:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 206:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(ogl::Buffer& buf)
 207:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(OPENGL_BUFFER + ACCESS_WRITE, &buf); }
 208:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 209:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(cuda::HostMem& cuda_mem)
 210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(CUDA_HOST_MEM + ACCESS_WRITE, &cuda_mem); }
 211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(const Mat& m)
 213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MAT + ACCESS_WRITE, &m); }
 214:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(const std::vector<Mat>& vec)
 216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_SIZE + STD_VECTOR_MAT + ACCESS_WRITE, &vec); }
 217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 218:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(const UMat& m)
 219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + UMAT + ACCESS_WRITE, &m); }
 220:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(const std::vector<UMat>& vec)
 222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_SIZE + STD_VECTOR_UMAT + ACCESS_WRITE, &vec); }
 223:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 224:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(const cuda::GpuMat& d_mat)
 225:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + CUDA_GPU_MAT + ACCESS_WRITE, &d_mat); }
 226:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(const ogl::Buffer& buf)
 229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + OPENGL_BUFFER + ACCESS_WRITE, &buf); }
 230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 231:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _OutputArray::_OutputArray(const cuda::HostMem& cuda_mem)
 232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + CUDA_HOST_MEM + ACCESS_WRITE, &cuda_mem); }
 233:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** ///////////////////////////////////////////////////////////////////////////////////////////
 235:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 236:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray() { init(ACCESS_RW, 0); }
 237:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(int _flags, void* _obj) { init(_flags|ACCESS_RW, _obj);
 238:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(Mat& m) { init(MAT+ACCESS_RW, &m); }
 239:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(std::vector<Mat>& vec) { init(STD_VECTOR_MAT+ACCESS_RW,
 240:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(UMat& m) { init(UMAT+ACCESS_RW, &m); }
 241:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(std::vector<UMat>& vec) { init(STD_VECTOR_UMAT+ACCESS_R
 242:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 243:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 244:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(std::vector<_Tp>& vec)
 245:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR + DataType<_Tp>::type + ACCESS_RW, &vec); }
 246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 247:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(std::vector<bool>&)
 248:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { CV_Error(Error::StsUnsupportedFormat, "std::vector<bool> cannot be an input/output array\n"); }
 249:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 250:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 251:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(std::vector<std::vector<_Tp> >& vec)
 252:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR_VECTOR + DataType<_Tp>::type + ACCESS_RW, &vec); }
 253:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 254:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 255:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(std::vector<Mat_<_Tp> >& vec)
 256:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + STD_VECTOR_MAT + DataType<_Tp>::type + ACCESS_RW, &vec); }
 257:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 258:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 259:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(Mat_<_Tp>& m)
 260:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + MAT + DataType<_Tp>::type + ACCESS_RW, &m); }
 261:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 262:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int m, int n> inline
 263:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(Matx<_Tp, m, n>& mtx)
 264:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_RW, &mtx, Size(n, m)); }
 265:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 266:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 267:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(_Tp* vec, int n)
 268:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_RW, vec, Size(n, 1)); }
 269:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 270:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 271:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(const std::vector<_Tp>& vec)
 272:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + STD_VECTOR + DataType<_Tp>::type + ACCESS_RW, &vec); }
 273:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 274:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 275:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(const std::vector<std::vector<_Tp> >& vec)
 276:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + STD_VECTOR_VECTOR + DataType<_Tp>::type + ACCESS_RW, &vec); }
 277:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 278:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 279:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(const std::vector<Mat_<_Tp> >& vec)
 280:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + STD_VECTOR_MAT + DataType<_Tp>::type + ACCESS_RW, &vec); }
 281:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 282:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 283:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(const Mat_<_Tp>& m)
 284:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MAT + DataType<_Tp>::type + ACCESS_RW, &m); }
 285:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 286:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int m, int n> inline
 287:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(const Matx<_Tp, m, n>& mtx)
 288:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_RW, &mtx, Size(n, m)); }
 289:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 290:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 291:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _InputOutputArray::_InputOutputArray(const _Tp* vec, int n)
 292:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MATX + DataType<_Tp>::type + ACCESS_RW, vec, Size(n, 1)); }
 293:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 294:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(cuda::GpuMat& d_mat)
 295:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(CUDA_GPU_MAT + ACCESS_RW, &d_mat); }
 296:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 297:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(ogl::Buffer& buf)
 298:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(OPENGL_BUFFER + ACCESS_RW, &buf); }
 299:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 300:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(cuda::HostMem& cuda_mem)
 301:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(CUDA_HOST_MEM + ACCESS_RW, &cuda_mem); }
 302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 303:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(const Mat& m)
 304:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + MAT + ACCESS_RW, &m); }
 305:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 306:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(const std::vector<Mat>& vec)
 307:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_SIZE + STD_VECTOR_MAT + ACCESS_RW, &vec); }
 308:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 309:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(const UMat& m)
 310:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + UMAT + ACCESS_RW, &m); }
 311:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 312:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(const std::vector<UMat>& vec)
 313:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_SIZE + STD_VECTOR_UMAT + ACCESS_RW, &vec); }
 314:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 315:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(const cuda::GpuMat& d_mat)
 316:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + CUDA_GPU_MAT + ACCESS_RW, &d_mat); }
 317:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 318:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(const std::vector<cuda::GpuMat>& d_mat)
 319:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + STD_VECTOR_CUDA_GPU_MAT + ACCESS_RW, &d_mat);}
 320:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 321:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<> inline _InputOutputArray::_InputOutputArray(std::vector<cuda::GpuMat>& d_mat)
 322:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + STD_VECTOR_CUDA_GPU_MAT + ACCESS_RW, &d_mat);}
 323:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 324:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(const ogl::Buffer& buf)
 325:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + OPENGL_BUFFER + ACCESS_RW, &buf); }
 326:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 327:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline _InputOutputArray::_InputOutputArray(const cuda::HostMem& cuda_mem)
 328:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** { init(FIXED_TYPE + FIXED_SIZE + CUDA_HOST_MEM + ACCESS_RW, &cuda_mem); }
 329:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 330:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** //////////////////////////////////////////// Mat //////////////////////////////////////////
 331:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 332:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 333:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat()
 334:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 335:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 336:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {}
 337:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 338:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 339:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(int _rows, int _cols, int _type)
 340:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 341:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 342:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 343:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(_rows, _cols, _type);
 344:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 345:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 346:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 347:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(int _rows, int _cols, int _type, const Scalar& _s)
 348:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 349:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 350:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 351:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(_rows, _cols, _type);
 352:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     *this = _s;
 353:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 354:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 355:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 356:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(Size _sz, int _type)
 357:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 358:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 359:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 360:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create( _sz.height, _sz.width, _type );
 361:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 362:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 363:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 364:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(Size _sz, int _type, const Scalar& _s)
 365:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 366:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 367:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 368:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(_sz.height, _sz.width, _type);
 369:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     *this = _s;
 370:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 371:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 372:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 373:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(int _dims, const int* _sz, int _type)
 374:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 375:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 376:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 377:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(_dims, _sz, _type);
 378:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 379:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 380:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 381:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(int _dims, const int* _sz, int _type, const Scalar& _s)
 382:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 383:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 384:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 385:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(_dims, _sz, _type);
 386:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     *this = _s;
 387:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 388:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 389:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 390:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const std::vector<int>& _sz, int _type)
 391:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 392:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 393:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 394:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(_sz, _type);
 395:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 396:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 397:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 398:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const std::vector<int>& _sz, int _type, const Scalar& _s)
 399:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL), dims(0), rows(0), cols(0), data(0), datastart(0), dataend(0),
 400:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datalimit(0), allocator(0), u(0), size(&rows)
 401:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 402:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(_sz, _type);
 403:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     *this = _s;
 404:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 405:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 406:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 407:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const Mat& m)
 408:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(m.flags), dims(m.dims), rows(m.rows), cols(m.cols), data(m.data),
 409:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datastart(m.datastart), dataend(m.dataend), datalimit(m.datalimit), allocator(m.allocator),
 410:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       u(m.u), size(&rows)
 411:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 412:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( u )
 413:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         CV_XADD(&u->refcount, 1);
 414:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( m.dims <= 2 )
 415:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 416:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[0] = m.step[0]; step[1] = m.step[1];
 417:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 418:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 419:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 420:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         dims = 0;
 421:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         copySize(m);
 422:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 423:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 424:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 425:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 426:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(int _rows, int _cols, int _type, void* _data, size_t _step)
 427:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL + (_type & TYPE_MASK)), dims(2), rows(_rows), cols(_cols),
 428:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       data((uchar*)_data), datastart((uchar*)_data), dataend(0), datalimit(0),
 429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       allocator(0), u(0), size(&rows)
 430:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_Assert(total() == 0 || data != NULL);
 432:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 433:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t esz = CV_ELEM_SIZE(_type), esz1 = CV_ELEM_SIZE1(_type);
 434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t minstep = cols * esz;
 435:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( _step == AUTO_STEP )
 436:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 437:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         _step = minstep;
 438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         flags |= CONTINUOUS_FLAG;
 439:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 440:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 441:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 442:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         if( rows == 1 ) _step = minstep;
 443:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         CV_DbgAssert( _step >= minstep );
 444:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 445:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         if (_step % esz1 != 0)
 446:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         {
 447:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             CV_Error(Error::BadStep, "Step must be a multiple of esz1");
 448:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         }
 449:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 450:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         flags |= _step == minstep ? CONTINUOUS_FLAG : 0;
 451:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     step[0] = _step;
 453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     step[1] = esz;
 454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datalimit = datastart + _step * rows;
 455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     dataend = datalimit - _step + minstep;
 456:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 457:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 458:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 459:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(Size _sz, int _type, void* _data, size_t _step)
 460:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL + (_type & TYPE_MASK)), dims(2), rows(_sz.height), cols(_sz.width),
 461:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       data((uchar*)_data), datastart((uchar*)_data), dataend(0), datalimit(0),
 462:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       allocator(0), u(0), size(&rows)
 463:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 464:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_Assert(total() == 0 || data != NULL);
 465:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 466:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t esz = CV_ELEM_SIZE(_type), esz1 = CV_ELEM_SIZE1(_type);
 467:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t minstep = cols*esz;
 468:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( _step == AUTO_STEP )
 469:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 470:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         _step = minstep;
 471:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         flags |= CONTINUOUS_FLAG;
 472:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 473:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 474:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 475:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         if( rows == 1 ) _step = minstep;
 476:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         CV_DbgAssert( _step >= minstep );
 477:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 478:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         if (_step % esz1 != 0)
 479:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         {
 480:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             CV_Error(Error::BadStep, "Step must be a multiple of esz1");
 481:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         }
 482:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 483:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         flags |= _step == minstep ? CONTINUOUS_FLAG : 0;
 484:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 485:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     step[0] = _step;
 486:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     step[1] = esz;
 487:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datalimit = datastart + _step*rows;
 488:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     dataend = datalimit - _step + minstep;
 489:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 490:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 491:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 492:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const std::vector<_Tp>& vec, bool copyData)
 493:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL | DataType<_Tp>::type | CV_MAT_CONT_FLAG), dims(2), rows((int)vec.size()),
 494:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       cols(1), data(0), datastart(0), dataend(0), allocator(0), u(0), size(&rows)
 495:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 496:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if(vec.empty())
 497:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return;
 498:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( !copyData )
 499:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 500:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[0] = step[1] = sizeof(_Tp);
 501:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datastart = data = (uchar*)&vec[0];
 502:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datalimit = dataend = datastart + rows * step[0];
 503:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 504:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 505:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         Mat((int)vec.size(), 1, DataType<_Tp>::type, (uchar*)&vec[0]).copyTo(*this);
 506:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 507:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 508:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int n> inline
 509:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const Vec<_Tp, n>& vec, bool copyData)
 510:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL | DataType<_Tp>::type | CV_MAT_CONT_FLAG), dims(2), rows(n), cols(1), data(0)
 511:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datastart(0), dataend(0), allocator(0), u(0), size(&rows)
 512:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 513:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( !copyData )
 514:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 515:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[0] = step[1] = sizeof(_Tp);
 516:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datastart = data = (uchar*)vec.val;
 517:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datalimit = dataend = datastart + rows * step[0];
 518:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 519:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 520:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         Mat(n, 1, DataType<_Tp>::type, (void*)vec.val).copyTo(*this);
 521:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 522:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 523:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 524:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int m, int n> inline
 525:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const Matx<_Tp,m,n>& M, bool copyData)
 526:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL | DataType<_Tp>::type | CV_MAT_CONT_FLAG), dims(2), rows(m), cols(n), data(0)
 527:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datastart(0), dataend(0), allocator(0), u(0), size(&rows)
 528:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 529:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( !copyData )
 530:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 531:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[0] = cols * sizeof(_Tp);
 532:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[1] = sizeof(_Tp);
 533:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datastart = data = (uchar*)M.val;
 534:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datalimit = dataend = datastart + rows * step[0];
 535:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 536:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 537:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         Mat(m, n, DataType<_Tp>::type, (uchar*)M.val).copyTo(*this);
 538:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 539:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 540:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 541:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const Point_<_Tp>& pt, bool copyData)
 542:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL | DataType<_Tp>::type | CV_MAT_CONT_FLAG), dims(2), rows(2), cols(1), data(0)
 543:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datastart(0), dataend(0), allocator(0), u(0), size(&rows)
 544:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 545:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( !copyData )
 546:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 547:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[0] = step[1] = sizeof(_Tp);
 548:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datastart = data = (uchar*)&pt.x;
 549:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datalimit = dataend = datastart + rows * step[0];
 550:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 551:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 552:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 553:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         create(2, 1, DataType<_Tp>::type);
 554:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         ((_Tp*)data)[0] = pt.x;
 555:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         ((_Tp*)data)[1] = pt.y;
 556:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 557:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 558:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 559:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 560:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const Point3_<_Tp>& pt, bool copyData)
 561:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL | DataType<_Tp>::type | CV_MAT_CONT_FLAG), dims(2), rows(3), cols(1), data(0)
 562:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datastart(0), dataend(0), allocator(0), u(0), size(&rows)
 563:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 564:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( !copyData )
 565:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 566:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[0] = step[1] = sizeof(_Tp);
 567:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datastart = data = (uchar*)&pt.x;
 568:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datalimit = dataend = datastart + rows * step[0];
 569:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 570:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 571:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 572:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         create(3, 1, DataType<_Tp>::type);
 573:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         ((_Tp*)data)[0] = pt.x;
 574:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         ((_Tp*)data)[1] = pt.y;
 575:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         ((_Tp*)data)[2] = pt.z;
 576:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 577:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 578:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 579:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 580:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(const MatCommaInitializer_<_Tp>& commaInitializer)
 581:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(MAGIC_VAL | DataType<_Tp>::type | CV_MAT_CONT_FLAG), dims(0), rows(0), cols(0), data(0)
 582:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datastart(0), dataend(0), allocator(0), u(0), size(&rows)
 583:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 584:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     *this = commaInitializer.operator Mat_<_Tp>();
 585:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 586:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 587:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 588:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::~Mat()
  75              		.loc 3 588 0
  76              		.cfi_startproc
  77              		.cfi_personality 0,__gxx_personality_v0
  78              		.cfi_lsda 0,.LLSDA4806
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL4:
  82 0000 10402DE9 		push	{r4, lr}
  83              		.save {r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
  87 0004 0040A0E1 		mov	r4, r0
  88              	.LVL5:
  89              	.LBB262:
  90              	.LBB263:
  91              	.LBB264:
 589:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 590:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     release();
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( step.p != step.buf )
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 593:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 594:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 595:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 596:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat& Mat::operator = (const Mat& m)
 597:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 598:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( this != &m )
 599:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 600:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         if( m.u )
 601:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             CV_XADD(&m.u->refcount, 1);
 602:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         release();
 603:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         flags = m.flags;
 604:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         if( dims <= 2 && m.dims <= 2 )
 605:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         {
 606:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             dims = m.dims;
 607:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             rows = m.rows;
 608:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             cols = m.cols;
 609:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             step[0] = m.step[0];
 610:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             step[1] = m.step[1];
 611:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         }
 612:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         else
 613:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             copySize(m);
 614:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         data = m.data;
 615:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datastart = m.datastart;
 616:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         dataend = m.dataend;
 617:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         datalimit = m.datalimit;
 618:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         allocator = m.allocator;
 619:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         u = m.u;
 620:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 621:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return *this;
 622:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 623:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 624:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 625:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::row(int y) const
 626:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 627:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, Range(y, y + 1), Range::all());
 628:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 629:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 630:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 631:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::col(int x) const
 632:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 633:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, Range::all(), Range(x, x + 1));
 634:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 635:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 636:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 637:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::rowRange(int startrow, int endrow) const
 638:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 639:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, Range(startrow, endrow), Range::all());
 640:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 641:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 642:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 643:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::rowRange(const Range& r) const
 644:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 645:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, r, Range::all());
 646:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 647:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 648:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 649:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::colRange(int startcol, int endcol) const
 650:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 651:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, Range::all(), Range(startcol, endcol));
 652:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 653:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 654:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 655:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::colRange(const Range& r) const
 656:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 657:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, Range::all(), r);
 658:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 659:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 660:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 661:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::clone() const
 662:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 663:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     Mat m;
 664:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     copyTo(m);
 665:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return m;
 666:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 667:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 668:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 669:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::assignTo( Mat& m, int _type ) const
 670:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 671:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( _type < 0 )
 672:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m = *this;
 673:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
 674:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         convertTo(m, _type);
 675:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 676:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 677:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 678:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::create(int _rows, int _cols, int _type)
 679:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 680:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     _type &= TYPE_MASK;
 681:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( dims <= 2 && rows == _rows && cols == _cols && type() == _type && data )
 682:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return;
 683:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     int sz[] = {_rows, _cols};
 684:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(2, sz, _type);
 685:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 686:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 687:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 688:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::create(Size _sz, int _type)
 689:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 690:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     create(_sz.height, _sz.width, _type);
 691:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 692:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 693:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 694:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::addref()
 695:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 696:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( u )
 697:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         CV_XADD(&u->refcount, 1);
 698:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 699:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 700:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 701:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::release()
 702:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( u && CV_XADD(&u->refcount, -1) == 1 )
  92              		.loc 3 703 0
  93 0008 243090E5 		ldr	r3, [r0, #36]
  94 000c 000053E3 		cmp	r3, #0
  95 0010 0900000A 		beq	.L8
  96 0014 0C3083E2 		add	r3, r3, #12
  97 0018 5BF07FF5 		dmb	ish
  98              	.LVL6:
  99              	.L12:
 100 001c 9F2F93E1 		ldrex	r2, [r3]
 101 0020 011042E2 		sub	r1, r2, #1
 102 0024 910F83E1 		strex	r0, r1, [r3]
 103 0028 000050E3 		cmp	r0, #0
 104 002c FAFFFF1A 		bne	.L12
 105 0030 5BF07FF5 		dmb	ish
 106 0034 010052E3 		cmp	r2, #1
 107 0038 0D00000A 		beq	.L14
 108              	.L8:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 109              		.loc 3 705 0
 110 003c 0030A0E3 		mov	r3, #0
 111 0040 243084E5 		str	r3, [r4, #36]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 112              		.loc 3 706 0
 113 0044 103084E5 		str	r3, [r4, #16]
 114 0048 1C3084E5 		str	r3, [r4, #28]
 115 004c 183084E5 		str	r3, [r4, #24]
 116 0050 143084E5 		str	r3, [r4, #20]
 117              	.LVL7:
 118              	.L10:
 119              	.LBB265:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 120              		.loc 3 707 0
 121 0054 042094E5 		ldr	r2, [r4, #4]
 122 0058 030052E1 		cmp	r2, r3
 123 005c 070000DA 		ble	.L9
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 124              		.loc 3 708 0
 125 0060 282094E5 		ldr	r2, [r4, #40]
 126 0064 0010A0E3 		mov	r1, #0
 127 0068 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 128              		.loc 3 707 0
 129 006c 013083E2 		add	r3, r3, #1
 130              	.LVL8:
 131 0070 F7FFFFEA 		b	.L10
 132              	.LVL9:
 133              	.L14:
 134              	.LBE265:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 135              		.loc 3 704 0
 136 0074 0400A0E1 		mov	r0, r4
 137 0078 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 138              	.LVL10:
 139 007c EEFFFFEA 		b	.L8
 140              	.LVL11:
 141              	.L9:
 142              	.LBE264:
 143              	.LBE263:
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 144              		.loc 3 591 0
 145 0080 2C0094E5 		ldr	r0, [r4, #44]
 146 0084 303084E2 		add	r3, r4, #48
 147 0088 030050E1 		cmp	r0, r3
 148 008c 0000000A 		beq	.L11
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 149              		.loc 3 592 0
 150 0090 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 151              	.LVL12:
 152              	.L11:
 153              	.LBE262:
 593:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 154              		.loc 3 593 0
 155 0094 0400A0E1 		mov	r0, r4
 156 0098 1080BDE8 		pop	{r4, pc}
 157              		.cfi_endproc
 158              	.LFE4806:
 159              		.global	__gxx_personality_v0
 160              		.personality	__gxx_personality_v0
 161              		.handlerdata
 162              	.LLSDA4806:
 163 0008 FF       		.byte	0xff
 164 0009 FF       		.byte	0xff
 165 000a 01       		.byte	0x1
 166 000b 00       		.uleb128 .LLSDACSE4806-.LLSDACSB4806
 167              	.LLSDACSB4806:
 168              	.LLSDACSE4806:
 169              		.section	.text._ZN2cv3MatD2Ev,"axG",%progbits,_ZN2cv3MatD5Ev,comdat
 170              		.fnend
 172              		.weak	_ZN2cv3MatD1Ev
 173              		.set	_ZN2cv3MatD1Ev,_ZN2cv3MatD2Ev
 174              		.section	.text.cv_threshold,"ax",%progbits
 175              		.align	2
 176              		.global	cv_threshold
 177              		.syntax unified
 178              		.arm
 179              		.fpu neon
 181              	cv_threshold:
 182              		.fnstart
 183              	.LFB8637:
 414:../src/renesas/application/r_opencv.cpp **** 	Mat mat_src;
 184              		.loc 1 414 0
 185              		.cfi_startproc
 186              		.cfi_personality 0,__gxx_personality_v0
 187              		.cfi_lsda 0,.LLSDA8637
 188              		@ args = 8, pretend = 0, frame = 320
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              	.LVL13:
 191 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 192              		.save {r4, r5, r6, r7, r8, lr}
 193              		.cfi_def_cfa_offset 24
 194              		.cfi_offset 4, -24
 195              		.cfi_offset 5, -20
 196              		.cfi_offset 6, -16
 197              		.cfi_offset 7, -12
 198              		.cfi_offset 8, -8
 199              		.cfi_offset 14, -4
 200              		.pad #328
 201 0004 52DF4DE2 		sub	sp, sp, #328
 202              		.cfi_def_cfa_offset 352
 203 0008 0180A0E1 		mov	r8, r1
 204 000c 0260A0E1 		mov	r6, r2
 205 0010 0370A0E1 		mov	r7, r3
 206 0014 6051DDE5 		ldrb	r5, [sp, #352]	@ zero_extendqisi2
 207 0018 6441DDE5 		ldrb	r4, [sp, #356]	@ zero_extendqisi2
 208              	.LVL14:
 209              	.LBB544:
 210              	.LBB545:
 335:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {}
 211              		.loc 3 335 0
 212 001c 0020A0E3 		mov	r2, #0
 213              	.LVL15:
 214 0020 FF2244E3 		movt	r2, 17151
 215 0024 78208DE5 		str	r2, [sp, #120]
 216 0028 0030A0E3 		mov	r3, #0
 217              	.LVL16:
 218 002c 7C308DE5 		str	r3, [sp, #124]
 219 0030 80308DE5 		str	r3, [sp, #128]
 220 0034 84308DE5 		str	r3, [sp, #132]
 221 0038 88308DE5 		str	r3, [sp, #136]
 222 003c 8C308DE5 		str	r3, [sp, #140]
 223 0040 90308DE5 		str	r3, [sp, #144]
 224 0044 94308DE5 		str	r3, [sp, #148]
 225 0048 98308DE5 		str	r3, [sp, #152]
 226 004c 9C308DE5 		str	r3, [sp, #156]
 227              	.LVL17:
 228              	.LBB546:
 229              	.LBB547:
 230              	.LBB548:
 709:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 710:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     flags = MAGIC_VAL;
 711:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     dims = rows = cols = 0;
 712:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if(step.p != step.buf)
 713:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 714:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 715:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step.p = step.buf;
 716:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = &rows;
 717:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 718:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #endif
 719:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 720:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 721:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 722:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::operator()( Range _rowRange, Range _colRange ) const
 723:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 724:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, _rowRange, _colRange);
 725:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 726:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 727:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 728:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::operator()( const Rect& roi ) const
 729:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 730:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, roi);
 731:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 732:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 733:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 734:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::operator()(const Range* ranges) const
 735:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 736:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, ranges);
 737:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 738:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 739:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 740:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat Mat::operator()(const std::vector<Range>& ranges) const
 741:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 742:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Mat(*this, ranges);
 743:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 744:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 745:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 746:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** bool Mat::isContinuous() const
 747:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 748:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return (flags & CONTINUOUS_FLAG) != 0;
 749:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 750:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 751:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 752:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** bool Mat::isSubmatrix() const
 753:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 754:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return (flags & SUBMATRIX_FLAG) != 0;
 755:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 756:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 757:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 758:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** size_t Mat::elemSize() const
 759:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 760:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return dims > 0 ? step.p[dims - 1] : 0;
 761:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 762:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 763:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 764:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** size_t Mat::elemSize1() const
 765:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 766:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return CV_ELEM_SIZE1(flags);
 767:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 768:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 769:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 770:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** int Mat::type() const
 771:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 772:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return CV_MAT_TYPE(flags);
 773:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 774:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 775:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 776:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** int Mat::depth() const
 777:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 778:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return CV_MAT_DEPTH(flags);
 779:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 780:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 781:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 782:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** int Mat::channels() const
 783:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 784:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return CV_MAT_CN(flags);
 785:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 786:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 787:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 788:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** size_t Mat::step1(int i) const
 789:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 790:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return step.p[i] / elemSize1();
 791:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 792:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 793:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 794:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** bool Mat::empty() const
 795:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 796:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return data == 0 || total() == 0;
 797:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 798:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 799:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 800:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** size_t Mat::total() const
 801:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 802:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( dims <= 2 )
 803:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return (size_t)rows * cols;
 804:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t p = 1;
 805:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for( int i = 0; i < dims; i++ )
 806:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         p *= size[i];
 807:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return p;
 808:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 809:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 810:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 811:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** uchar* Mat::ptr(int y)
 812:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 813:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( y == 0 || (data && dims >= 1 && (unsigned)y < (unsigned)size.p[0]) );
 814:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return data + step.p[0] * y;
 815:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 816:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 817:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 818:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const uchar* Mat::ptr(int y) const
 819:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 820:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( y == 0 || (data && dims >= 1 && (unsigned)y < (unsigned)size.p[0]) );
 821:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return data + step.p[0] * y;
 822:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 823:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 824:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 825:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp* Mat::ptr(int y)
 826:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 827:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( y == 0 || (data && dims >= 1 && (unsigned)y < (unsigned)size.p[0]) );
 828:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return (_Tp*)(data + step.p[0] * y);
 829:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 830:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 831:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 832:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp* Mat::ptr(int y) const
 833:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 834:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( y == 0 || (data && dims >= 1 && data && (unsigned)y < (unsigned)size.p[0]) );
 835:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return (const _Tp*)(data + step.p[0] * y);
 836:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 837:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 838:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 839:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** uchar* Mat::ptr(int i0, int i1)
 840:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 841:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims >= 2);
 842:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 843:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 844:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i1 < (unsigned)size.p[1]);
 845:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return data + i0 * step.p[0] + i1 * step.p[1];
 846:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 847:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 848:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 849:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const uchar* Mat::ptr(int i0, int i1) const
 850:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 851:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims >= 2);
 852:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 853:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 854:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i1 < (unsigned)size.p[1]);
 855:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return data + i0 * step.p[0] + i1 * step.p[1];
 856:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 857:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 858:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 859:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp* Mat::ptr(int i0, int i1)
 860:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 861:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims >= 2);
 862:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 863:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 864:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i1 < (unsigned)size.p[1]);
 865:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return (_Tp*)(data + i0 * step.p[0] + i1 * step.p[1]);
 866:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 867:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 868:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 869:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp* Mat::ptr(int i0, int i1) const
 870:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 871:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims >= 2);
 872:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 873:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 874:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i1 < (unsigned)size.p[1]);
 875:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return (const _Tp*)(data + i0 * step.p[0] + i1 * step.p[1]);
 876:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 877:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 878:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 879:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** uchar* Mat::ptr(int i0, int i1, int i2)
 880:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 881:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims >= 3);
 882:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 883:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 884:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i1 < (unsigned)size.p[1]);
 885:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i2 < (unsigned)size.p[2]);
 886:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return data + i0 * step.p[0] + i1 * step.p[1] + i2 * step.p[2];
 887:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 888:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 889:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 890:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const uchar* Mat::ptr(int i0, int i1, int i2) const
 891:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 892:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims >= 3);
 893:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 894:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 895:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i1 < (unsigned)size.p[1]);
 896:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i2 < (unsigned)size.p[2]);
 897:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return data + i0 * step.p[0] + i1 * step.p[1] + i2 * step.p[2];
 898:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 899:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 900:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 901:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp* Mat::ptr(int i0, int i1, int i2)
 902:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 903:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims >= 3);
 904:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 905:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 906:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i1 < (unsigned)size.p[1]);
 907:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i2 < (unsigned)size.p[2]);
 908:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return (_Tp*)(data + i0 * step.p[0] + i1 * step.p[1] + i2 * step.p[2]);
 909:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 910:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 911:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 912:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp* Mat::ptr(int i0, int i1, int i2) const
 913:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 914:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims >= 3);
 915:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 916:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 917:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i1 < (unsigned)size.p[1]);
 918:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i2 < (unsigned)size.p[2]);
 919:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return (const _Tp*)(data + i0 * step.p[0] + i1 * step.p[1] + i2 * step.p[2]);
 920:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 921:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 922:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 923:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** uchar* Mat::ptr(const int* idx)
 924:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 925:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     int i, d = dims;
 926:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     uchar* p = data;
 927:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( d >= 1 && p );
 928:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for( i = 0; i < d; i++ )
 929:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 930:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         CV_DbgAssert( (unsigned)idx[i] < (unsigned)size.p[i] );
 931:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         p += idx[i] * step.p[i];
 932:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 933:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return p;
 934:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 935:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 936:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
 937:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const uchar* Mat::ptr(const int* idx) const
 938:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 939:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     int i, d = dims;
 940:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     uchar* p = data;
 941:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( d >= 1 && p );
 942:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for( i = 0; i < d; i++ )
 943:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 944:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         CV_DbgAssert( (unsigned)idx[i] < (unsigned)size.p[i] );
 945:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         p += idx[i] * step.p[i];
 946:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 947:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return p;
 948:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 949:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 950:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 951:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp& Mat::at(int i0, int i1)
 952:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 953:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims <= 2);
 954:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 955:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 956:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)(i1 * DataType<_Tp>::channels) < (unsigned)(size.p[1] * channels()));
 957:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(CV_ELEM_SIZE1(DataType<_Tp>::depth) == elemSize1());
 958:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return ((_Tp*)(data + step.p[0] * i0))[i1];
 959:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 960:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 961:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 962:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp& Mat::at(int i0, int i1) const
 963:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 964:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims <= 2);
 965:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 966:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)size.p[0]);
 967:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)(i1 * DataType<_Tp>::channels) < (unsigned)(size.p[1] * channels()));
 968:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(CV_ELEM_SIZE1(DataType<_Tp>::depth) == elemSize1());
 969:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return ((const _Tp*)(data + step.p[0] * i0))[i1];
 970:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 971:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 972:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 973:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp& Mat::at(Point pt)
 974:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 975:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims <= 2);
 976:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 977:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)pt.y < (unsigned)size.p[0]);
 978:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)(pt.x * DataType<_Tp>::channels) < (unsigned)(size.p[1] * channels()));
 979:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(CV_ELEM_SIZE1(DataType<_Tp>::depth) == elemSize1());
 980:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return ((_Tp*)(data + step.p[0] * pt.y))[pt.x];
 981:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 982:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 983:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 984:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp& Mat::at(Point pt) const
 985:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 986:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims <= 2);
 987:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 988:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)pt.y < (unsigned)size.p[0]);
 989:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)(pt.x * DataType<_Tp>::channels) < (unsigned)(size.p[1] * channels()));
 990:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(CV_ELEM_SIZE1(DataType<_Tp>::depth) == elemSize1());
 991:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return ((const _Tp*)(data + step.p[0] * pt.y))[pt.x];
 992:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 993:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 994:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
 995:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp& Mat::at(int i0)
 996:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 997:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims <= 2);
 998:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
 999:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)(size.p[0] * size.p[1]));
1000:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(elemSize() == CV_ELEM_SIZE(DataType<_Tp>::type));
1001:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( isContinuous() || size.p[0] == 1 )
1002:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return ((_Tp*)data)[i0];
1003:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( size.p[1] == 1 )
1004:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return *(_Tp*)(data + step.p[0] * i0);
1005:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     int i = i0 / cols, j = i0 - i * cols;
1006:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return ((_Tp*)(data + step.p[0] * i))[j];
1007:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1008:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1009:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1010:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp& Mat::at(int i0) const
1011:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1012:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(dims <= 2);
1013:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(data);
1014:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert((unsigned)i0 < (unsigned)(size.p[0] * size.p[1]));
1015:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(elemSize() == CV_ELEM_SIZE(DataType<_Tp>::type));
1016:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( isContinuous() || size.p[0] == 1 )
1017:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return ((const _Tp*)data)[i0];
1018:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( size.p[1] == 1 )
1019:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return *(const _Tp*)(data + step.p[0] * i0);
1020:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     int i = i0 / cols, j = i0 - i * cols;
1021:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return ((const _Tp*)(data + step.p[0] * i))[j];
1022:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1023:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1024:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1025:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp& Mat::at(int i0, int i1, int i2)
1026:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1027:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == CV_ELEM_SIZE(DataType<_Tp>::type) );
1028:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return *(_Tp*)ptr(i0, i1, i2);
1029:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1030:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1031:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1032:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp& Mat::at(int i0, int i1, int i2) const
1033:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1034:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == CV_ELEM_SIZE(DataType<_Tp>::type) );
1035:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return *(const _Tp*)ptr(i0, i1, i2);
1036:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1037:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1038:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1039:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp& Mat::at(const int* idx)
1040:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1041:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == CV_ELEM_SIZE(DataType<_Tp>::type) );
1042:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return *(_Tp*)ptr(idx);
1043:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1044:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1045:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1046:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp& Mat::at(const int* idx) const
1047:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1048:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == CV_ELEM_SIZE(DataType<_Tp>::type) );
1049:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return *(const _Tp*)ptr(idx);
1050:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1051:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1052:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int n> inline
1053:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** _Tp& Mat::at(const Vec<int, n>& idx)
1054:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1055:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == CV_ELEM_SIZE(DataType<_Tp>::type) );
1056:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return *(_Tp*)ptr(idx.val);
1057:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1058:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1059:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int n> inline
1060:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const _Tp& Mat::at(const Vec<int, n>& idx) const
1061:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1062:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == CV_ELEM_SIZE(DataType<_Tp>::type) );
1063:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return *(const _Tp*)ptr(idx.val);
1064:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1065:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1066:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1067:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** MatConstIterator_<_Tp> Mat::begin() const
1068:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1069:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == sizeof(_Tp) );
1070:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return MatConstIterator_<_Tp>((const Mat_<_Tp>*)this);
1071:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1072:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1073:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1074:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** MatConstIterator_<_Tp> Mat::end() const
1075:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1076:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == sizeof(_Tp) );
1077:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     MatConstIterator_<_Tp> it((const Mat_<_Tp>*)this);
1078:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     it += total();
1079:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return it;
1080:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1081:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1082:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1083:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** MatIterator_<_Tp> Mat::begin()
1084:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1085:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == sizeof(_Tp) );
1086:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return MatIterator_<_Tp>((Mat_<_Tp>*)this);
1087:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1088:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1089:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1090:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** MatIterator_<_Tp> Mat::end()
1091:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1092:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert( elemSize() == sizeof(_Tp) );
1093:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     MatIterator_<_Tp> it((Mat_<_Tp>*)this);
1094:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     it += total();
1095:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return it;
1096:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1097:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1098:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, typename Functor> inline
1099:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::forEach(const Functor& operation) {
1100:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     this->forEach_impl<_Tp>(operation);
1101:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1102:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1103:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, typename Functor> inline
1104:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::forEach(const Functor& operation) const {
1105:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     // call as not const
1106:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     (const_cast<Mat*>(this))->forEach<const _Tp>(operation);
1107:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1108:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1109:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1110:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::operator std::vector<_Tp>() const
1111:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1112:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     std::vector<_Tp> v;
1113:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     copyTo(v);
1114:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return v;
1115:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1116:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1117:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int n> inline
1118:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::operator Vec<_Tp, n>() const
1119:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1120:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_Assert( data && dims <= 2 && (rows == 1 || cols == 1) &&
1121:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****                rows + cols - 1 == n && channels() == 1 );
1122:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1123:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( isContinuous() && type() == DataType<_Tp>::type )
1124:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return Vec<_Tp, n>((_Tp*)data);
1125:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     Vec<_Tp, n> v;
1126:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     Mat tmp(rows, cols, DataType<_Tp>::type, v.val);
1127:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     convertTo(tmp, tmp.type());
1128:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return v;
1129:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1130:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1131:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp, int m, int n> inline
1132:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::operator Matx<_Tp, m, n>() const
1133:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1134:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_Assert( data && dims <= 2 && rows == m && cols == n && channels() == 1 );
1135:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1136:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( isContinuous() && type() == DataType<_Tp>::type )
1137:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return Matx<_Tp, m, n>((_Tp*)data);
1138:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     Matx<_Tp, m, n> mtx;
1139:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     Mat tmp(rows, cols, DataType<_Tp>::type, mtx.val);
1140:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     convertTo(tmp, tmp.type());
1141:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return mtx;
1142:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1143:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1144:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1145:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::push_back(const _Tp& elem)
1146:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1147:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( !data )
1148:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
1149:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         *this = Mat(1, 1, DataType<_Tp>::type, (void*)&elem).clone();
1150:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return;
1151:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
1152:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_Assert(DataType<_Tp>::type == type() && cols == 1
1153:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****               /* && dims == 2 (cols == 1 implies dims == 2) */);
1154:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     const uchar* tmp = dataend + step[0];
1155:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( !isSubmatrix() && isContinuous() && tmp <= datalimit )
1156:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
1157:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         *(_Tp*)(data + (size.p[0]++) * step.p[0]) = elem;
1158:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         dataend = tmp;
1159:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
1160:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
1161:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         push_back_(&elem);
1162:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1163:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1164:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<typename _Tp> inline
1165:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::push_back(const Mat_<_Tp>& m)
1166:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1167:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     push_back((const Mat&)m);
1168:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1169:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1170:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** template<> inline
1171:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** void Mat::push_back(const MatExpr& expr)
1172:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1173:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     push_back(static_cast<Mat>(expr));
1174:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1175:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1176:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef CV_CXX_MOVE_SEMANTICS
1177:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1178:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1179:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat::Mat(Mat&& m)
1180:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : flags(m.flags), dims(m.dims), rows(m.rows), cols(m.cols), data(m.data),
1181:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       datastart(m.datastart), dataend(m.dataend), datalimit(m.datalimit), allocator(m.allocator),
1182:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       u(m.u), size(&rows)
1183:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1184:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if (m.dims <= 2)  // move new step/size info
1185:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
1186:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[0] = m.step[0];
1187:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[1] = m.step[1];
1188:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
1189:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
1190:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
1191:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         CV_DbgAssert(m.step.p != m.step.buf);
1192:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step.p = m.step.p;
1193:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = m.size.p;
1194:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.step.p = m.step.buf;
1195:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.size.p = &m.rows;
1196:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
1197:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.flags = MAGIC_VAL; m.dims = m.rows = m.cols = 0;
1198:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.data = NULL; m.datastart = NULL; m.dataend = NULL; m.datalimit = NULL;
1199:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.allocator = NULL;
1200:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.u = NULL;
1201:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1202:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1203:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1204:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Mat& Mat::operator = (Mat&& m)
1205:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1206:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if (this == &m)
1207:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****       return *this;
1208:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1209:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     release();
1210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     flags = m.flags; dims = m.dims; rows = m.rows; cols = m.cols; data = m.data;
1211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = m.datastart; dataend = m.dataend; datalimit = m.datalimit; allocator = m.allocator;
1212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = m.u;
1213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if (step.p != step.buf) // release self step/size
1214:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
1215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
1216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step.p = step.buf;
1217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = &rows;
1218:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
1219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if (m.dims <= 2) // move new step/size info
1220:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
1221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[0] = m.step[0];
1222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[1] = m.step[1];
1223:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
1224:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     else
1225:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
1226:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         CV_DbgAssert(m.step.p != m.step.buf);
1227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step.p = m.step.p;
1228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = m.size.p;
1229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.step.p = m.step.buf;
1230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.size.p = &m.rows;
1231:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
1232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.flags = MAGIC_VAL; m.dims = m.rows = m.cols = 0;
1233:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.data = NULL; m.datastart = NULL; m.dataend = NULL; m.datalimit = NULL;
1234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.allocator = NULL;
1235:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.u = NULL;
1236:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return *this;
1237:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1238:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1239:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #endif
1240:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1241:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1242:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** ///////////////////////////// MatSize ////////////////////////////
1243:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1244:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1245:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** MatSize::MatSize(int* _p)
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     : p(_p) {}
 231              		.loc 3 1246 0
 232 0050 80108DE2 		add	r1, sp, #128
 233              	.LVL18:
 234 0054 A0108DE5 		str	r1, [sp, #160]
 235              	.LVL19:
 236              	.LBE548:
 237              	.LBE547:
 238              	.LBE546:
 239              	.LBB549:
 240              	.LBB550:
 241              	.LBB551:
1247:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1248:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1249:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** Size MatSize::operator()() const
1250:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1251:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     CV_DbgAssert(p[-1] <= 2);
1252:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return Size(p[1], p[0]);
1253:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1254:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1255:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1256:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const int& MatSize::operator[](int i) const
1257:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1258:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return p[i];
1259:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1260:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1261:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1262:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** int& MatSize::operator[](int i)
1263:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1264:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return p[i];
1265:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1266:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1267:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1268:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** MatSize::operator const int*() const
1269:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1270:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return p;
1271:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1272:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1273:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1274:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** bool MatSize::operator == (const MatSize& sz) const
1275:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1276:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     int d = p[-1];
1277:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     int dsz = sz.p[-1];
1278:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( d != dsz )
1279:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return false;
1280:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( d == 2 )
1281:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         return p[0] == sz.p[0] && p[1] == sz.p[1];
1282:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1283:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for( int i = 0; i < d; i++ )
1284:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         if( p[i] != sz.p[i] )
1285:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****             return false;
1286:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return true;
1287:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1288:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1289:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1290:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** bool MatSize::operator != (const MatSize& sz) const
1291:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1292:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return !(*this == sz);
1293:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1294:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1295:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1296:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1297:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** ///////////////////////////// MatStep ////////////////////////////
1298:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1299:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1300:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** MatStep::MatStep()
1301:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     p = buf; p[0] = p[1] = 0;
 242              		.loc 3 1302 0
 243 0058 A8108DE2 		add	r1, sp, #168
 244 005c A4108DE5 		str	r1, [sp, #164]
 245 0060 AC308DE5 		str	r3, [sp, #172]
 246 0064 A8308DE5 		str	r3, [sp, #168]
 247              	.LVL20:
 248              	.LBE551:
 249              	.LBE550:
 250              	.LBE549:
 251              	.LBE545:
 252              	.LBE544:
 253              	.LBB552:
 254              	.LBB553:
 335:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {}
 255              		.loc 3 335 0
 256 0068 40208DE5 		str	r2, [sp, #64]
 257 006c 44308DE5 		str	r3, [sp, #68]
 258 0070 48308DE5 		str	r3, [sp, #72]
 259 0074 4C308DE5 		str	r3, [sp, #76]
 260 0078 50308DE5 		str	r3, [sp, #80]
 261 007c 54308DE5 		str	r3, [sp, #84]
 262 0080 58308DE5 		str	r3, [sp, #88]
 263 0084 5C308DE5 		str	r3, [sp, #92]
 264 0088 60308DE5 		str	r3, [sp, #96]
 265 008c 64308DE5 		str	r3, [sp, #100]
 266              	.LVL21:
 267              	.LBB554:
 268              	.LBB555:
 269              	.LBB556:
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 270              		.loc 3 1246 0
 271 0090 48208DE2 		add	r2, sp, #72
 272              	.LVL22:
 273 0094 68208DE5 		str	r2, [sp, #104]
 274              	.LVL23:
 275              	.LBE556:
 276              	.LBE555:
 277              	.LBE554:
 278              	.LBB557:
 279              	.LBB558:
 280              	.LBB559:
 281              		.loc 3 1302 0
 282 0098 70208DE2 		add	r2, sp, #112
 283 009c 6C208DE5 		str	r2, [sp, #108]
 284 00a0 74308DE5 		str	r3, [sp, #116]
 285 00a4 70308DE5 		str	r3, [sp, #112]
 286              	.LVL24:
 287              	.LBE559:
 288              	.LBE558:
 289              	.LBE557:
 290              	.LBE553:
 291              	.LBE552:
 418:../src/renesas/application/r_opencv.cpp **** 	{
 292              		.loc 1 418 0
 293 00a8 080050E1 		cmp	r0, r8
 294 00ac B101000A 		beq	.L16
 295              	.LVL25:
 296              	.LBB560:
 297              	.LBB561:
 298              	.LBB562:
 429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 299              		.loc 3 429 0
 300 00b0 FF3244E3 		movt	r3, 17151
 301 00b4 08308DE5 		str	r3, [sp, #8]
 302 00b8 0230A0E3 		mov	r3, #2
 303 00bc 0C308DE5 		str	r3, [sp, #12]
 304 00c0 10708DE5 		str	r7, [sp, #16]
 305 00c4 14608DE5 		str	r6, [sp, #20]
 306 00c8 18008DE5 		str	r0, [sp, #24]
 307 00cc 1C008DE5 		str	r0, [sp, #28]
 308 00d0 0030A0E3 		mov	r3, #0
 309 00d4 20308DE5 		str	r3, [sp, #32]
 310 00d8 24308DE5 		str	r3, [sp, #36]
 311 00dc 28308DE5 		str	r3, [sp, #40]
 312 00e0 2C308DE5 		str	r3, [sp, #44]
 313              	.LVL26:
 314              	.LBB563:
 315              	.LBB564:
 316              	.LBB565:
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 317              		.loc 3 1246 0
 318 00e4 10208DE2 		add	r2, sp, #16
 319              	.LVL27:
 320 00e8 30208DE5 		str	r2, [sp, #48]
 321              	.LVL28:
 322              	.LBE565:
 323              	.LBE564:
 324              	.LBE563:
 325              	.LBB566:
 326              	.LBB567:
 327              	.LBB568:
 328              		.loc 3 1302 0
 329 00ec 38208DE2 		add	r2, sp, #56
 330 00f0 34208DE5 		str	r2, [sp, #52]
 331 00f4 3C308DE5 		str	r3, [sp, #60]
 332 00f8 38308DE5 		str	r3, [sp, #56]
 333              	.LVL29:
 334              	.LBE568:
 335              	.LBE567:
 336              	.LBE566:
 337              	.LBB569:
 338              	.LBB570:
 339              	.LBB571:
 803:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t p = 1;
 340              		.loc 3 803 0
 341 00fc 970603E0 		mul	r3, r7, r6
 342              	.LVL30:
 343              	.LBE571:
 344              	.LBE570:
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 345              		.loc 3 431 0
 346 0100 000053E3 		cmp	r3, #0
 347 0104 0100000A 		beq	.L17
 348 0108 000050E3 		cmp	r0, #0
 349 010c 2300000A 		beq	.L97
 350              	.LVL31:
 351              	.L17:
 434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( _step == AUTO_STEP )
 352              		.loc 3 434 0
 353 0110 14309DE5 		ldr	r3, [sp, #20]
 354              	.LVL32:
 438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 355              		.loc 3 438 0
 356 0114 08209DE5 		ldr	r2, [sp, #8]
 357 0118 012982E3 		orr	r2, r2, #16384
 358 011c 08208DE5 		str	r2, [sp, #8]
 359              	.LVL33:
 360              	.LBB572:
 361              	.LBB573:
1303:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1304:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1305:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1306:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** MatStep::MatStep(size_t s)
1307:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1308:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     p = buf; p[0] = s; p[1] = 0;
1309:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1310:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1311:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1312:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** const size_t& MatStep::operator[](int i) const
1313:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1314:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return p[i];
1315:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
1316:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
1317:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** inline
1318:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** size_t& MatStep::operator[](int i)
1319:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
1320:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     return p[i];
 362              		.loc 3 1320 0
 363 0120 34209DE5 		ldr	r2, [sp, #52]
 364              	.LVL34:
 365              	.LBE573:
 366              	.LBE572:
 452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     step[1] = esz;
 367              		.loc 3 452 0
 368 0124 003082E5 		str	r3, [r2]
 369              	.LVL35:
 453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datalimit = datastart + _step * rows;
 370              		.loc 3 453 0
 371 0128 34209DE5 		ldr	r2, [sp, #52]
 372 012c 0110A0E3 		mov	r1, #1
 373 0130 041082E5 		str	r1, [r2, #4]
 454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     dataend = datalimit - _step + minstep;
 374              		.loc 3 454 0
 375 0134 1C209DE5 		ldr	r2, [sp, #28]
 376 0138 10109DE5 		ldr	r1, [sp, #16]
 377 013c 912323E0 		mla	r3, r1, r3, r2
 378              	.LVL36:
 379 0140 24308DE5 		str	r3, [sp, #36]
 455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 380              		.loc 3 455 0
 381 0144 20308DE5 		str	r3, [sp, #32]
 382              	.LVL37:
 383              	.LBE569:
 384              	.LBE562:
 385              	.LBE561:
 386              	.LBE560:
 387              	.LBB585:
 388              	.LBB586:
 389              	.LBB587:
 390              	.LBB588:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 391              		.loc 3 703 0
 392 0148 9C309DE5 		ldr	r3, [sp, #156]
 393 014c 000053E3 		cmp	r3, #0
 394 0150 0900000A 		beq	.L19
 395 0154 0C3083E2 		add	r3, r3, #12
 396 0158 5BF07FF5 		dmb	ish
 397              	.L95:
 398 015c 9F2F93E1 		ldrex	r2, [r3]
 399 0160 011042E2 		sub	r1, r2, #1
 400 0164 910F83E1 		strex	r0, r1, [r3]
 401 0168 000050E3 		cmp	r0, #0
 402 016c FAFFFF1A 		bne	.L95
 403 0170 5BF07FF5 		dmb	ish
 404 0174 010052E3 		cmp	r2, #1
 405 0178 2500000A 		beq	.L98
 406              	.L19:
 407              	.LVL38:
 408              	.LBB589:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 409              		.loc 3 707 0
 410 017c 0030A0E3 		mov	r3, #0
 411              	.LVL39:
 412              	.L23:
 413 0180 7C209DE5 		ldr	r2, [sp, #124]
 414 0184 030052E1 		cmp	r2, r3
 415 0188 240000DA 		ble	.L22
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 416              		.loc 3 708 0
 417 018c A0209DE5 		ldr	r2, [sp, #160]
 418 0190 0010A0E3 		mov	r1, #0
 419 0194 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 420              		.loc 3 707 0
 421 0198 013083E2 		add	r3, r3, #1
 422              	.LVL40:
 423 019c F7FFFFEA 		b	.L23
 424              	.LVL41:
 425              	.L97:
 426              	.LBE589:
 427              	.LBE588:
 428              	.LBE587:
 429              	.LBE586:
 430              	.LBE585:
 431              	.LBB594:
 432              	.LBB584:
 433              	.LBB583:
 434              	.LBB582:
 435              	.LBB574:
 436              	.LBB575:
 437              	.LBB576:
 438              		.file 4 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0.
   1:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /*M///////////////////////////////////////////////////////////////////////////////////////
   2:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
   3:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
   4:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
   5:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //  By downloading, copying, installing or using the software you agree to this license.
   6:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //  If you do not agree to this license, do not download, install,
   7:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //  copy or use the software.
   8:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
   9:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
  10:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //                          License Agreement
  11:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //                For Open Source Computer Vision Library
  12:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
  13:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // Copyright (C) 2000-2008, Intel Corporation, all rights reserved.
  14:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // Copyright (C) 2009, Willow Garage Inc., all rights reserved.
  15:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // Copyright (C) 2013, OpenCV Foundation, all rights reserved.
  16:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // Third party copyrights are property of their respective owners.
  17:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
  18:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // Redistribution and use in source and binary forms, with or without modification,
  19:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // are permitted provided that the following conditions are met:
  20:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
  21:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //   * Redistribution's of source code must retain the above copyright notice,
  22:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //     this list of conditions and the following disclaimer.
  23:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
  24:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //   * Redistribution's in binary form must reproduce the above copyright notice,
  25:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //     this list of conditions and the following disclaimer in the documentation
  26:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //     and/or other materials provided with the distribution.
  27:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
  28:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //   * The name of the copyright holders may not be used to endorse or promote products
  29:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //     derived from this software without specific prior written permission.
  30:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
  31:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // This software is provided by the copyright holders and contributors "as is" and
  32:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // any express or implied warranties, including, but not limited to, the implied
  33:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // warranties of merchantability and fitness for a particular purpose are disclaimed.
  34:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // In no event shall the Intel Corporation or contributors be liable for any direct,
  35:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // indirect, incidental, special, exemplary, or consequential damages
  36:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // (including, but not limited to, procurement of substitute goods or services;
  37:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // loss of use, data, or profits; or business interruption) however caused
  38:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // and on any theory of liability, whether in contract, strict liability,
  39:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // or tort (including negligence or otherwise) arising in any way out of
  40:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // the use of this software, even if advised of the possibility of such damage.
  41:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //
  42:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //M*/
  43:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  44:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #ifndef OPENCV_CORE_CVSTD_HPP
  45:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #define OPENCV_CORE_CVSTD_HPP
  46:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  47:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #ifndef __cplusplus
  48:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #  error cvstd.hpp header must be compiled as C++
  49:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #endif
  50:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  51:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #include "opencv2/core/cvdef.h"
  52:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  53:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #include <cstddef>
  54:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #include <cstring>
  55:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #include <cctype>
  56:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  57:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #ifndef OPENCV_NOSTL
  58:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #  include <string>
  59:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #endif
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  61:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // import useful primitives from stl
  62:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #ifndef OPENCV_NOSTL_TRANSITIONAL
  63:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #  include <algorithm>
  64:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #  include <utility>
  65:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #  include <cstdlib> //for abs(int)
  66:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #  include <cmath>
  67:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  68:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** namespace cv
  69:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
  70:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     static inline uchar abs(uchar a) { return a; }
  71:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     static inline ushort abs(ushort a) { return a; }
  72:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     static inline unsigned abs(unsigned a) { return a; }
  73:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     static inline uint64 abs(uint64 a) { return a; }
  74:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  75:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     using std::min;
  76:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     using std::max;
  77:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     using std::abs;
  78:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     using std::swap;
  79:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     using std::sqrt;
  80:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     using std::exp;
  81:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     using std::pow;
  82:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     using std::log;
  83:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
  84:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  85:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #else
  86:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** namespace cv
  87:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
  88:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename T> static inline T min(T a, T b) { return a < b ? a : b; }
  89:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename T> static inline T max(T a, T b) { return a > b ? a : b; }
  90:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename T> static inline T abs(T a) { return a < 0 ? -a : a; }
  91:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename T> static inline void swap(T& a, T& b) { T tmp = a; a = b; b = tmp; }
  92:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
  93:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<> inline uchar abs(uchar a) { return a; }
  94:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<> inline ushort abs(ushort a) { return a; }
  95:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<> inline unsigned abs(unsigned a) { return a; }
  96:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<> inline uint64 abs(uint64 a) { return a; }
  97:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
  98:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #endif
  99:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 100:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** namespace cv {
 101:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 102:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @addtogroup core_utils
 103:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @{
 104:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 105:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //////////////////////////// memory management functions ////////////////////////////
 106:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 107:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @brief Allocates an aligned memory buffer.
 108:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 109:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** The function allocates the buffer of the specified size and returns it. When the buffer size is 16
 110:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** bytes or more, the returned buffer is aligned to 16 bytes.
 111:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** @param bufSize Allocated buffer size.
 112:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****  */
 113:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** CV_EXPORTS void* fastMalloc(size_t bufSize);
 114:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 115:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @brief Deallocates a memory buffer.
 116:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 117:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** The function deallocates the buffer allocated with fastMalloc . If NULL pointer is passed, the
 118:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** function does nothing. C version of the function clears the pointer *pptr* to avoid problems with
 119:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** double memory deallocation.
 120:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** @param ptr Pointer to the allocated buffer.
 121:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****  */
 122:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** CV_EXPORTS void fastFree(void* ptr);
 123:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 124:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /*!
 125:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****   The STL-compilant memory Allocator based on cv::fastMalloc() and cv::fastFree()
 126:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** */
 127:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename _Tp> class Allocator
 128:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 129:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** public:
 130:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef _Tp value_type;
 131:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef value_type* pointer;
 132:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef const value_type* const_pointer;
 133:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef value_type& reference;
 134:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef const value_type& const_reference;
 135:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef size_t size_type;
 136:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef ptrdiff_t difference_type;
 137:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename U> class rebind { typedef Allocator<U> other; };
 138:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 139:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     explicit Allocator() {}
 140:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     ~Allocator() {}
 141:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     explicit Allocator(Allocator const&) {}
 142:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename U>
 143:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     explicit Allocator(Allocator<U> const&) {}
 144:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 145:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     // address
 146:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     pointer address(reference r) { return &r; }
 147:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     const_pointer address(const_reference r) { return &r; }
 148:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 149:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     pointer allocate(size_type count, const void* =0) { return reinterpret_cast<pointer>(fastMalloc
 150:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void deallocate(pointer p, size_type) { fastFree(p); }
 151:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 152:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void construct(pointer p, const _Tp& v) { new(static_cast<void*>(p)) _Tp(v); }
 153:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void destroy(pointer p) { p->~_Tp(); }
 154:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 155:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_type max_size() const { return cv::max(static_cast<_Tp>(-1)/sizeof(_Tp), 1); }
 156:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** };
 157:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 158:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @} core_utils
 159:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 160:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @cond IGNORED
 161:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 162:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** namespace detail
 163:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 164:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 165:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // Metafunction to avoid taking a reference to void.
 166:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T>
 167:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** struct RefOrVoid { typedef T& type; };
 168:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 169:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<>
 170:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** struct RefOrVoid<void>{ typedef void type; };
 171:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 172:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<>
 173:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** struct RefOrVoid<const void>{ typedef const void type; };
 174:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 175:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<>
 176:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** struct RefOrVoid<volatile void>{ typedef volatile void type; };
 177:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 178:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<>
 179:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** struct RefOrVoid<const volatile void>{ typedef const volatile void type; };
 180:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 181:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** // This class would be private to Ptr, if it didn't have to be a non-template.
 182:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** struct PtrOwner;
 183:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 184:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 185:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 186:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename Y>
 187:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** struct DefaultDeleter
 188:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 189:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void operator () (Y* p) const;
 190:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** };
 191:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 192:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @endcond
 193:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 194:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @addtogroup core_basic
 195:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @{
 196:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 197:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @brief Template class for smart pointers with shared ownership
 198:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 199:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** A Ptr\<T\> pretends to be a pointer to an object of type T. Unlike an ordinary pointer, however, th
 200:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** object will be automatically cleaned up once all Ptr instances pointing to it are destroyed.
 201:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 202:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr is similar to boost::shared_ptr that is part of the Boost library
 203:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** (<http://www.boost.org/doc/libs/release/libs/smart_ptr/shared_ptr.htm>) and std::shared_ptr from
 204:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** the [C++11](http://en.wikipedia.org/wiki/C++11) standard.
 205:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 206:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** This class provides the following advantages:
 207:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   Default constructor, copy constructor, and assignment operator for an arbitrary C++ class or C
 208:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     structure. For some objects, like files, windows, mutexes, sockets, and others, a copy
 209:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     constructor or an assignment operator are difficult to define. For some other objects, like
 210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     complex classifiers in OpenCV, copy constructors are absent and not easy to implement. Finally,
 211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     some of complex OpenCV and your own data structures may be written in C. However, copy
 212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     constructors and default constructors can simplify programming a lot. Besides, they are often
 213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     required (for example, by STL containers). By using a Ptr to such an object instead of the
 214:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     object itself, you automatically get all of the necessary constructors and the assignment
 215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     operator.
 216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   *O(1)* complexity of the above-mentioned operations. While some structures, like std::vector,
 217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     provide a copy constructor and an assignment operator, the operations may take a considerable
 218:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     amount of time if the data structures are large. But if the structures are put into a Ptr, the
 219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     overhead is small and independent of the data size.
 220:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   Automatic and customizable cleanup, even for C structures. See the example below with FILE\*.
 221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   Heterogeneous collections of objects. The standard STL and most other C++ and OpenCV containers
 222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     can store only objects of the same type and the same size. The classical solution to store
 223:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     objects of different types in the same container is to store pointers to the base class (Base\*
 224:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     instead but then you lose the automatic memory management. Again, by using Ptr\<Base\> instead
 225:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     of raw pointers, you can solve the problem.
 226:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** A Ptr is said to *own* a pointer - that is, for each Ptr there is a pointer that will be deleted
 228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** once all Ptr instances that own it are destroyed. The owned pointer may be null, in which case
 229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** nothing is deleted. Each Ptr also *stores* a pointer. The stored pointer is the pointer the Ptr
 230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** pretends to be; that is, the one you get when you use Ptr::get or the conversion to T\*. It's
 231:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** usually the same as the owned pointer, but if you use casts or the general shared-ownership
 232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** constructor, the two may diverge: the Ptr will still own the original pointer, but will itself poin
 233:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** to something else.
 234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 235:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** The owned pointer is treated as a black box. The only thing Ptr needs to know about it is how to
 236:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** delete it. This knowledge is encapsulated in the *deleter* - an auxiliary object that is associated
 237:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** with the owned pointer and shared between all Ptr instances that own it. The default deleter is an
 238:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** instance of DefaultDeleter, which uses the standard C++ delete operator; as such it will work with
 239:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** any pointer allocated with the standard new operator.
 240:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 241:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** However, if the pointer must be deleted in a different way, you must specify a custom deleter upon
 242:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr construction. A deleter is simply a callable object that accepts the pointer as its sole
 243:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** argument. For example, if you want to wrap FILE, you may do so as follows:
 244:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** @code
 245:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr<FILE> f(fopen("myfile.txt", "w"), fclose);
 246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     if(!f) throw ...;
 247:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     fprintf(f, ....);
 248:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     ...
 249:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     // the file will be closed automatically by f's destructor.
 250:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** @endcode
 251:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Alternatively, if you want all pointers of a particular type to be deleted the same way, you can
 252:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** specialize DefaultDeleter<T>::operator() for that type, like this:
 253:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** @code
 254:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     namespace cv {
 255:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<> void DefaultDeleter<FILE>::operator ()(FILE * obj) const
 256:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     {
 257:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         fclose(obj);
 258:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     }
 259:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     }
 260:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** @endcode
 261:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** For convenience, the following types from the OpenCV C API already have such a specialization that
 262:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** calls the appropriate release function:
 263:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   CvCapture
 264:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   CvFileStorage
 265:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   CvHaarClassifierCascade
 266:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   CvMat
 267:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   CvMatND
 268:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   CvMemStorage
 269:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   CvSparseMat
 270:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   CvVideoWriter
 271:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** -   IplImage
 272:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** @note The shared ownership mechanism is implemented with reference counting. As such, cyclic
 273:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** ownership (e.g. when object a contains a Ptr to object b, which contains a Ptr to object a) will
 274:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** lead to all involved objects never being cleaned up. Avoid such situations.
 275:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** @note It is safe to concurrently read (but not write) a Ptr instance from multiple threads and
 276:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** therefore it is normally safe to use it in multi-threaded applications. The same is true for Mat an
 277:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** other C++ OpenCV classes that use internal reference counts.
 278:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** */
 279:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T>
 280:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** struct Ptr
 281:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 282:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** Generic programming support. */
 283:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef T element_type;
 284:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 285:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** The default constructor creates a null Ptr - one that owns and stores a null pointer.
 286:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 287:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr();
 288:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 289:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /**
 290:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     If p is null, these are equivalent to the default constructor.
 291:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Otherwise, these constructors assume ownership of p - that is, the created Ptr owns and stores 
 292:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     and assumes it is the sole owner of it. Don't use them if p is already owned by another Ptr, or
 293:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     else p will get deleted twice.
 294:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     With the first constructor, DefaultDeleter\<Y\>() becomes the associated deleter (so p will
 295:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     eventually be deleted with the standard delete operator). Y must be a complete type at the poin
 296:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     of invocation.
 297:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     With the second constructor, d becomes the associated deleter.
 298:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Y\* must be convertible to T\*.
 299:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param p Pointer to own.
 300:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @note It is often easier to use makePtr instead.
 301:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****      */
 302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 303:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #ifdef DISABLE_OPENCV_24_COMPATIBILITY
 304:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     explicit
 305:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #endif
 306:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr(Y* p);
 307:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 308:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** @overload
 309:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param d Deleter to use for the owned pointer.
 310:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param p Pointer to own.
 311:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 312:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y, typename D>
 313:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr(Y* p, D d);
 314:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 315:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /**
 316:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     These constructors create a Ptr that shares ownership with another Ptr - that is, own the same
 317:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     pointer as o.
 318:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     With the first two, the same pointer is stored, as well; for the second, Y\* must be convertibl
 319:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     to T\*.
 320:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     With the third, p is stored, and Y may be any type. This constructor allows to have completely
 321:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     unrelated owned and stored pointers, and should be used with care to avoid confusion. A relativ
 322:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     benign use is to create a non-owning Ptr, like this:
 323:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @code
 324:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         ptr = Ptr<T>(Ptr<T>(), dont_delete_me); // owns nothing; will not delete the pointer.
 325:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @endcode
 326:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param o Ptr to share ownership with.
 327:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 328:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr(const Ptr& o);
 329:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 330:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** @overload
 331:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param o Ptr to share ownership with.
 332:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 333:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 334:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr(const Ptr<Y>& o);
 335:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 336:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** @overload
 337:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param o Ptr to share ownership with.
 338:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param p Pointer to store.
 339:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 340:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 341:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr(const Ptr<Y>& o, T* p);
 342:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 343:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** The destructor is equivalent to calling Ptr::release. */
 344:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     ~Ptr();
 345:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 346:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /**
 347:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Assignment replaces the current Ptr instance with one that owns and stores same pointers as o a
 348:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     then destroys the old instance.
 349:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param o Ptr to share ownership with.
 350:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****      */
 351:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr& operator = (const Ptr& o);
 352:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 353:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** @overload */
 354:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 355:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr& operator = (const Ptr<Y>& o);
 356:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 357:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** If no other Ptr instance owns the owned pointer, deletes it with the associated deleter. Th
 358:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     both the owned and the stored pointers to NULL.
 359:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 360:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void release();
 361:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 362:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /**
 363:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     `ptr.reset(...)` is equivalent to `ptr = Ptr<T>(...)`.
 364:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param p Pointer to own.
 365:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 366:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 367:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void reset(Y* p);
 368:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 369:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** @overload
 370:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param d Deleter to use for the owned pointer.
 371:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param p Pointer to own.
 372:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 373:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y, typename D>
 374:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void reset(Y* p, D d);
 375:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 376:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /**
 377:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Swaps the owned and stored pointers (and deleters, if any) of this and o.
 378:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     @param o Ptr to swap with.
 379:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 380:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void swap(Ptr& o);
 381:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 382:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** Returns the stored pointer. */
 383:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     T* get() const;
 384:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 385:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** Ordinary pointer emulation. */
 386:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typename detail::RefOrVoid<T>::type operator * () const;
 387:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 388:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** Ordinary pointer emulation. */
 389:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     T* operator -> () const;
 390:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 391:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** Equivalent to get(). */
 392:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     operator T* () const;
 393:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 394:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** ptr.empty() is equivalent to `!ptr.get()`. */
 395:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     bool empty() const;
 396:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 397:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** Returns a Ptr that owns the same pointer as this, and stores the same
 398:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****        pointer as this, except converted via static_cast to Y*.
 399:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     */
 400:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 401:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr<Y> staticCast() const;
 402:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 403:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** Ditto for const_cast. */
 404:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 405:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr<Y> constCast() const;
 406:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 407:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     /** Ditto for dynamic_cast. */
 408:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 409:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr<Y> dynamicCast() const;
 410:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 411:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #ifdef CV_CXX_MOVE_SEMANTICS
 412:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr(Ptr&& o);
 413:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     Ptr& operator = (Ptr&& o);
 414:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #endif
 415:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 416:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** private:
 417:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     detail::PtrOwner* owner;
 418:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     T* stored;
 419:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 420:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Y>
 421:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     friend struct Ptr; // have to do this for the cross-type copy constructor
 422:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** };
 423:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 424:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** Equivalent to ptr1.swap(ptr2). Provided to help write generic algorithms. */
 425:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T>
 426:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** void swap(Ptr<T>& ptr1, Ptr<T>& ptr2);
 427:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 428:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** Return whether ptr1.get() and ptr2.get() are equal and not equal, respectively. */
 429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T>
 430:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** bool operator == (const Ptr<T>& ptr1, const Ptr<T>& ptr2);
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T>
 432:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** bool operator != (const Ptr<T>& ptr1, const Ptr<T>& ptr2);
 433:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** `makePtr<T>(...)` is equivalent to `Ptr<T>(new T(...))`. It is shorter than the latter, and it'
 435:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** marginally safer than using a constructor or Ptr::reset, since it ensures that the owned pointer
 436:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** is new and thus not owned by any other Ptr instance.
 437:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Unfortunately, perfect forwarding is impossible to implement in C++03, and so makePtr is limited
 438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** to constructors of T that have up to 10 arguments, none of which are non-const references.
 439:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****  */
 440:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T>
 441:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr();
 442:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 443:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1>
 444:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1);
 445:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 446:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2>
 447:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2);
 448:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 449:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2, typename A3>
 450:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3);
 451:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2, typename A3, typename A4>
 453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4);
 454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2, typename A3, typename A4, typename A5>
 456:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5);
 457:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 458:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6>
 459:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6);
 460:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 461:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, 
 462:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, 
 463:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 464:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, 
 465:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, 
 466:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 467:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, 
 468:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, 
 469:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** /** @overload */
 470:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename T, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, 
 471:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, 
 472:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 473:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //////////////////////////////// string class ////////////////////////////////
 474:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 475:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** class CV_EXPORTS FileNode; //for string constructor from FileNode
 476:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 477:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** class CV_EXPORTS String
 478:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 479:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** public:
 480:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef char value_type;
 481:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef char& reference;
 482:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef const char& const_reference;
 483:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef char* pointer;
 484:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef const char* const_pointer;
 485:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef ptrdiff_t difference_type;
 486:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef size_t size_type;
 487:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef char* iterator;
 488:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     typedef const char* const_iterator;
 489:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 490:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     static const size_t npos = size_t(-1);
 491:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 492:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     explicit String();
 493:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(const String& str);
 494:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(const String& str, size_t pos, size_t len = npos);
 495:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(const char* s);
 496:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(const char* s, size_t n);
 497:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(size_t n, char c);
 498:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(const char* first, const char* last);
 499:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     template<typename Iterator> String(Iterator first, Iterator last);
 500:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     explicit String(const FileNode& fn);
 501:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     ~String();
 502:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 503:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String& operator=(const String& str);
 504:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String& operator=(const char* s);
 505:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String& operator=(char c);
 506:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 507:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String& operator+=(const String& str);
 508:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String& operator+=(const char* s);
 509:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String& operator+=(char c);
 510:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 511:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t size() const;
 512:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t length() const;
 513:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 514:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     char operator[](size_t idx) const;
 515:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     char operator[](int idx) const;
 516:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 517:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     const char* begin() const;
 518:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     const char* end() const;
 519:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 520:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     const char* c_str() const;
 521:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 522:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     bool empty() const;
 523:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void clear();
 524:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 525:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     int compare(const char* s) const;
 526:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     int compare(const String& str) const;
 527:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 528:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void swap(String& str);
 529:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String substr(size_t pos = 0, size_t len = npos) const;
 530:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 531:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find(const char* s, size_t pos, size_t n) const;
 532:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find(char c, size_t pos = 0) const;
 533:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find(const String& str, size_t pos = 0) const;
 534:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find(const char* s, size_t pos = 0) const;
 535:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 536:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t rfind(const char* s, size_t pos, size_t n) const;
 537:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t rfind(char c, size_t pos = npos) const;
 538:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t rfind(const String& str, size_t pos = npos) const;
 539:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t rfind(const char* s, size_t pos = npos) const;
 540:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 541:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find_first_of(const char* s, size_t pos, size_t n) const;
 542:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find_first_of(char c, size_t pos = 0) const;
 543:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find_first_of(const String& str, size_t pos = 0) const;
 544:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find_first_of(const char* s, size_t pos = 0) const;
 545:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 546:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find_last_of(const char* s, size_t pos, size_t n) const;
 547:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find_last_of(char c, size_t pos = npos) const;
 548:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find_last_of(const String& str, size_t pos = npos) const;
 549:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t find_last_of(const char* s, size_t pos = npos) const;
 550:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 551:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     friend String operator+ (const String& lhs, const String& rhs);
 552:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     friend String operator+ (const String& lhs, const char*   rhs);
 553:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     friend String operator+ (const char*   lhs, const String& rhs);
 554:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     friend String operator+ (const String& lhs, char          rhs);
 555:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     friend String operator+ (char          lhs, const String& rhs);
 556:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 557:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String toLowerCase() const;
 558:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 559:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #ifndef OPENCV_NOSTL
 560:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(const std::string& str);
 561:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(const std::string& str, size_t pos, size_t len = npos);
 562:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String& operator=(const std::string& str);
 563:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String& operator+=(const std::string& str);
 564:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     operator std::string() const;
 565:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 566:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     friend String operator+ (const String& lhs, const std::string& rhs);
 567:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     friend String operator+ (const std::string& lhs, const String& rhs);
 568:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** #endif
 569:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 570:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** private:
 571:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     char*  cstr_;
 572:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t len_;
 573:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 574:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     char* allocate(size_t len); // len without trailing 0
 575:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     void deallocate();
 576:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 577:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     String(int); // disabled and invalid. Catch invalid usages like, commandLineParser.has(0) probl
 578:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** };
 579:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 580:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @} core_basic
 581:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 582:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** ////////////////////////// cv::String implementation /////////////////////////
 583:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 584:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** //! @cond IGNORED
 585:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 586:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** inline
 587:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::String()
 588:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     : cstr_(0), len_(0)
 589:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {}
 590:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** inline
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::String(const String& str)
 593:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     : cstr_(str.cstr_), len_(str.len_)
 594:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 595:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     if (cstr_)
 596:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         CV_XADD(((int*)cstr_)-1, 1);
 597:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 598:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 599:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** inline
 600:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::String(const String& str, size_t pos, size_t len)
 601:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     : cstr_(0), len_(0)
 602:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 603:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     pos = min(pos, str.len_);
 604:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     len = min(str.len_ - pos, len);
 605:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     if (!len) return;
 606:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     if (len == str.len_)
 607:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     {
 608:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         CV_XADD(((int*)str.cstr_)-1, 1);
 609:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         cstr_ = str.cstr_;
 610:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         len_ = str.len_;
 611:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         return;
 612:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     }
 613:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     memcpy(allocate(len), str.cstr_ + pos, len);
 614:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 615:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 616:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** inline
 617:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::String(const char* s)
 618:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     : cstr_(0), len_(0)
 439              		.loc 4 618 0
 440 01a0 0030A0E3 		mov	r3, #0
 441 01a4 30318DE5 		str	r3, [sp, #304]
 442 01a8 34318DE5 		str	r3, [sp, #308]
 443              	.LVL42:
 444              	.LBB577:
 619:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 620:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     if (!s) return;
 621:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t len = strlen(s);
 622:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     memcpy(allocate(len), s, len);
 445              		.loc 4 622 0
 446 01ac 1C10A0E3 		mov	r1, #28
 447 01b0 130E8DE2 		add	r0, sp, #304
 448              	.LVL43:
 449              	.LEHB0:
 450 01b4 FEFFFFEB 		bl	_ZN2cv6String8allocateEj
 451              	.LVL44:
 452              	.LEHE0:
 453 01b8 1C20A0E3 		mov	r2, #28
 454 01bc 001000E3 		movw	r1, #:lower16:.LC0
 455 01c0 001040E3 		movt	r1, #:upper16:.LC0
 456 01c4 FEFFFFEB 		bl	memcpy
 457              	.LVL45:
 458              	.LBE577:
 459              	.LBE576:
 460              	.LBE575:
 461              	.LBE574:
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 462              		.loc 3 431 0
 463 01c8 AF3100E3 		movw	r3, #431
 464 01cc 00308DE5 		str	r3, [sp]
 465 01d0 003000E3 		movw	r3, #:lower16:.LC1
 466 01d4 003040E3 		movt	r3, #:upper16:.LC1
 467 01d8 002000E3 		movw	r2, #:lower16:.LANCHOR1
 468 01dc 002040E3 		movt	r2, #:upper16:.LANCHOR1
 469 01e0 131E8DE2 		add	r1, sp, #304
 470 01e4 D600E0E3 		mvn	r0, #214
 471              	.LEHB1:
 472 01e8 FEFFFFEB 		bl	_ZN2cv5errorEiRKNS_6StringEPKcS4_i
 473              	.LVL46:
 474              	.LEHE1:
 475              	.LBB578:
 476              	.LBB579:
 623:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 624:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 625:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** inline
 626:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::String(const char* s, size_t n)
 627:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     : cstr_(0), len_(0)
 628:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 629:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     if (!n) return;
 630:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     memcpy(allocate(n), s, n);
 631:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 632:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 633:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** inline
 634:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::String(size_t n, char c)
 635:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     : cstr_(0), len_(0)
 636:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 637:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     memset(allocate(n), c, n);
 638:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 639:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 640:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** inline
 641:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::String(const char* first, const char* last)
 642:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     : cstr_(0), len_(0)
 643:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 644:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t len = (size_t)(last - first);
 645:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     memcpy(allocate(len), first, len);
 646:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 647:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 648:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** template<typename Iterator> inline
 649:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::String(Iterator first, Iterator last)
 650:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     : cstr_(0), len_(0)
 651:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 652:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     size_t len = (size_t)(last - first);
 653:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     char* str = allocate(len);
 654:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     while (first != last)
 655:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     {
 656:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         *str++ = *first;
 657:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****         ++first;
 658:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     }
 659:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 660:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** 
 661:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** inline
 662:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** String::~String()
 663:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 664:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp ****     deallocate();
 477              		.loc 4 664 0
 478 01ec 130E8DE2 		add	r0, sp, #304
 479              	.LVL47:
 480 01f0 FEFFFFEB 		bl	_ZN2cv6String10deallocateEv
 481              	.LVL48:
 482 01f4 C5FFFFEA 		b	.L17
 483              	.L84:
 484              	.LVL49:
 485              	.LBE579:
 486              	.LBE578:
 487              	.LBB580:
 488              	.LBB581:
 489 01f8 130E8DE2 		add	r0, sp, #304
 490              	.LVL50:
 491 01fc FEFFFFEB 		bl	_ZN2cv6String10deallocateEv
 492              	.LVL51:
 493              	.L21:
 494              	.LBE581:
 495              	.LBE580:
 496              	.LBE582:
 497              	.LBE583:
 498              	.LBE584:
 499              	.LBE594:
 416:../src/renesas/application/r_opencv.cpp **** 
 500              		.loc 1 416 0
 501 0200 40008DE2 		add	r0, sp, #64
 502 0204 FEFFFFEB 		bl	_ZN2cv3MatD1Ev
 503              	.LVL52:
 415:../src/renesas/application/r_opencv.cpp **** 	Mat mat_dst;
 504              		.loc 1 415 0
 505 0208 78008DE2 		add	r0, sp, #120
 506 020c FEFFFFEB 		bl	_ZN2cv3MatD1Ev
 507              	.LVL53:
 508              	.LEHB2:
 509 0210 FEFFFFEB 		bl	__cxa_end_cleanup
 510              	.LVL54:
 511              	.LEHE2:
 512              	.L98:
 513              	.LBB595:
 514              	.LBB592:
 515              	.LBB591:
 516              	.LBB590:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 517              		.loc 3 704 0
 518 0214 78008DE2 		add	r0, sp, #120
 519              	.LVL55:
 520              	.LEHB3:
 521 0218 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 522              	.LVL56:
 523 021c D6FFFFEA 		b	.L19
 524              	.LVL57:
 525              	.L22:
 526              	.LBE590:
 527              	.LBE591:
1210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = m.datastart; dataend = m.dataend; datalimit = m.datalimit; allocator = m.allocator;
 528              		.loc 3 1210 0
 529 0220 08309DE5 		ldr	r3, [sp, #8]
 530 0224 78308DE5 		str	r3, [sp, #120]
 531 0228 0C309DE5 		ldr	r3, [sp, #12]
 532 022c 7C308DE5 		str	r3, [sp, #124]
 533 0230 10309DE5 		ldr	r3, [sp, #16]
 534 0234 80308DE5 		str	r3, [sp, #128]
 535 0238 14309DE5 		ldr	r3, [sp, #20]
 536 023c 84308DE5 		str	r3, [sp, #132]
 537 0240 18309DE5 		ldr	r3, [sp, #24]
 538 0244 88308DE5 		str	r3, [sp, #136]
1211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = m.u;
 539              		.loc 3 1211 0
 540 0248 1C309DE5 		ldr	r3, [sp, #28]
 541 024c 8C308DE5 		str	r3, [sp, #140]
 542 0250 20309DE5 		ldr	r3, [sp, #32]
 543 0254 90308DE5 		str	r3, [sp, #144]
 544 0258 24309DE5 		ldr	r3, [sp, #36]
 545 025c 94308DE5 		str	r3, [sp, #148]
 546 0260 28309DE5 		ldr	r3, [sp, #40]
 547 0264 98308DE5 		str	r3, [sp, #152]
1212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if (step.p != step.buf) // release self step/size
 548              		.loc 3 1212 0
 549 0268 2C309DE5 		ldr	r3, [sp, #44]
 550 026c 9C308DE5 		str	r3, [sp, #156]
1213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 551              		.loc 3 1213 0
 552 0270 A4009DE5 		ldr	r0, [sp, #164]
 553 0274 A8308DE2 		add	r3, sp, #168
 554 0278 030050E1 		cmp	r0, r3
 555 027c 0400000A 		beq	.L24
1215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step.p = step.buf;
 556              		.loc 3 1215 0
 557 0280 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 558              	.LVL58:
 559              	.LEHE3:
1216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = &rows;
 560              		.loc 3 1216 0
 561 0284 A8308DE2 		add	r3, sp, #168
 562 0288 A4308DE5 		str	r3, [sp, #164]
1217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 563              		.loc 3 1217 0
 564 028c 80308DE2 		add	r3, sp, #128
 565 0290 A0308DE5 		str	r3, [sp, #160]
 566              	.L24:
1219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 567              		.loc 3 1219 0
 568 0294 0C309DE5 		ldr	r3, [sp, #12]
 569 0298 020053E3 		cmp	r3, #2
 570 029c 1C0000CA 		bgt	.L25
 571              	.LVL59:
1221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[1] = m.step[1];
 572              		.loc 3 1221 0
 573 02a0 34309DE5 		ldr	r3, [sp, #52]
 574 02a4 002093E5 		ldr	r2, [r3]
 575 02a8 A4309DE5 		ldr	r3, [sp, #164]
 576 02ac 002083E5 		str	r2, [r3]
 577              	.LVL60:
1222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 578              		.loc 3 1222 0
 579 02b0 34309DE5 		ldr	r3, [sp, #52]
 580 02b4 042093E5 		ldr	r2, [r3, #4]
 581 02b8 A4309DE5 		ldr	r3, [sp, #164]
 582 02bc 042083E5 		str	r2, [r3, #4]
 583              	.L26:
1232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.data = NULL; m.datastart = NULL; m.dataend = NULL; m.datalimit = NULL;
 584              		.loc 3 1232 0
 585 02c0 0030A0E3 		mov	r3, #0
 586 02c4 FF3244E3 		movt	r3, 17151
 587 02c8 08308DE5 		str	r3, [sp, #8]
 588 02cc 0030A0E3 		mov	r3, #0
 589 02d0 14308DE5 		str	r3, [sp, #20]
 590 02d4 10308DE5 		str	r3, [sp, #16]
 591 02d8 0C308DE5 		str	r3, [sp, #12]
1234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.u = NULL;
 592              		.loc 3 1234 0
 593 02dc 28308DE5 		str	r3, [sp, #40]
 594              	.LVL61:
 595              	.LBE592:
 596              	.LBE595:
 597              	.LBB596:
 598              	.LBB597:
 599              	.LBB598:
 600              	.LBB599:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 601              		.loc 3 705 0
 602 02e0 2C308DE5 		str	r3, [sp, #44]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 603              		.loc 3 706 0
 604 02e4 18308DE5 		str	r3, [sp, #24]
 605 02e8 24308DE5 		str	r3, [sp, #36]
 606 02ec 20308DE5 		str	r3, [sp, #32]
 607 02f0 1C308DE5 		str	r3, [sp, #28]
 608              	.LVL62:
 609              	.L29:
 610              	.LBB600:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 611              		.loc 3 707 0
 612 02f4 0C209DE5 		ldr	r2, [sp, #12]
 613 02f8 030052E1 		cmp	r2, r3
 614 02fc 0D0000DA 		ble	.L28
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 615              		.loc 3 708 0
 616 0300 30209DE5 		ldr	r2, [sp, #48]
 617 0304 0010A0E3 		mov	r1, #0
 618 0308 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 619              		.loc 3 707 0
 620 030c 013083E2 		add	r3, r3, #1
 621              	.LVL63:
 622 0310 F7FFFFEA 		b	.L29
 623              	.LVL64:
 624              	.L25:
 625              	.LBE600:
 626              	.LBE599:
 627              	.LBE598:
 628              	.LBE597:
 629              	.LBE596:
 630              	.LBB602:
 631              	.LBB593:
1227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = m.size.p;
 632              		.loc 3 1227 0
 633 0314 34309DE5 		ldr	r3, [sp, #52]
 634 0318 A4308DE5 		str	r3, [sp, #164]
1228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.step.p = m.step.buf;
 635              		.loc 3 1228 0
 636 031c 30309DE5 		ldr	r3, [sp, #48]
 637 0320 A0308DE5 		str	r3, [sp, #160]
1229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.size.p = &m.rows;
 638              		.loc 3 1229 0
 639 0324 38308DE2 		add	r3, sp, #56
 640 0328 34308DE5 		str	r3, [sp, #52]
1230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 641              		.loc 3 1230 0
 642 032c 10308DE2 		add	r3, sp, #16
 643 0330 30308DE5 		str	r3, [sp, #48]
 644 0334 E1FFFFEA 		b	.L26
 645              	.LVL65:
 646              	.L28:
 647              	.LBE593:
 648              	.LBE602:
 649              	.LBB603:
 650              	.LBB601:
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 651              		.loc 3 591 0
 652 0338 34009DE5 		ldr	r0, [sp, #52]
 653 033c 38308DE2 		add	r3, sp, #56
 654 0340 030050E1 		cmp	r0, r3
 655 0344 0000000A 		beq	.L30
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 656              		.loc 3 592 0
 657 0348 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 658              	.LVL66:
 659              	.L30:
 660              	.LBE601:
 661              	.LBE603:
 662              	.LBB604:
 663              	.LBB605:
 664              	.LBB606:
 429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 665              		.loc 3 429 0
 666 034c 0030A0E3 		mov	r3, #0
 667 0350 FF3244E3 		movt	r3, 17151
 668 0354 08308DE5 		str	r3, [sp, #8]
 669 0358 0230A0E3 		mov	r3, #2
 670 035c 0C308DE5 		str	r3, [sp, #12]
 671 0360 10708DE5 		str	r7, [sp, #16]
 672 0364 14608DE5 		str	r6, [sp, #20]
 673 0368 18808DE5 		str	r8, [sp, #24]
 674 036c 1C808DE5 		str	r8, [sp, #28]
 675 0370 0030A0E3 		mov	r3, #0
 676 0374 20308DE5 		str	r3, [sp, #32]
 677 0378 24308DE5 		str	r3, [sp, #36]
 678 037c 28308DE5 		str	r3, [sp, #40]
 679 0380 2C308DE5 		str	r3, [sp, #44]
 680              	.LVL67:
 681              	.LBB607:
 682              	.LBB608:
 683              	.LBB609:
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 684              		.loc 3 1246 0
 685 0384 10208DE2 		add	r2, sp, #16
 686              	.LVL68:
 687 0388 30208DE5 		str	r2, [sp, #48]
 688              	.LVL69:
 689              	.LBE609:
 690              	.LBE608:
 691              	.LBE607:
 692              	.LBB610:
 693              	.LBB611:
 694              	.LBB612:
1302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 695              		.loc 3 1302 0
 696 038c 38208DE2 		add	r2, sp, #56
 697 0390 34208DE5 		str	r2, [sp, #52]
 698 0394 3C308DE5 		str	r3, [sp, #60]
 699 0398 38308DE5 		str	r3, [sp, #56]
 700              	.LVL70:
 701              	.LBE612:
 702              	.LBE611:
 703              	.LBE610:
 704              	.LBB613:
 705              	.LBB614:
 706              	.LBB615:
 803:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t p = 1;
 707              		.loc 3 803 0
 708 039c 970606E0 		mul	r6, r7, r6
 709              	.LVL71:
 710              	.LBE615:
 711              	.LBE614:
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 712              		.loc 3 431 0
 713 03a0 030056E1 		cmp	r6, r3
 714 03a4 0100000A 		beq	.L31
 715 03a8 030058E1 		cmp	r8, r3
 716 03ac 2300000A 		beq	.L99
 717              	.LVL72:
 718              	.L31:
 434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( _step == AUTO_STEP )
 719              		.loc 3 434 0
 720 03b0 14309DE5 		ldr	r3, [sp, #20]
 721              	.LVL73:
 438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 722              		.loc 3 438 0
 723 03b4 08209DE5 		ldr	r2, [sp, #8]
 724 03b8 012982E3 		orr	r2, r2, #16384
 725 03bc 08208DE5 		str	r2, [sp, #8]
 726              	.LVL74:
 727              	.LBB616:
 728              	.LBB617:
 729              		.loc 3 1320 0
 730 03c0 34209DE5 		ldr	r2, [sp, #52]
 731              	.LVL75:
 732              	.LBE617:
 733              	.LBE616:
 452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     step[1] = esz;
 734              		.loc 3 452 0
 735 03c4 003082E5 		str	r3, [r2]
 736              	.LVL76:
 453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datalimit = datastart + _step * rows;
 737              		.loc 3 453 0
 738 03c8 34209DE5 		ldr	r2, [sp, #52]
 739 03cc 0110A0E3 		mov	r1, #1
 740 03d0 041082E5 		str	r1, [r2, #4]
 454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     dataend = datalimit - _step + minstep;
 741              		.loc 3 454 0
 742 03d4 1C209DE5 		ldr	r2, [sp, #28]
 743 03d8 10109DE5 		ldr	r1, [sp, #16]
 744 03dc 912323E0 		mla	r3, r1, r3, r2
 745              	.LVL77:
 746 03e0 24308DE5 		str	r3, [sp, #36]
 455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 747              		.loc 3 455 0
 748 03e4 20308DE5 		str	r3, [sp, #32]
 749              	.LVL78:
 750              	.LBE613:
 751              	.LBE606:
 752              	.LBE605:
 753              	.LBE604:
 754              	.LBB629:
 755              	.LBB630:
 756              	.LBB631:
 757              	.LBB632:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 758              		.loc 3 703 0
 759 03e8 64309DE5 		ldr	r3, [sp, #100]
 760 03ec 000053E3 		cmp	r3, #0
 761 03f0 0900000A 		beq	.L33
 762 03f4 0C3083E2 		add	r3, r3, #12
 763 03f8 5BF07FF5 		dmb	ish
 764              	.L94:
 765 03fc 9F2F93E1 		ldrex	r2, [r3]
 766 0400 011042E2 		sub	r1, r2, #1
 767 0404 910F83E1 		strex	r0, r1, [r3]
 768 0408 000050E3 		cmp	r0, #0
 769 040c FAFFFF1A 		bne	.L94
 770 0410 5BF07FF5 		dmb	ish
 771 0414 010052E3 		cmp	r2, #1
 772 0418 2000000A 		beq	.L100
 773              	.L33:
 774              	.LVL79:
 775              	.LBB633:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 776              		.loc 3 707 0
 777 041c 0030A0E3 		mov	r3, #0
 778              	.LVL80:
 779              	.L36:
 780 0420 44209DE5 		ldr	r2, [sp, #68]
 781 0424 030052E1 		cmp	r2, r3
 782 0428 1F0000DA 		ble	.L35
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 783              		.loc 3 708 0
 784 042c 68209DE5 		ldr	r2, [sp, #104]
 785 0430 0010A0E3 		mov	r1, #0
 786 0434 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 787              		.loc 3 707 0
 788 0438 013083E2 		add	r3, r3, #1
 789              	.LVL81:
 790 043c F7FFFFEA 		b	.L36
 791              	.LVL82:
 792              	.L99:
 793              	.LBE633:
 794              	.LBE632:
 795              	.LBE631:
 796              	.LBE630:
 797              	.LBE629:
 798              	.LBB638:
 799              	.LBB628:
 800              	.LBB627:
 801              	.LBB626:
 802              	.LBB618:
 803              	.LBB619:
 804              	.LBB620:
 618:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 805              		.loc 4 618 0
 806 0440 38318DE5 		str	r3, [sp, #312]
 807 0444 3C318DE5 		str	r3, [sp, #316]
 808              	.LVL83:
 809              	.LBB621:
 622:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 810              		.loc 4 622 0
 811 0448 1C10A0E3 		mov	r1, #28
 812 044c 4E0F8DE2 		add	r0, sp, #312
 813              	.LVL84:
 814              	.LEHB4:
 815 0450 FEFFFFEB 		bl	_ZN2cv6String8allocateEj
 816              	.LVL85:
 817              	.LEHE4:
 818 0454 1C20A0E3 		mov	r2, #28
 819 0458 001000E3 		movw	r1, #:lower16:.LC0
 820 045c 001040E3 		movt	r1, #:upper16:.LC0
 821 0460 FEFFFFEB 		bl	memcpy
 822              	.LVL86:
 823              	.LBE621:
 824              	.LBE620:
 825              	.LBE619:
 826              	.LBE618:
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 827              		.loc 3 431 0
 828 0464 AF3100E3 		movw	r3, #431
 829 0468 00308DE5 		str	r3, [sp]
 830 046c 003000E3 		movw	r3, #:lower16:.LC1
 831 0470 003040E3 		movt	r3, #:upper16:.LC1
 832 0474 002000E3 		movw	r2, #:lower16:.LANCHOR1
 833 0478 002040E3 		movt	r2, #:upper16:.LANCHOR1
 834 047c 4E1F8DE2 		add	r1, sp, #312
 835 0480 D600E0E3 		mvn	r0, #214
 836              	.LEHB5:
 837 0484 FEFFFFEB 		bl	_ZN2cv5errorEiRKNS_6StringEPKcS4_i
 838              	.LVL87:
 839              	.LEHE5:
 840              	.LBB622:
 841              	.LBB623:
 842              		.loc 4 664 0
 843 0488 4E0F8DE2 		add	r0, sp, #312
 844              	.LVL88:
 845 048c FEFFFFEB 		bl	_ZN2cv6String10deallocateEv
 846              	.LVL89:
 847 0490 C6FFFFEA 		b	.L31
 848              	.L85:
 849              	.LVL90:
 850              	.LBE623:
 851              	.LBE622:
 852              	.LBB624:
 853              	.LBB625:
 854 0494 4E0F8DE2 		add	r0, sp, #312
 855              	.LVL91:
 856 0498 FEFFFFEB 		bl	_ZN2cv6String10deallocateEv
 857              	.LVL92:
 858 049c 57FFFFEA 		b	.L21
 859              	.LVL93:
 860              	.L100:
 861              	.LBE625:
 862              	.LBE624:
 863              	.LBE626:
 864              	.LBE627:
 865              	.LBE628:
 866              	.LBE638:
 867              	.LBB639:
 868              	.LBB636:
 869              	.LBB635:
 870              	.LBB634:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 871              		.loc 3 704 0
 872 04a0 40008DE2 		add	r0, sp, #64
 873              	.LVL94:
 874              	.LEHB6:
 875 04a4 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 876              	.LVL95:
 877 04a8 DBFFFFEA 		b	.L33
 878              	.LVL96:
 879              	.L35:
 880              	.LBE634:
 881              	.LBE635:
1210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = m.datastart; dataend = m.dataend; datalimit = m.datalimit; allocator = m.allocator;
 882              		.loc 3 1210 0
 883 04ac 08309DE5 		ldr	r3, [sp, #8]
 884 04b0 40308DE5 		str	r3, [sp, #64]
 885 04b4 0C309DE5 		ldr	r3, [sp, #12]
 886 04b8 44308DE5 		str	r3, [sp, #68]
 887 04bc 10309DE5 		ldr	r3, [sp, #16]
 888 04c0 48308DE5 		str	r3, [sp, #72]
 889 04c4 14309DE5 		ldr	r3, [sp, #20]
 890 04c8 4C308DE5 		str	r3, [sp, #76]
 891 04cc 18309DE5 		ldr	r3, [sp, #24]
 892 04d0 50308DE5 		str	r3, [sp, #80]
1211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = m.u;
 893              		.loc 3 1211 0
 894 04d4 1C309DE5 		ldr	r3, [sp, #28]
 895 04d8 54308DE5 		str	r3, [sp, #84]
 896 04dc 20309DE5 		ldr	r3, [sp, #32]
 897 04e0 58308DE5 		str	r3, [sp, #88]
 898 04e4 24309DE5 		ldr	r3, [sp, #36]
 899 04e8 5C308DE5 		str	r3, [sp, #92]
 900 04ec 28309DE5 		ldr	r3, [sp, #40]
 901 04f0 60308DE5 		str	r3, [sp, #96]
1212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if (step.p != step.buf) // release self step/size
 902              		.loc 3 1212 0
 903 04f4 2C309DE5 		ldr	r3, [sp, #44]
 904 04f8 64308DE5 		str	r3, [sp, #100]
1213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 905              		.loc 3 1213 0
 906 04fc 6C009DE5 		ldr	r0, [sp, #108]
 907 0500 70308DE2 		add	r3, sp, #112
 908 0504 030050E1 		cmp	r0, r3
 909 0508 0400000A 		beq	.L37
1215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step.p = step.buf;
 910              		.loc 3 1215 0
 911 050c FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 912              	.LVL97:
 913              	.LEHE6:
1216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = &rows;
 914              		.loc 3 1216 0
 915 0510 70308DE2 		add	r3, sp, #112
 916 0514 6C308DE5 		str	r3, [sp, #108]
1217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 917              		.loc 3 1217 0
 918 0518 48308DE2 		add	r3, sp, #72
 919 051c 68308DE5 		str	r3, [sp, #104]
 920              	.L37:
1219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 921              		.loc 3 1219 0
 922 0520 0C309DE5 		ldr	r3, [sp, #12]
 923 0524 020053E3 		cmp	r3, #2
 924 0528 1C0000CA 		bgt	.L38
 925              	.LVL98:
1221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[1] = m.step[1];
 926              		.loc 3 1221 0
 927 052c 34309DE5 		ldr	r3, [sp, #52]
 928 0530 002093E5 		ldr	r2, [r3]
 929 0534 6C309DE5 		ldr	r3, [sp, #108]
 930 0538 002083E5 		str	r2, [r3]
 931              	.LVL99:
1222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 932              		.loc 3 1222 0
 933 053c 34309DE5 		ldr	r3, [sp, #52]
 934 0540 042093E5 		ldr	r2, [r3, #4]
 935 0544 6C309DE5 		ldr	r3, [sp, #108]
 936 0548 042083E5 		str	r2, [r3, #4]
 937              	.L39:
1232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.data = NULL; m.datastart = NULL; m.dataend = NULL; m.datalimit = NULL;
 938              		.loc 3 1232 0
 939 054c 0030A0E3 		mov	r3, #0
 940 0550 FF3244E3 		movt	r3, 17151
 941 0554 08308DE5 		str	r3, [sp, #8]
 942 0558 0030A0E3 		mov	r3, #0
 943 055c 14308DE5 		str	r3, [sp, #20]
 944 0560 10308DE5 		str	r3, [sp, #16]
 945 0564 0C308DE5 		str	r3, [sp, #12]
1234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.u = NULL;
 946              		.loc 3 1234 0
 947 0568 28308DE5 		str	r3, [sp, #40]
 948              	.LVL100:
 949              	.LBE636:
 950              	.LBE639:
 951              	.LBB640:
 952              	.LBB641:
 953              	.LBB642:
 954              	.LBB643:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 955              		.loc 3 705 0
 956 056c 2C308DE5 		str	r3, [sp, #44]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 957              		.loc 3 706 0
 958 0570 18308DE5 		str	r3, [sp, #24]
 959 0574 24308DE5 		str	r3, [sp, #36]
 960 0578 20308DE5 		str	r3, [sp, #32]
 961 057c 1C308DE5 		str	r3, [sp, #28]
 962              	.LVL101:
 963              	.L42:
 964              	.LBB644:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 965              		.loc 3 707 0
 966 0580 0C209DE5 		ldr	r2, [sp, #12]
 967 0584 030052E1 		cmp	r2, r3
 968 0588 0D0000DA 		ble	.L41
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 969              		.loc 3 708 0
 970 058c 30209DE5 		ldr	r2, [sp, #48]
 971 0590 0010A0E3 		mov	r1, #0
 972 0594 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 973              		.loc 3 707 0
 974 0598 013083E2 		add	r3, r3, #1
 975              	.LVL102:
 976 059c F7FFFFEA 		b	.L42
 977              	.LVL103:
 978              	.L38:
 979              	.LBE644:
 980              	.LBE643:
 981              	.LBE642:
 982              	.LBE641:
 983              	.LBE640:
 984              	.LBB646:
 985              	.LBB637:
1227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = m.size.p;
 986              		.loc 3 1227 0
 987 05a0 34309DE5 		ldr	r3, [sp, #52]
 988 05a4 6C308DE5 		str	r3, [sp, #108]
1228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.step.p = m.step.buf;
 989              		.loc 3 1228 0
 990 05a8 30309DE5 		ldr	r3, [sp, #48]
 991 05ac 68308DE5 		str	r3, [sp, #104]
1229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.size.p = &m.rows;
 992              		.loc 3 1229 0
 993 05b0 38308DE2 		add	r3, sp, #56
 994 05b4 34308DE5 		str	r3, [sp, #52]
1230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 995              		.loc 3 1230 0
 996 05b8 10308DE2 		add	r3, sp, #16
 997 05bc 30308DE5 		str	r3, [sp, #48]
 998 05c0 E1FFFFEA 		b	.L39
 999              	.LVL104:
 1000              	.L41:
 1001              	.LBE637:
 1002              	.LBE646:
 1003              	.LBB647:
 1004              	.LBB645:
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 1005              		.loc 3 591 0
 1006 05c4 34009DE5 		ldr	r0, [sp, #52]
 1007 05c8 38308DE2 		add	r3, sp, #56
 1008 05cc 030050E1 		cmp	r0, r3
 1009 05d0 0000000A 		beq	.L43
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 1010              		.loc 3 592 0
 1011 05d4 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 1012              	.LVL105:
 1013              	.L43:
 1014              	.LBE645:
 1015              	.LBE647:
 423:../src/renesas/application/r_opencv.cpp **** 		{
 1016              		.loc 1 423 0
 1017 05d8 000054E3 		cmp	r4, #0
 1018 05dc 1500001A 		bne	.L44
 1019              	.LVL106:
 1020              	.LBB648:
 1021              	.LBB649:
 1022              	.LBB650:
 1023              	.LBB651:
 1024              	.LBB652:
 1025              		.file 5 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0.
   1:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /*M///////////////////////////////////////////////////////////////////////////////////////
   2:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
   3:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
   4:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
   5:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //  By downloading, copying, installing or using the software you agree to this license.
   6:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //  If you do not agree to this license, do not download, install,
   7:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //  copy or use the software.
   8:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
   9:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
  10:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //                          License Agreement
  11:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //                For Open Source Computer Vision Library
  12:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
  13:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // Copyright (C) 2000-2008, Intel Corporation, all rights reserved.
  14:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // Copyright (C) 2009, Willow Garage Inc., all rights reserved.
  15:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // Copyright (C) 2013, OpenCV Foundation, all rights reserved.
  16:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // Third party copyrights are property of their respective owners.
  17:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
  18:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // Redistribution and use in source and binary forms, with or without modification,
  19:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // are permitted provided that the following conditions are met:
  20:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
  21:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //   * Redistribution's of source code must retain the above copyright notice,
  22:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //     this list of conditions and the following disclaimer.
  23:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
  24:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //   * Redistribution's in binary form must reproduce the above copyright notice,
  25:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //     this list of conditions and the following disclaimer in the documentation
  26:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //     and/or other materials provided with the distribution.
  27:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
  28:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //   * The name of the copyright holders may not be used to endorse or promote products
  29:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //     derived from this software without specific prior written permission.
  30:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
  31:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // This software is provided by the copyright holders and contributors "as is" and
  32:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // any express or implied warranties, including, but not limited to, the implied
  33:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // warranties of merchantability and fitness for a particular purpose are disclaimed.
  34:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // In no event shall the Intel Corporation or contributors be liable for any direct,
  35:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // indirect, incidental, special, exemplary, or consequential damages
  36:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // (including, but not limited to, procurement of substitute goods or services;
  37:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // loss of use, data, or profits; or business interruption) however caused
  38:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // and on any theory of liability, whether in contract, strict liability,
  39:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // or tort (including negligence or otherwise) arising in any way out of
  40:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** // the use of this software, even if advised of the possibility of such damage.
  41:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //
  42:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //M*/
  43:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  44:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #ifndef OPENCV_CORE_TYPES_HPP
  45:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #define OPENCV_CORE_TYPES_HPP
  46:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  47:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #ifndef __cplusplus
  48:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #  error types.hpp header must be compiled as C++
  49:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #endif
  50:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  51:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #include <climits>
  52:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #include <cfloat>
  53:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #include <vector>
  54:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #include <limits>
  55:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  56:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #include "opencv2/core/cvdef.h"
  57:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #include "opencv2/core/cvstd.hpp"
  58:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #include "opencv2/core/matx.hpp"
  59:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** namespace cv
  61:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
  62:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  63:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //! @addtogroup core_basic
  64:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //! @{
  65:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  66:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// Complex //////////////////////////////
  67:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  68:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief  A complex number class.
  69:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  70:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****   The template class is similar and compatible with std::complex, however it provides slightly
  71:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****   more convenient access to the real and imaginary parts using through the simple field access, as 
  72:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****   to std::complex::real() and std::complex::imag().
  73:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
  74:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class Complex
  75:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
  76:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
  77:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  78:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! constructors
  79:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Complex();
  80:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Complex( _Tp _re, _Tp _im = 0 );
  81:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  82:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conversion to another data type
  83:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename T2> operator Complex<T2>() const;
  84:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conjugation
  85:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Complex conj() const;
  86:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  87:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp re, im; //< the real and the imaginary parts
  88:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
  89:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  90:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Complex<float> Complexf;
  91:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Complex<double> Complexd;
  92:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
  93:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class DataType< Complex<_Tp> >
  94:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
  95:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
  96:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Complex<_Tp> value_type;
  97:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef value_type   work_type;
  98:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp          channel_type;
  99:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 100:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 101:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 102:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = 2,
 103:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 104:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels) };
 105:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 106:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 107:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 108:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 109:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 110:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 111:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// Point_ ////////////////////////////////
 112:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 113:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief Template class for 2D points specified by its coordinates `x` and `y`.
 114:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 115:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** An instance of the class is interchangeable with C structures, CvPoint and CvPoint2D32f . There is
 116:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** also a cast operator to convert point coordinates to the specified type. The conversion from
 117:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** floating-point coordinates to integer coordinates is done by rounding. Commonly, the conversion
 118:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** uses this operation for each of the coordinates. Besides the class members listed in the
 119:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** declaration above, the following operations on points are implemented:
 120:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 121:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 = pt2 + pt3;
 122:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 = pt2 - pt3;
 123:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 = pt2 * a;
 124:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 = a * pt2;
 125:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 = pt2 / a;
 126:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 += pt2;
 127:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 -= pt2;
 128:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 *= a;
 129:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 /= a;
 130:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     double value = norm(pt); // L2 norm
 131:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 == pt2;
 132:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     pt1 != pt2;
 133:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 134:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** For your convenience, the following type aliases are defined:
 135:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 136:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point_<int> Point2i;
 137:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point2i Point;
 138:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point_<float> Point2f;
 139:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point_<double> Point2d;
 140:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 141:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Example:
 142:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 143:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point2f a(0.3f, 0.f), b(0.f, 0.4f);
 144:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point pt = (a + b)*10.f;
 145:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     cout << pt.x << ", " << pt.y << endl;
 146:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 147:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 148:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class Point_
 149:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 150:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 151:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp value_type;
 152:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 153:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     // various constructors
 154:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_();
 155:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_(_Tp _x, _Tp _y);
 156:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_(const Point_& pt);
 157:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_(const Size_<_Tp>& sz);
 158:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_(const Vec<_Tp, 2>& v);
 159:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 160:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_& operator = (const Point_& pt);
 161:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conversion to another data type
 162:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename _Tp2> operator Point_<_Tp2>() const;
 163:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 164:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conversion to the old-style C structures
 165:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     operator Vec<_Tp, 2>() const;
 166:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 167:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! dot product
 168:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp dot(const Point_& pt) const;
 169:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! dot product computed in double-precision arithmetics
 170:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     double ddot(const Point_& pt) const;
 171:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! cross-product
 172:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     double cross(const Point_& pt) const;
 173:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! checks whether the point is inside the specified rectangle
 174:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     bool inside(const Rect_<_Tp>& r) const;
 175:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 176:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp x, y; //< the point coordinates
 177:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 178:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 179:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Point_<int> Point2i;
 180:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Point_<int64> Point2l;
 181:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Point_<float> Point2f;
 182:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Point_<double> Point2d;
 183:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Point2i Point;
 184:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 185:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class DataType< Point_<_Tp> >
 186:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 187:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 188:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point_<_Tp>                               value_type;
 189:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point_<typename DataType<_Tp>::work_type> work_type;
 190:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp                                       channel_type;
 191:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 192:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 193:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 194:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = 2,
 195:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 196:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 197:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 198:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 199:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 200:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 201:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 202:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 203:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 204:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// Point3_ ////////////////////////////////
 205:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 206:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief Template class for 3D points specified by its coordinates `x`, `y` and `z`.
 207:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 208:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** An instance of the class is interchangeable with the C structure CvPoint2D32f . Similarly to
 209:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_ , the coordinates of 3D points can be converted to another type. The vector arithmetic and
 210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** comparison operations are also supported.
 211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The following Point3_\<\> aliases are available:
 213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 214:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point3_<int> Point3i;
 215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point3_<float> Point3f;
 216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point3_<double> Point3d;
 217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 218:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @see cv::Point3i, cv::Point3f and cv::Point3d
 219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 220:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class Point3_
 221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 223:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp value_type;
 224:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 225:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     // various constructors
 226:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_();
 227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_(_Tp _x, _Tp _y, _Tp _z);
 228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_(const Point3_& pt);
 229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     explicit Point3_(const Point_<_Tp>& pt);
 230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_(const Vec<_Tp, 3>& v);
 231:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_& operator = (const Point3_& pt);
 233:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conversion to another data type
 234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename _Tp2> operator Point3_<_Tp2>() const;
 235:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conversion to cv::Vec<>
 236:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #if OPENCV_ABI_COMPATIBILITY > 300
 237:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename _Tp2> operator Vec<_Tp2, 3>() const;
 238:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #else
 239:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     operator Vec<_Tp, 3>() const;
 240:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #endif
 241:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 242:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! dot product
 243:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp dot(const Point3_& pt) const;
 244:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! dot product computed in double-precision arithmetics
 245:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     double ddot(const Point3_& pt) const;
 246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! cross product of the 2 3D points
 247:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_ cross(const Point3_& pt) const;
 248:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 249:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp x, y, z; //< the point coordinates
 250:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 251:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 252:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Point3_<int> Point3i;
 253:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Point3_<float> Point3f;
 254:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Point3_<double> Point3d;
 255:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 256:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class DataType< Point3_<_Tp> >
 257:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 258:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 259:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point3_<_Tp>                               value_type;
 260:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Point3_<typename DataType<_Tp>::work_type> work_type;
 261:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp                                        channel_type;
 262:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 263:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 264:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 265:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = 3,
 266:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 267:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 268:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 269:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 270:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 271:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 272:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 273:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 274:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 275:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// Size_ ////////////////////////////////
 276:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 277:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief Template class for specifying the size of an image or rectangle.
 278:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 279:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The class includes two members called width and height. The structure can be converted to and from
 280:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** the old OpenCV structures CvSize and CvSize2D32f . The same set of arithmetic and comparison
 281:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** operations as for Point_ is available.
 282:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 283:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** OpenCV defines the following Size_\<\> aliases:
 284:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 285:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Size_<int> Size2i;
 286:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Size2i Size;
 287:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Size_<float> Size2f;
 288:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 289:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 290:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class Size_
 291:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 292:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 293:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp value_type;
 294:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 295:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! various constructors
 296:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Size_();
 297:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Size_(_Tp _width, _Tp _height);
 298:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Size_(const Size_& sz);
 299:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Size_(const Point_<_Tp>& pt);
 300:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 301:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Size_& operator = (const Size_& sz);
 302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! the area (width*height)
 303:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp area() const;
 304:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 305:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conversion of another data type.
 306:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename _Tp2> operator Size_<_Tp2>() const;
 307:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 308:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp width, height; // the width and the height
 309:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 310:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 311:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Size_<int> Size2i;
 312:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Size_<int64> Size2l;
 313:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Size_<float> Size2f;
 314:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Size_<double> Size2d;
 315:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Size2i Size;
 316:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 317:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class DataType< Size_<_Tp> >
 318:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 319:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 320:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Size_<_Tp>                               value_type;
 321:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Size_<typename DataType<_Tp>::work_type> work_type;
 322:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp                                      channel_type;
 323:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 324:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 325:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 326:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = 2,
 327:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 328:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 329:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 330:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 331:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 332:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 333:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 334:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 335:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 336:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// Rect_ ////////////////////////////////
 337:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 338:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief Template class for 2D rectangles
 339:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 340:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** described by the following parameters:
 341:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   Coordinates of the top-left corner. This is a default interpretation of Rect_::x and Rect_::y
 342:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     in OpenCV. Though, in your algorithms you may count x and y from the bottom-left corner.
 343:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   Rectangle width and height.
 344:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 345:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** OpenCV typically assumes that the top and left boundary of the rectangle are inclusive, while the
 346:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** right and bottom boundaries are not. For example, the method Rect_::contains returns true if
 347:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 348:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** \f[x  \leq pt.x < x+width,
 349:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****       y  \leq pt.y < y+height\f]
 350:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 351:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Virtually every loop over an image ROI in OpenCV (where ROI is specified by Rect_\<int\> ) is
 352:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** implemented as:
 353:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 354:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     for(int y = roi.y; y < roi.y + roi.height; y++)
 355:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         for(int x = roi.x; x < roi.x + roi.width; x++)
 356:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         {
 357:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****             // ...
 358:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         }
 359:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 360:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** In addition to the class members, the following operations on rectangles are implemented:
 361:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   \f$\texttt{rect} = \texttt{rect} \pm \texttt{point}\f$ (shifting a rectangle by a certain offse
 362:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   \f$\texttt{rect} = \texttt{rect} \pm \texttt{size}\f$ (expanding or shrinking a rectangle by a
 363:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     certain amount)
 364:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   rect += point, rect -= point, rect += size, rect -= size (augmenting operations)
 365:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   rect = rect1 & rect2 (rectangle intersection)
 366:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   rect = rect1 | rect2 (minimum area rectangle containing rect1 and rect2 )
 367:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   rect &= rect1, rect |= rect1 (and the corresponding augmenting operations)
 368:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** -   rect == rect1, rect != rect1 (rectangle comparison)
 369:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 370:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** This is an example how the partial ordering on rectangles can be established (rect1 \f$\subseteq\f$
 371:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** rect2):
 372:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 373:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename _Tp> inline bool
 374:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     operator <= (const Rect_<_Tp>& r1, const Rect_<_Tp>& r2)
 375:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     {
 376:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         return (r1 & r2) == r1;
 377:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     }
 378:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 379:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** For your convenience, the Rect_\<\> alias is available: cv::Rect
 380:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 381:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class Rect_
 382:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 383:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 384:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp value_type;
 385:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 386:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! various constructors
 387:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect_();
 388:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect_(_Tp _x, _Tp _y, _Tp _width, _Tp _height);
 389:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect_(const Rect_& r);
 390:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect_(const Point_<_Tp>& org, const Size_<_Tp>& sz);
 391:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect_(const Point_<_Tp>& pt1, const Point_<_Tp>& pt2);
 392:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 393:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect_& operator = ( const Rect_& r );
 394:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! the top-left corner
 395:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_<_Tp> tl() const;
 396:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! the bottom-right corner
 397:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_<_Tp> br() const;
 398:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 399:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! size (width, height) of the rectangle
 400:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Size_<_Tp> size() const;
 401:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! area (width*height) of the rectangle
 402:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp area() const;
 403:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 404:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conversion to another data type
 405:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename _Tp2> operator Rect_<_Tp2>() const;
 406:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 407:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! checks whether the rectangle contains the point
 408:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     bool contains(const Point_<_Tp>& pt) const;
 409:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 410:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp x, y, width, height; //< the top-left corner, as well as width and height of the rectangle
 411:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 412:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 413:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Rect_<int> Rect2i;
 414:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Rect_<float> Rect2f;
 415:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Rect_<double> Rect2d;
 416:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Rect2i Rect;
 417:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 418:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class DataType< Rect_<_Tp> >
 419:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 420:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 421:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Rect_<_Tp>                               value_type;
 422:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Rect_<typename DataType<_Tp>::work_type> work_type;
 423:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp                                      channel_type;
 424:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 425:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 426:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 427:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = 4,
 428:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 430:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 432:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 433:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 435:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 436:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 437:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** ///////////////////////////// RotatedRect /////////////////////////////
 438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 439:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief The class represents rotated (i.e. not up-right) rectangles on a plane.
 440:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 441:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Each rectangle is specified by the center point (mass center), length of each side (represented by
 442:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** cv::Size2f structure) and the rotation angle in degrees.
 443:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 444:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The sample below demonstrates how to use RotatedRect:
 445:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 446:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Mat image(200, 200, CV_8UC3, Scalar(0));
 447:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     RotatedRect rRect = RotatedRect(Point2f(100,100), Size2f(100,50), 30);
 448:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 449:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point2f vertices[4];
 450:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     rRect.points(vertices);
 451:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     for (int i = 0; i < 4; i++)
 452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         line(image, vertices[i], vertices[(i+1)%4], Scalar(0,255,0));
 453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect brect = rRect.boundingRect();
 455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     rectangle(image, brect, Scalar(255,0,0));
 456:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 457:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     imshow("rectangles", image);
 458:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     waitKey(0);
 459:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 460:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** ![image](pics/rotatedrect.png)
 461:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 462:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @sa CamShift, fitEllipse, minAreaRect, CvBox2D
 463:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 464:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** class CV_EXPORTS RotatedRect
 465:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 466:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 467:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! various constructors
 468:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     RotatedRect();
 469:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /**
 470:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param center The rectangle mass center.
 471:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param size Width and height of the rectangle.
 472:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param angle The rotation angle in a clockwise direction. When the angle is 0, 90, 180, 270 etc
 473:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     the rectangle becomes an up-right rectangle.
 474:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     */
 475:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     RotatedRect(const Point2f& center, const Size2f& size, float angle);
 476:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /**
 477:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Any 3 end points of the RotatedRect. They must be given in order (either clockwise or
 478:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     anticlockwise).
 479:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****      */
 480:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     RotatedRect(const Point2f& point1, const Point2f& point2, const Point2f& point3);
 481:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 482:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /** returns 4 vertices of the rectangle
 483:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param pts The points array for storing rectangle vertices.
 484:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     */
 485:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     void points(Point2f pts[]) const;
 486:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! returns the minimal up-right integer rectangle containing the rotated rectangle
 487:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect boundingRect() const;
 488:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! returns the minimal (exact) floating point rectangle containing the rotated rectangle, not 
 489:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Rect_<float> boundingRect2f() const;
 490:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 491:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point2f center; //< the rectangle mass center
 492:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Size2f size;    //< width and height of the rectangle
 493:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     float angle;    //< the rotation angle. When the angle is 0, 90, 180, 270 etc., the rectangle b
 494:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 495:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 496:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<> class DataType< RotatedRect >
 497:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 498:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 499:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef RotatedRect  value_type;
 500:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef value_type   work_type;
 501:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef float        channel_type;
 502:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 503:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 504:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 505:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = (int)sizeof(value_type)/sizeof(channel_type), // 5
 506:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 507:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 508:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 509:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 510:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 511:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 512:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 513:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 514:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 515:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// Range /////////////////////////////////
 516:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 517:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief Template class specifying a continuous subsequence (slice) of a sequence.
 518:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 519:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The class is used to specify a row or a column span in a matrix ( Mat ) and for many other purposes
 520:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Range(a,b) is basically the same as a:b in Matlab or a..b in Python. As in Python, start is an
 521:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** inclusive left boundary of the range and end is an exclusive right boundary of the range. Such a
 522:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** half-opened interval is usually denoted as \f$[start,end)\f$ .
 523:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 524:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The static method Range::all() returns a special variable that means "the whole sequence" or "the
 525:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** whole range", just like " : " in Matlab or " ... " in Python. All the methods and functions in
 526:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** OpenCV that take Range support this special Range::all() value. But, of course, in case of your own
 527:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** custom processing, you will probably have to check and handle it explicitly:
 528:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @code
 529:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     void my_function(..., const Range& r, ....)
 530:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     {
 531:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         if(r == Range::all()) {
 532:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****             // process all the data
 533:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         }
 534:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         else {
 535:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****             // process [r.start, r.end)
 536:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         }
 537:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     }
 538:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @endcode
 539:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 540:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** class CV_EXPORTS Range
 541:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 542:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 543:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Range();
 544:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Range(int _start, int _end);
 545:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     int size() const;
 546:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     bool empty() const;
 547:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     static Range all();
 548:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 549:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     int start, end;
 550:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 551:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 552:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<> class DataType<Range>
 553:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 554:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 555:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Range      value_type;
 556:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef value_type work_type;
 557:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef int        channel_type;
 558:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 559:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 560:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 561:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = 2,
 562:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 563:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 564:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 565:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 566:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 567:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 568:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 569:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 570:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 571:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// Scalar_ ///////////////////////////////
 572:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 573:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief Template class for a 4-element vector derived from Vec.
 574:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 575:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Being derived from Vec\<_Tp, 4\> , Scalar_ and Scalar can be used just as typical 4-element
 576:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** vectors. In addition, they can be converted to/from CvScalar . The type Scalar is widely used in
 577:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** OpenCV to pass pixel values.
 578:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 579:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class Scalar_ : public Vec<_Tp, 4>
 580:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 581:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 582:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! various constructors
 583:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Scalar_();
 584:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Scalar_(_Tp v0, _Tp v1, _Tp v2=0, _Tp v3=0);
 585:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Scalar_(_Tp v0);
 586:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 587:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename _Tp2, int cn>
 588:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Scalar_(const Vec<_Tp2, cn>& v);
 589:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 590:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! returns a scalar with all elements set to v0
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     static Scalar_<_Tp> all(_Tp v0);
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 593:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! conversion to another data type
 594:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     template<typename T2> operator Scalar_<T2>() const;
 595:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 596:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! per-element product
 597:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Scalar_<_Tp> mul(const Scalar_<_Tp>& a, double scale=1 ) const;
 598:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 599:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     // returns (v0, -v1, -v2, -v3)
 600:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Scalar_<_Tp> conj() const;
 601:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 602:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     // returns true iff v1 == v2 == v3 == 0
 603:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     bool isReal() const;
 604:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 605:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 606:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** typedef Scalar_<double> Scalar;
 607:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 608:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> class DataType< Scalar_<_Tp> >
 609:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 610:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 611:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Scalar_<_Tp>                               value_type;
 612:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Scalar_<typename DataType<_Tp>::work_type> work_type;
 613:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef _Tp                                        channel_type;
 614:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 615:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 616:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 617:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = 4,
 618:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 619:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 620:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 621:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 622:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 623:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 624:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 625:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 626:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 627:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /////////////////////////////// KeyPoint ////////////////////////////////
 628:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 629:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief Data structure for salient point detectors.
 630:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 631:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The class instance stores a keypoint, i.e. a point feature found by one of many available keypoint
 632:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** detectors, such as Harris corner detector, cv::FAST, cv::StarDetector, cv::SURF, cv::SIFT,
 633:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** cv::LDetector etc.
 634:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 635:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The keypoint is characterized by the 2D position, scale (proportional to the diameter of the
 636:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** neighborhood that needs to be taken into account), orientation and some other parameters. The
 637:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** keypoint neighborhood is then analyzed by another algorithm that builds a descriptor (usually
 638:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** represented as a feature vector). The keypoints representing the same object in different images
 639:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** can then be matched using cv::KDTree or another method.
 640:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 641:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** class CV_EXPORTS_W_SIMPLE KeyPoint
 642:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 643:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 644:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! the default constructor
 645:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_WRAP KeyPoint();
 646:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /**
 647:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _pt x & y coordinates of the keypoint
 648:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _size keypoint diameter
 649:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _angle keypoint orientation
 650:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _response keypoint detector response on the keypoint (that is, strength of the keypoint)
 651:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _octave pyramid octave in which the keypoint has been detected
 652:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _class_id object id
 653:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****      */
 654:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     KeyPoint(Point2f _pt, float _size, float _angle=-1, float _response=0, int _octave=0, int _clas
 655:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /**
 656:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param x x-coordinate of the keypoint
 657:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param y y-coordinate of the keypoint
 658:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _size keypoint diameter
 659:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _angle keypoint orientation
 660:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _response keypoint detector response on the keypoint (that is, strength of the keypoint)
 661:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _octave pyramid octave in which the keypoint has been detected
 662:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param _class_id object id
 663:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****      */
 664:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_WRAP KeyPoint(float x, float y, float _size, float _angle=-1, float _response=0, int _octave
 665:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 666:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     size_t hash() const;
 667:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 668:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /**
 669:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     This method converts vector of keypoints to vector of points or the reverse, where each keypoin
 670:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     assigned the same size and the same orientation.
 671:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 672:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param keypoints Keypoints obtained from any feature detection algorithm like SIFT/SURF/ORB
 673:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param points2f Array of (x,y) coordinates of each keypoint
 674:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param keypointIndexes Array of indexes of keypoints to be converted to points. (Acts like a ma
 675:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     convert only specified keypoints)
 676:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     */
 677:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_WRAP static void convert(const std::vector<KeyPoint>& keypoints,
 678:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****                                 CV_OUT std::vector<Point2f>& points2f,
 679:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****                                 const std::vector<int>& keypointIndexes=std::vector<int>());
 680:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /** @overload
 681:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param points2f Array of (x,y) coordinates of each keypoint
 682:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param keypoints Keypoints obtained from any feature detection algorithm like SIFT/SURF/ORB
 683:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param size keypoint diameter
 684:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param response keypoint detector response on the keypoint (that is, strength of the keypoint)
 685:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param octave pyramid octave in which the keypoint has been detected
 686:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param class_id object id
 687:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     */
 688:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_WRAP static void convert(const std::vector<Point2f>& points2f,
 689:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****                                 CV_OUT std::vector<KeyPoint>& keypoints,
 690:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****                                 float size=1, float response=1, int octave=0, int class_id=-1);
 691:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 692:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /**
 693:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     This method computes overlap for pair of keypoints. Overlap is the ratio between area of keypoi
 694:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     regions' intersection and area of keypoint regions' union (considering keypoint region as circl
 695:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     If they don't overlap, we get zero. If they coincide at same location with same size, we get 1.
 696:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param kp1 First keypoint
 697:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param kp2 Second keypoint
 698:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     */
 699:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_WRAP static float overlap(const KeyPoint& kp1, const KeyPoint& kp2);
 700:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 701:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW Point2f pt; //!< coordinates of the keypoints
 702:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW float size; //!< diameter of the meaningful keypoint neighborhood
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW float angle; //!< computed orientation of the keypoint (-1 if not applicable);
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****                             //!< it's in [0,360) degrees and measured relative to
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****                             //!< image coordinate system, ie in clockwise.
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW float response; //!< the response by which the most strong keypoints have been selec
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW int octave; //!< octave (pyramid layer) from which the keypoint has been extracted
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW int class_id; //!< object class (if the keypoints need to be clustered by an object 
 709:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 710:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 711:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<> class DataType<KeyPoint>
 712:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 713:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 714:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef KeyPoint      value_type;
 715:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef float         work_type;
 716:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef float         channel_type;
 717:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 718:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 719:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 720:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = (int)(sizeof(value_type)/sizeof(channel_type)), // 7
 721:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 722:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 723:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 724:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 725:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 726:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 727:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 728:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 729:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 730:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// DMatch /////////////////////////////////
 731:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 732:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief Class for matching keypoint descriptors
 733:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 734:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** query descriptor index, train descriptor index, train image index, and distance between
 735:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** descriptors.
 736:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 737:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** class CV_EXPORTS_W_SIMPLE DMatch
 738:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 739:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 740:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_WRAP DMatch();
 741:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_WRAP DMatch(int _queryIdx, int _trainIdx, float _distance);
 742:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_WRAP DMatch(int _queryIdx, int _trainIdx, int _imgIdx, float _distance);
 743:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 744:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW int queryIdx; // query descriptor index
 745:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW int trainIdx; // train descriptor index
 746:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW int imgIdx;   // train image index
 747:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 748:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW float distance;
 749:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 750:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     // less is better
 751:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     bool operator<(const DMatch &m) const;
 752:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 753:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 754:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<> class DataType<DMatch>
 755:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 756:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 757:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef DMatch      value_type;
 758:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef int         work_type;
 759:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef int         channel_type;
 760:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 761:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 762:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 763:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = (int)(sizeof(value_type)/sizeof(channel_type)), // 4
 764:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 765:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 766:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 767:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 768:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 769:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 770:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 771:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 772:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 773:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** ///////////////////////////// TermCriteria //////////////////////////////
 774:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 775:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief The class defining termination criteria for iterative algorithms.
 776:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 777:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** You can initialize it by default constructor and then override any parameters, or the structure may
 778:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** be fully initialized using the advanced variant of the constructor.
 779:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** */
 780:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** class CV_EXPORTS TermCriteria
 781:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 782:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 783:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /**
 784:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****       Criteria type, can be one of: COUNT, EPS or COUNT + EPS
 785:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     */
 786:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum Type
 787:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     {
 788:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         COUNT=1, //!< the maximum number of iterations or elements to compute
 789:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         MAX_ITER=COUNT, //!< ditto
 790:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****         EPS=2 //!< the desired accuracy or change in parameters at which the iterative algorithm st
 791:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     };
 792:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 793:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! default constructor
 794:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     TermCriteria();
 795:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     /**
 796:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param type The type of termination criteria, one of TermCriteria::Type
 797:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param maxCount The maximum number of iterations or elements to compute.
 798:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     @param epsilon The desired accuracy or change in parameters at which the iterative algorithm st
 799:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     */
 800:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     TermCriteria(int type, int maxCount, double epsilon);
 801:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 802:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     int type; //!< the type of termination criteria: COUNT, EPS or COUNT + EPS
 803:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     int maxCount; // the maximum number of iterations/elements
 804:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     double epsilon; // the desired accuracy
 805:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 806:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 807:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 808:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //! @} core_basic
 809:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 810:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** ///////////////////////// raster image moments //////////////////////////
 811:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 812:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //! @addtogroup imgproc_shape
 813:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //! @{
 814:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 815:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /** @brief struct returned by cv::moments
 816:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 817:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The spatial moments \f$\texttt{Moments::m}_{ji}\f$ are computed as:
 818:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 819:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** \f[\texttt{m} _{ji}= \sum _{x,y}  \left ( \texttt{array} (x,y)  \cdot x^j  \cdot y^i \right )\f]
 820:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 821:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The central moments \f$\texttt{Moments::mu}_{ji}\f$ are computed as:
 822:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 823:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** \f[\texttt{mu} _{ji}= \sum _{x,y}  \left ( \texttt{array} (x,y)  \cdot (x -  \bar{x} )^j  \cdot (y 
 824:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 825:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** where \f$(\bar{x}, \bar{y})\f$ is the mass center:
 826:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 827:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** \f[\bar{x} = \frac{\texttt{m}_{10}}{\texttt{m}_{00}} , \; \bar{y} = \frac{\texttt{m}_{01}}{\texttt{
 828:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 829:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The normalized central moments \f$\texttt{Moments::nu}_{ij}\f$ are computed as:
 830:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 831:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** \f[\texttt{nu} _{ji}= \frac{\texttt{mu}_{ji}}{\texttt{m}_{00}^{(i+j)/2+1}} .\f]
 832:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 833:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @note
 834:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** \f$\texttt{mu}_{00}=\texttt{m}_{00}\f$, \f$\texttt{nu}_{00}=1\f$
 835:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** \f$\texttt{nu}_{10}=\texttt{mu}_{10}=\texttt{mu}_{01}=\texttt{mu}_{10}=0\f$ , hence the values are 
 836:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** stored.
 837:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 838:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** The moments of a contour are defined in the same way but computed using the Green's formula (see
 839:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** <http://en.wikipedia.org/wiki/Green_theorem>). So, due to a limited raster resolution, the moments
 840:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** computed for a contour are slightly different from the moments computed for the same rasterized
 841:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** contour.
 842:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 843:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** @note
 844:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Since the contour moments are computed using Green formula, you may get seemingly odd results for
 845:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** contours with self-intersections, e.g. a zero area (m00) for butterfly-shaped contours.
 846:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****  */
 847:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** class CV_EXPORTS_W_MAP Moments
 848:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 849:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 850:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! the default constructor
 851:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Moments();
 852:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! the full constructor
 853:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Moments(double m00, double m10, double m01, double m20, double m11,
 854:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****             double m02, double m30, double m21, double m12, double m03 );
 855:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     ////! the conversion from CvMoments
 856:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //Moments( const CvMoments& moments );
 857:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     ////! the conversion to CvMoments
 858:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //operator CvMoments() const;
 859:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 860:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @name spatial moments
 861:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @{
 862:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;
 863:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @}
 864:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 865:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @name central moments
 866:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @{
 867:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW double  mu20, mu11, mu02, mu30, mu21, mu12, mu03;
 868:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @}
 869:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 870:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @name central normalized moments
 871:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @{
 872:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     CV_PROP_RW double  nu20, nu11, nu02, nu30, nu21, nu12, nu03;
 873:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     //! @}
 874:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 875:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 876:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<> class DataType<Moments>
 877:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 878:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** public:
 879:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Moments     value_type;
 880:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef double      work_type;
 881:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef double      channel_type;
 882:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 883:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     enum { generic_type = 0,
 884:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            depth        = DataType<channel_type>::depth,
 885:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            channels     = (int)(sizeof(value_type)/sizeof(channel_type)), // 24
 886:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),
 887:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****            type         = CV_MAKETYPE(depth, channels)
 888:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****          };
 889:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 890:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     typedef Vec<channel_type, channels> vec_type;
 891:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** };
 892:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 893:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //! @} imgproc_shape
 894:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 895:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //! @cond IGNORED
 896:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 897:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /////////////////////////////////////////////////////////////////////////
 898:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** ///////////////////////////// Implementation ////////////////////////////
 899:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** /////////////////////////////////////////////////////////////////////////
 900:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 901:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// Complex ////////////////////////////////
 902:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 903:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
 904:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>::Complex()
 905:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : re(0), im(0) {}
 906:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 907:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
 908:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>::Complex( _Tp _re, _Tp _im )
 909:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : re(_re), im(_im) {}
 910:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 911:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> template<typename T2> inline
 912:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>::operator Complex<T2>() const
 913:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 914:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<T2>(saturate_cast<T2>(re), saturate_cast<T2>(im));
 915:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 916:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 917:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
 918:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> Complex<_Tp>::conj() const
 919:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 920:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>(re, -im);
 921:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 922:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 923:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 924:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 925:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** bool operator == (const Complex<_Tp>& a, const Complex<_Tp>& b)
 926:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 927:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a.re == b.re && a.im == b.im;
 928:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 929:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 930:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 931:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** bool operator != (const Complex<_Tp>& a, const Complex<_Tp>& b)
 932:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 933:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a.re != b.re || a.im != b.im;
 934:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 935:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 936:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 937:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator + (const Complex<_Tp>& a, const Complex<_Tp>& b)
 938:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 939:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( a.re + b.re, a.im + b.im );
 940:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 941:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 942:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 943:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>& operator += (Complex<_Tp>& a, const Complex<_Tp>& b)
 944:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 945:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.re += b.re; a.im += b.im;
 946:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
 947:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 948:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 949:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 950:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator - (const Complex<_Tp>& a, const Complex<_Tp>& b)
 951:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 952:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( a.re - b.re, a.im - b.im );
 953:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 954:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 955:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 956:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>& operator -= (Complex<_Tp>& a, const Complex<_Tp>& b)
 957:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 958:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.re -= b.re; a.im -= b.im;
 959:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
 960:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 961:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 962:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 963:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator - (const Complex<_Tp>& a)
 964:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 965:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>(-a.re, -a.im);
 966:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 967:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 968:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 969:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator * (const Complex<_Tp>& a, const Complex<_Tp>& b)
 970:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 971:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( a.re*b.re - a.im*b.im, a.re*b.im + a.im*b.re );
 972:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 973:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 974:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 975:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator * (const Complex<_Tp>& a, _Tp b)
 976:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 977:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( a.re*b, a.im*b );
 978:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 979:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 980:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 981:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator * (_Tp b, const Complex<_Tp>& a)
 982:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 983:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( a.re*b, a.im*b );
 984:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 985:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 986:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 987:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator + (const Complex<_Tp>& a, _Tp b)
 988:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 989:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( a.re + b, a.im );
 990:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
 991:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 992:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 993:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator - (const Complex<_Tp>& a, _Tp b)
 994:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** { return Complex<_Tp>( a.re - b, a.im ); }
 995:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
 996:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
 997:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator + (_Tp b, const Complex<_Tp>& a)
 998:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
 999:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( a.re + b, a.im );
1000:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1001:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1002:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1003:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator - (_Tp b, const Complex<_Tp>& a)
1004:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1005:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( b - a.re, -a.im );
1006:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1007:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1008:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1009:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>& operator += (Complex<_Tp>& a, _Tp b)
1010:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1011:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.re += b; return a;
1012:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1013:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1014:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1015:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>& operator -= (Complex<_Tp>& a, _Tp b)
1016:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1017:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.re -= b; return a;
1018:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1019:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1020:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1021:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>& operator *= (Complex<_Tp>& a, _Tp b)
1022:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1023:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.re *= b; a.im *= b; return a;
1024:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1025:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1026:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1027:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** double abs(const Complex<_Tp>& a)
1028:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1029:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return std::sqrt( (double)a.re*a.re + (double)a.im*a.im);
1030:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1031:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1032:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1033:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator / (const Complex<_Tp>& a, const Complex<_Tp>& b)
1034:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1035:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     double t = 1./((double)b.re*b.re + (double)b.im*b.im);
1036:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( (_Tp)((a.re*b.re + a.im*b.im)*t),
1037:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****                         (_Tp)((-a.re*b.im + a.im*b.re)*t) );
1038:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1039:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1040:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1041:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp>& operator /= (Complex<_Tp>& a, const Complex<_Tp>& b)
1042:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1043:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return (a = a / b);
1044:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1045:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1046:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1047:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator / (const Complex<_Tp>& a, _Tp b)
1048:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1049:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp t = (_Tp)1/b;
1050:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>( a.re*t, a.im*t );
1051:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1052:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1053:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1054:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator / (_Tp b, const Complex<_Tp>& a)
1055:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1056:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Complex<_Tp>(b)/a;
1057:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1058:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1059:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1060:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Complex<_Tp> operator /= (const Complex<_Tp>& a, _Tp b)
1061:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1062:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     _Tp t = (_Tp)1/b;
1063:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.re *= t; a.im *= t; return a;
1064:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1065:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1066:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1067:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1068:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// 2D Point ///////////////////////////////
1069:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1070:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1071:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>::Point_()
1072:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(0), y(0) {}
1073:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1074:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1075:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>::Point_(_Tp _x, _Tp _y)
1076:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(_x), y(_y) {}
1077:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1078:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1079:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>::Point_(const Point_& pt)
1080:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(pt.x), y(pt.y) {}
1081:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1082:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1083:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>::Point_(const Size_<_Tp>& sz)
1084:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(sz.width), y(sz.height) {}
1085:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1086:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1087:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>::Point_(const Vec<_Tp,2>& v)
1088:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(v[0]), y(v[1]) {}
1089:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1090:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1091:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& Point_<_Tp>::operator = (const Point_& pt)
1092:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1093:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     x = pt.x; y = pt.y;
1094:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return *this;
1095:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1096:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1097:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> template<typename _Tp2> inline
1098:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>::operator Point_<_Tp2>() const
1099:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1100:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp2>(saturate_cast<_Tp2>(x), saturate_cast<_Tp2>(y));
1101:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1102:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1103:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1104:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>::operator Vec<_Tp, 2>() const
1105:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1106:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Vec<_Tp, 2>(x, y);
1107:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1108:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1109:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1110:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** _Tp Point_<_Tp>::dot(const Point_& pt) const
1111:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1112:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return saturate_cast<_Tp>(x*pt.x + y*pt.y);
1113:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1114:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1115:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1116:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** double Point_<_Tp>::ddot(const Point_& pt) const
1117:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1118:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return (double)x*pt.x + (double)y*pt.y;
1119:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1120:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1121:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1122:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** double Point_<_Tp>::cross(const Point_& pt) const
1123:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1124:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return (double)x*pt.y - (double)y*pt.x;
1125:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1126:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1127:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline bool
1128:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>::inside( const Rect_<_Tp>& r ) const
1129:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1130:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return r.contains(*this);
1131:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1132:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1133:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1134:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1135:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& operator += (Point_<_Tp>& a, const Point_<_Tp>& b)
1136:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1137:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x += b.x;
1138:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y += b.y;
1139:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1140:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1141:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1142:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1143:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& operator -= (Point_<_Tp>& a, const Point_<_Tp>& b)
1144:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1145:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x -= b.x;
1146:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y -= b.y;
1147:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1148:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1149:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1150:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1151:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& operator *= (Point_<_Tp>& a, int b)
1152:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1153:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x * b);
1154:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y * b);
1155:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1156:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1157:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1158:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1159:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& operator *= (Point_<_Tp>& a, float b)
1160:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1161:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x * b);
1162:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y * b);
1163:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1164:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1165:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1166:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1167:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& operator *= (Point_<_Tp>& a, double b)
1168:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1169:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x * b);
1170:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y * b);
1171:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1172:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1173:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1174:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1175:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& operator /= (Point_<_Tp>& a, int b)
1176:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1177:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x / b);
1178:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y / b);
1179:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1180:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1181:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1182:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1183:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& operator /= (Point_<_Tp>& a, float b)
1184:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1185:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x / b);
1186:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y / b);
1187:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1188:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1189:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1190:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1191:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp>& operator /= (Point_<_Tp>& a, double b)
1192:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1193:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x / b);
1194:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y / b);
1195:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1196:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1197:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1198:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1199:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** double norm(const Point_<_Tp>& pt)
1200:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1201:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return std::sqrt((double)pt.x*pt.x + (double)pt.y*pt.y);
1202:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1203:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1204:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1205:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** bool operator == (const Point_<_Tp>& a, const Point_<_Tp>& b)
1206:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1207:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a.x == b.x && a.y == b.y;
1208:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1209:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** bool operator != (const Point_<_Tp>& a, const Point_<_Tp>& b)
1212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a.x != b.x || a.y != b.y;
1214:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator + (const Point_<_Tp>& a, const Point_<_Tp>& b)
1218:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(a.x + b.x), saturate_cast<_Tp>(a.y + b.y) );
1220:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1223:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator - (const Point_<_Tp>& a, const Point_<_Tp>& b)
1224:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1225:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(a.x - b.x), saturate_cast<_Tp>(a.y - b.y) );
1226:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator - (const Point_<_Tp>& a)
1230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1231:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(-a.x), saturate_cast<_Tp>(-a.y) );
1232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1233:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1235:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator * (const Point_<_Tp>& a, int b)
1236:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1237:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(a.x*b), saturate_cast<_Tp>(a.y*b) );
1238:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1239:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1240:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1241:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator * (int a, const Point_<_Tp>& b)
1242:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1243:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(b.x*a), saturate_cast<_Tp>(b.y*a) );
1244:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1245:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1247:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator * (const Point_<_Tp>& a, float b)
1248:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1249:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(a.x*b), saturate_cast<_Tp>(a.y*b) );
1250:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1251:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1252:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1253:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator * (float a, const Point_<_Tp>& b)
1254:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1255:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(b.x*a), saturate_cast<_Tp>(b.y*a) );
1256:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1257:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1258:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1259:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator * (const Point_<_Tp>& a, double b)
1260:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1261:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(a.x*b), saturate_cast<_Tp>(a.y*b) );
1262:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1263:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1264:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1265:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator * (double a, const Point_<_Tp>& b)
1266:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1267:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>( saturate_cast<_Tp>(b.x*a), saturate_cast<_Tp>(b.y*a) );
1268:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1269:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1270:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1271:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator * (const Matx<_Tp, 2, 2>& a, const Point_<_Tp>& b)
1272:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1273:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Matx<_Tp, 2, 1> tmp = a * Vec<_Tp,2>(b.x, b.y);
1274:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point_<_Tp>(tmp.val[0], tmp.val[1]);
1275:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1276:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1277:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1278:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator * (const Matx<_Tp, 3, 3>& a, const Point_<_Tp>& b)
1279:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1280:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Matx<_Tp, 3, 1> tmp = a * Vec<_Tp,3>(b.x, b.y, 1);
1281:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>(tmp.val[0], tmp.val[1], tmp.val[2]);
1282:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1283:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1284:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1285:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator / (const Point_<_Tp>& a, int b)
1286:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1287:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_<_Tp> tmp(a);
1288:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     tmp /= b;
1289:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return tmp;
1290:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1291:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1292:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1293:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator / (const Point_<_Tp>& a, float b)
1294:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1295:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_<_Tp> tmp(a);
1296:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     tmp /= b;
1297:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return tmp;
1298:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1299:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1300:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1301:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point_<_Tp> operator / (const Point_<_Tp>& a, double b)
1302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1303:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point_<_Tp> tmp(a);
1304:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     tmp /= b;
1305:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return tmp;
1306:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1307:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1308:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1309:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1310:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** //////////////////////////////// 3D Point ///////////////////////////////
1311:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1312:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1313:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>::Point3_()
1314:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(0), y(0), z(0) {}
1315:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1316:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1317:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>::Point3_(_Tp _x, _Tp _y, _Tp _z)
1318:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(_x), y(_y), z(_z) {}
1319:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1320:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1321:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>::Point3_(const Point3_& pt)
1322:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(pt.x), y(pt.y), z(pt.z) {}
1323:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1324:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1325:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>::Point3_(const Point_<_Tp>& pt)
1326:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(pt.x), y(pt.y), z(_Tp()) {}
1327:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1328:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1329:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>::Point3_(const Vec<_Tp, 3>& v)
1330:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : x(v[0]), y(v[1]), z(v[2]) {}
1331:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1332:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> template<typename _Tp2> inline
1333:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>::operator Point3_<_Tp2>() const
1334:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1335:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp2>(saturate_cast<_Tp2>(x), saturate_cast<_Tp2>(y), saturate_cast<_Tp2>(z));
1336:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1337:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1338:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #if OPENCV_ABI_COMPATIBILITY > 300
1339:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> template<typename _Tp2> inline
1340:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>::operator Vec<_Tp2, 3>() const
1341:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1342:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Vec<_Tp2, 3>(x, y, z);
1343:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1344:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #else
1345:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1346:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>::operator Vec<_Tp, 3>() const
1347:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1348:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Vec<_Tp, 3>(x, y, z);
1349:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1350:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** #endif
1351:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1352:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1353:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& Point3_<_Tp>::operator = (const Point3_& pt)
1354:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1355:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     x = pt.x; y = pt.y; z = pt.z;
1356:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return *this;
1357:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1358:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1359:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1360:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** _Tp Point3_<_Tp>::dot(const Point3_& pt) const
1361:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1362:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return saturate_cast<_Tp>(x*pt.x + y*pt.y + z*pt.z);
1363:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1364:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1365:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1366:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** double Point3_<_Tp>::ddot(const Point3_& pt) const
1367:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1368:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return (double)x*pt.x + (double)y*pt.y + (double)z*pt.z;
1369:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1370:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1371:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1372:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> Point3_<_Tp>::cross(const Point3_<_Tp>& pt) const
1373:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1374:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>(y*pt.z - z*pt.y, z*pt.x - x*pt.z, x*pt.y - y*pt.x);
1375:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1376:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1377:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1378:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1379:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& operator += (Point3_<_Tp>& a, const Point3_<_Tp>& b)
1380:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1381:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x += b.x;
1382:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y += b.y;
1383:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.z += b.z;
1384:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1385:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1386:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1387:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1388:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& operator -= (Point3_<_Tp>& a, const Point3_<_Tp>& b)
1389:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1390:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x -= b.x;
1391:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y -= b.y;
1392:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.z -= b.z;
1393:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1394:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1395:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1396:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1397:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& operator *= (Point3_<_Tp>& a, int b)
1398:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1399:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x * b);
1400:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y * b);
1401:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.z = saturate_cast<_Tp>(a.z * b);
1402:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1403:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1404:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1405:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1406:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& operator *= (Point3_<_Tp>& a, float b)
1407:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1408:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x * b);
1409:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y * b);
1410:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.z = saturate_cast<_Tp>(a.z * b);
1411:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1412:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1413:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1414:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1415:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& operator *= (Point3_<_Tp>& a, double b)
1416:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1417:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x * b);
1418:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y * b);
1419:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.z = saturate_cast<_Tp>(a.z * b);
1420:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1421:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1422:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1423:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1424:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& operator /= (Point3_<_Tp>& a, int b)
1425:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1426:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x / b);
1427:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y / b);
1428:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.z = saturate_cast<_Tp>(a.z / b);
1429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1430:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1432:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1433:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& operator /= (Point3_<_Tp>& a, float b)
1434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1435:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x / b);
1436:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y / b);
1437:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.z = saturate_cast<_Tp>(a.z / b);
1438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1439:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1440:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1441:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1442:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp>& operator /= (Point3_<_Tp>& a, double b)
1443:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1444:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.x = saturate_cast<_Tp>(a.x / b);
1445:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.y = saturate_cast<_Tp>(a.y / b);
1446:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     a.z = saturate_cast<_Tp>(a.z / b);
1447:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a;
1448:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1449:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1450:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1451:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** double norm(const Point3_<_Tp>& pt)
1452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return std::sqrt((double)pt.x*pt.x + (double)pt.y*pt.y + (double)pt.z*pt.z);
1454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1456:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1457:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** bool operator == (const Point3_<_Tp>& a, const Point3_<_Tp>& b)
1458:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1459:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a.x == b.x && a.y == b.y && a.z == b.z;
1460:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1461:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1462:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1463:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** bool operator != (const Point3_<_Tp>& a, const Point3_<_Tp>& b)
1464:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1465:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a.x != b.x || a.y != b.y || a.z != b.z;
1466:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1467:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1468:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1469:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator + (const Point3_<_Tp>& a, const Point3_<_Tp>& b)
1470:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1471:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(a.x + b.x), saturate_cast<_Tp>(a.y + b.y), saturate_cas
1472:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1473:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1474:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1475:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator - (const Point3_<_Tp>& a, const Point3_<_Tp>& b)
1476:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1477:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(a.x - b.x), saturate_cast<_Tp>(a.y - b.y), saturate_cas
1478:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1479:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1480:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1481:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator - (const Point3_<_Tp>& a)
1482:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1483:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(-a.x), saturate_cast<_Tp>(-a.y), saturate_cast<_Tp>(-a.
1484:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1485:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1486:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1487:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator * (const Point3_<_Tp>& a, int b)
1488:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1489:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(a.x*b), saturate_cast<_Tp>(a.y*b), saturate_cast<_Tp>(a
1490:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1491:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1492:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1493:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator * (int a, const Point3_<_Tp>& b)
1494:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1495:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(b.x * a), saturate_cast<_Tp>(b.y * a), saturate_cast<_T
1496:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1497:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1498:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1499:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator * (const Point3_<_Tp>& a, float b)
1500:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1501:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(a.x * b), saturate_cast<_Tp>(a.y * b), saturate_cast<_T
1502:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1503:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1504:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1505:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator * (float a, const Point3_<_Tp>& b)
1506:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1507:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(b.x * a), saturate_cast<_Tp>(b.y * a), saturate_cast<_T
1508:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1509:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1510:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1511:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator * (const Point3_<_Tp>& a, double b)
1512:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1513:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(a.x * b), saturate_cast<_Tp>(a.y * b), saturate_cast<_T
1514:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1515:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1516:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1517:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator * (double a, const Point3_<_Tp>& b)
1518:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1519:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>( saturate_cast<_Tp>(b.x * a), saturate_cast<_Tp>(b.y * a), saturate_cast<_T
1520:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1521:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1522:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1523:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator * (const Matx<_Tp, 3, 3>& a, const Point3_<_Tp>& b)
1524:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1525:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Matx<_Tp, 3, 1> tmp = a * Vec<_Tp,3>(b.x, b.y, b.z);
1526:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return Point3_<_Tp>(tmp.val[0], tmp.val[1], tmp.val[2]);
1527:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1528:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1529:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1530:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Matx<_Tp, 4, 1> operator * (const Matx<_Tp, 4, 4>& a, const Point3_<_Tp>& b)
1531:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1532:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return a * Matx<_Tp, 4, 1>(b.x, b.y, b.z, 1);
1533:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1534:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1535:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1536:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator / (const Point3_<_Tp>& a, int b)
1537:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1538:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_<_Tp> tmp(a);
1539:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     tmp /= b;
1540:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return tmp;
1541:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1542:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1543:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1544:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator / (const Point3_<_Tp>& a, float b)
1545:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1546:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_<_Tp> tmp(a);
1547:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     tmp /= b;
1548:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return tmp;
1549:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1550:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1551:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> static inline
1552:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Point3_<_Tp> operator / (const Point3_<_Tp>& a, double b)
1553:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** {
1554:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     Point3_<_Tp> tmp(a);
1555:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     tmp /= b;
1556:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     return tmp;
1557:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** }
1558:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1559:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1560:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1561:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** ////////////////////////////////// Size /////////////////////////////////
1562:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** 
1563:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** template<typename _Tp> inline
1564:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp **** Size_<_Tp>::Size_()
1565:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\types.hpp ****     : width(0), height(0) {}
 1026              		.loc 5 1565 0
 1027 05e0 0020A0E3 		mov	r2, #0
 1028 05e4 B8208DE5 		str	r2, [sp, #184]
 1029 05e8 BC208DE5 		str	r2, [sp, #188]
 1030              	.LVL107:
 1031              	.LBE652:
 1032              	.LBE651:
 1033              	.LBE650:
 1034              	.LBB653:
 1035              	.LBB654:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1036              		.loc 3 60 0
 1037 05ec 0230A0E1 		mov	r3, r2
 1038 05f0 013140E3 		movt	r3, 257
 1039 05f4 B0308DE5 		str	r3, [sp, #176]
 1040 05f8 78308DE2 		add	r3, sp, #120
 1041              	.LVL108:
 1042 05fc B4308DE5 		str	r3, [sp, #180]
 1043              	.LVL109:
 1044              	.LBE654:
 1045              	.LBE653:
 1046              	.LBE649:
 1047              	.LBE648:
 1048              	.LBB655:
 1049              	.LBB656:
 1050              	.LBB657:
 1051              	.LBB658:
 1052              	.LBB659:
 1053              	.LBB660:
 1054              		.loc 5 1565 0
 1055 0600 C8208DE5 		str	r2, [sp, #200]
 1056 0604 CC208DE5 		str	r2, [sp, #204]
 1057              	.LVL110:
 1058              	.LBE660:
 1059              	.LBE659:
 1060              	.LBE658:
 1061              	.LBE657:
 1062              	.LBE656:
 1063              	.LBB661:
 1064              	.LBB662:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1065              		.loc 3 60 0
 1066 0608 0230A0E1 		mov	r3, r2
 1067 060c 013240E3 		movt	r3, 513
 1068 0610 C0308DE5 		str	r3, [sp, #192]
 1069 0614 40308DE2 		add	r3, sp, #64
 1070              	.LVL111:
 1071 0618 C4308DE5 		str	r3, [sp, #196]
 1072              	.LVL112:
 1073              	.LBE662:
 1074              	.LBE661:
 1075              	.LBE655:
 425:../src/renesas/application/r_opencv.cpp **** 		}
 1076              		.loc 1 425 0
 1077 061c F31B9FED 		vldr.64	d1, .L108
 1078 0620 905A07EE 		vmov	s15, r5	@ int
 1079 0624 670BB8EE 		vcvt.f64.u32	d0, s15
 1080 0628 C0108DE2 		add	r1, sp, #192
 1081 062c B0008DE2 		add	r0, sp, #176
 1082              	.LEHB7:
 1083 0630 FEFFFFEB 		bl	_ZN2cv9thresholdERKNS_11_InputArrayERKNS_12_OutputArrayEddi
 1084              	.LVL113:
 1085 0634 130000EA 		b	.L45
 1086              	.L44:
 1087              	.LVL114:
 1088              	.LBB663:
 1089              	.LBB664:
 1090              	.LBB665:
 1091              	.LBB666:
 1092              	.LBB667:
 1093              		.loc 5 1565 0
 1094 0638 0030A0E3 		mov	r3, #0
 1095 063c D8308DE5 		str	r3, [sp, #216]
 1096 0640 DC308DE5 		str	r3, [sp, #220]
 1097              	.LVL115:
 1098              	.LBE667:
 1099              	.LBE666:
 1100              	.LBE665:
 1101              	.LBB668:
 1102              	.LBB669:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1103              		.loc 3 60 0
 1104 0644 0320A0E1 		mov	r2, r3
 1105 0648 012140E3 		movt	r2, 257
 1106 064c D0208DE5 		str	r2, [sp, #208]
 1107 0650 78208DE2 		add	r2, sp, #120
 1108              	.LVL116:
 1109 0654 D4208DE5 		str	r2, [sp, #212]
 1110              	.LVL117:
 1111              	.LBE669:
 1112              	.LBE668:
 1113              	.LBE664:
 1114              	.LBE663:
 1115              	.LBB670:
 1116              	.LBB671:
 1117              	.LBB672:
 1118              	.LBB673:
 1119              	.LBB674:
 1120              	.LBB675:
 1121              		.loc 5 1565 0
 1122 0658 E8308DE5 		str	r3, [sp, #232]
 1123 065c EC308DE5 		str	r3, [sp, #236]
 1124              	.LVL118:
 1125              	.LBE675:
 1126              	.LBE674:
 1127              	.LBE673:
 1128              	.LBE672:
 1129              	.LBE671:
 1130              	.LBB676:
 1131              	.LBB677:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1132              		.loc 3 60 0
 1133 0660 013240E3 		movt	r3, 513
 1134 0664 E0308DE5 		str	r3, [sp, #224]
 1135 0668 40308DE2 		add	r3, sp, #64
 1136              	.LVL119:
 1137 066c E4308DE5 		str	r3, [sp, #228]
 1138              	.LVL120:
 1139              	.LBE677:
 1140              	.LBE676:
 1141              	.LBE670:
 429:../src/renesas/application/r_opencv.cpp **** 		}
 1142              		.loc 1 429 0
 1143 0670 0820A0E3 		mov	r2, #8
 1144 0674 DD1B9FED 		vldr.64	d1, .L108
 1145 0678 DE0B9FED 		vldr.64	d0, .L108+8
 1146 067c E0108DE2 		add	r1, sp, #224
 1147 0680 D0008DE2 		add	r0, sp, #208
 1148 0684 FEFFFFEB 		bl	_ZN2cv9thresholdERKNS_11_InputArrayERKNS_12_OutputArrayEddi
 1149              	.LVL121:
 1150              	.L45:
 1151              	.LBB678:
 1152              	.LBB679:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 1153              		.loc 3 703 0
 1154 0688 9C309DE5 		ldr	r3, [sp, #156]
 1155 068c 000053E3 		cmp	r3, #0
 1156 0690 0900000A 		beq	.L46
 1157 0694 0C3083E2 		add	r3, r3, #12
 1158 0698 5BF07FF5 		dmb	ish
 1159              	.L93:
 1160 069c 9F2F93E1 		ldrex	r2, [r3]
 1161 06a0 011042E2 		sub	r1, r2, #1
 1162 06a4 910F83E1 		strex	r0, r1, [r3]
 1163 06a8 000050E3 		cmp	r0, #0
 1164 06ac FAFFFF1A 		bne	.L93
 1165 06b0 5BF07FF5 		dmb	ish
 1166 06b4 010052E3 		cmp	r2, #1
 1167 06b8 0D00000A 		beq	.L101
 1168              	.L46:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 1169              		.loc 3 705 0
 1170 06bc 0030A0E3 		mov	r3, #0
 1171 06c0 9C308DE5 		str	r3, [sp, #156]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 1172              		.loc 3 706 0
 1173 06c4 88308DE5 		str	r3, [sp, #136]
 1174 06c8 94308DE5 		str	r3, [sp, #148]
 1175 06cc 90308DE5 		str	r3, [sp, #144]
 1176 06d0 8C308DE5 		str	r3, [sp, #140]
 1177              	.LVL122:
 1178              	.L48:
 1179              	.LBB680:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1180              		.loc 3 707 0
 1181 06d4 7C209DE5 		ldr	r2, [sp, #124]
 1182 06d8 030052E1 		cmp	r2, r3
 1183 06dc 070000DA 		ble	.L47
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 1184              		.loc 3 708 0
 1185 06e0 A0209DE5 		ldr	r2, [sp, #160]
 1186 06e4 0010A0E3 		mov	r1, #0
 1187 06e8 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1188              		.loc 3 707 0
 1189 06ec 013083E2 		add	r3, r3, #1
 1190              	.LVL123:
 1191 06f0 F7FFFFEA 		b	.L48
 1192              	.LVL124:
 1193              	.L101:
 1194              	.LBE680:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 1195              		.loc 3 704 0
 1196 06f4 78008DE2 		add	r0, sp, #120
 1197              	.LVL125:
 1198 06f8 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 1199              	.LVL126:
 1200 06fc EEFFFFEA 		b	.L46
 1201              	.LVL127:
 1202              	.L47:
 1203              	.LBE679:
 1204              	.LBE678:
 1205              	.LBB681:
 1206              	.LBB682:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 1207              		.loc 3 703 0
 1208 0700 64309DE5 		ldr	r3, [sp, #100]
 1209 0704 000053E3 		cmp	r3, #0
 1210 0708 0900000A 		beq	.L49
 1211 070c 0C3083E2 		add	r3, r3, #12
 1212 0710 5BF07FF5 		dmb	ish
 1213              	.L92:
 1214 0714 9F2F93E1 		ldrex	r2, [r3]
 1215 0718 011042E2 		sub	r1, r2, #1
 1216 071c 910F83E1 		strex	r0, r1, [r3]
 1217 0720 000050E3 		cmp	r0, #0
 1218 0724 FAFFFF1A 		bne	.L92
 1219 0728 5BF07FF5 		dmb	ish
 1220 072c 010052E3 		cmp	r2, #1
 1221 0730 0D00000A 		beq	.L102
 1222              	.L49:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 1223              		.loc 3 705 0
 1224 0734 0030A0E3 		mov	r3, #0
 1225 0738 64308DE5 		str	r3, [sp, #100]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 1226              		.loc 3 706 0
 1227 073c 50308DE5 		str	r3, [sp, #80]
 1228 0740 5C308DE5 		str	r3, [sp, #92]
 1229 0744 58308DE5 		str	r3, [sp, #88]
 1230 0748 54308DE5 		str	r3, [sp, #84]
 1231              	.LVL128:
 1232              	.L51:
 1233              	.LBB683:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1234              		.loc 3 707 0
 1235 074c 44209DE5 		ldr	r2, [sp, #68]
 1236 0750 030052E1 		cmp	r2, r3
 1237 0754 F60000DA 		ble	.L50
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 1238              		.loc 3 708 0
 1239 0758 68209DE5 		ldr	r2, [sp, #104]
 1240 075c 0010A0E3 		mov	r1, #0
 1241 0760 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1242              		.loc 3 707 0
 1243 0764 013083E2 		add	r3, r3, #1
 1244              	.LVL129:
 1245 0768 F7FFFFEA 		b	.L51
 1246              	.LVL130:
 1247              	.L102:
 1248              	.LBE683:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 1249              		.loc 3 704 0
 1250 076c 40008DE2 		add	r0, sp, #64
 1251              	.LVL131:
 1252 0770 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 1253              	.LVL132:
 1254 0774 EEFFFFEA 		b	.L49
 1255              	.LVL133:
 1256              	.L16:
 1257              	.LBE682:
 1258              	.LBE681:
 1259              	.LBB684:
 1260              	.LBB685:
 1261              	.LBB686:
 429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 1262              		.loc 3 429 0
 1263 0778 0030A0E3 		mov	r3, #0
 1264 077c FF3244E3 		movt	r3, 17151
 1265 0780 08308DE5 		str	r3, [sp, #8]
 1266 0784 0230A0E3 		mov	r3, #2
 1267 0788 0C308DE5 		str	r3, [sp, #12]
 1268 078c 10708DE5 		str	r7, [sp, #16]
 1269 0790 14608DE5 		str	r6, [sp, #20]
 1270 0794 18008DE5 		str	r0, [sp, #24]
 1271 0798 1C008DE5 		str	r0, [sp, #28]
 1272 079c 0030A0E3 		mov	r3, #0
 1273 07a0 20308DE5 		str	r3, [sp, #32]
 1274 07a4 24308DE5 		str	r3, [sp, #36]
 1275 07a8 28308DE5 		str	r3, [sp, #40]
 1276 07ac 2C308DE5 		str	r3, [sp, #44]
 1277              	.LVL134:
 1278              	.LBB687:
 1279              	.LBB688:
 1280              	.LBB689:
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1281              		.loc 3 1246 0
 1282 07b0 10208DE2 		add	r2, sp, #16
 1283              	.LVL135:
 1284 07b4 30208DE5 		str	r2, [sp, #48]
 1285              	.LVL136:
 1286              	.LBE689:
 1287              	.LBE688:
 1288              	.LBE687:
 1289              	.LBB690:
 1290              	.LBB691:
 1291              	.LBB692:
1302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 1292              		.loc 3 1302 0
 1293 07b8 38208DE2 		add	r2, sp, #56
 1294 07bc 34208DE5 		str	r2, [sp, #52]
 1295 07c0 3C308DE5 		str	r3, [sp, #60]
 1296 07c4 38308DE5 		str	r3, [sp, #56]
 1297              	.LVL137:
 1298              	.LBE692:
 1299              	.LBE691:
 1300              	.LBE690:
 1301              	.LBB693:
 1302              	.LBB694:
 1303              	.LBB695:
 803:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t p = 1;
 1304              		.loc 3 803 0
 1305 07c8 970606E0 		mul	r6, r7, r6
 1306              	.LVL138:
 1307              	.LBE695:
 1308              	.LBE694:
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1309              		.loc 3 431 0
 1310 07cc 030056E1 		cmp	r6, r3
 1311 07d0 0100000A 		beq	.L52
 1312 07d4 030050E1 		cmp	r0, r3
 1313 07d8 2300000A 		beq	.L103
 1314              	.LVL139:
 1315              	.L52:
 434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( _step == AUTO_STEP )
 1316              		.loc 3 434 0
 1317 07dc 14309DE5 		ldr	r3, [sp, #20]
 1318              	.LVL140:
 438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 1319              		.loc 3 438 0
 1320 07e0 08209DE5 		ldr	r2, [sp, #8]
 1321 07e4 012982E3 		orr	r2, r2, #16384
 1322 07e8 08208DE5 		str	r2, [sp, #8]
 1323              	.LVL141:
 1324              	.LBB696:
 1325              	.LBB697:
 1326              		.loc 3 1320 0
 1327 07ec 34209DE5 		ldr	r2, [sp, #52]
 1328              	.LVL142:
 1329              	.LBE697:
 1330              	.LBE696:
 452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     step[1] = esz;
 1331              		.loc 3 452 0
 1332 07f0 003082E5 		str	r3, [r2]
 1333              	.LVL143:
 453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datalimit = datastart + _step * rows;
 1334              		.loc 3 453 0
 1335 07f4 34209DE5 		ldr	r2, [sp, #52]
 1336 07f8 0110A0E3 		mov	r1, #1
 1337 07fc 041082E5 		str	r1, [r2, #4]
 454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     dataend = datalimit - _step + minstep;
 1338              		.loc 3 454 0
 1339 0800 1C209DE5 		ldr	r2, [sp, #28]
 1340 0804 10109DE5 		ldr	r1, [sp, #16]
 1341 0808 912323E0 		mla	r3, r1, r3, r2
 1342              	.LVL144:
 1343 080c 24308DE5 		str	r3, [sp, #36]
 455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 1344              		.loc 3 455 0
 1345 0810 20308DE5 		str	r3, [sp, #32]
 1346              	.LVL145:
 1347              	.LBE693:
 1348              	.LBE686:
 1349              	.LBE685:
 1350              	.LBE684:
 1351              	.LBB709:
 1352              	.LBB710:
 1353              	.LBB711:
 1354              	.LBB712:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 1355              		.loc 3 703 0
 1356 0814 9C309DE5 		ldr	r3, [sp, #156]
 1357 0818 000053E3 		cmp	r3, #0
 1358 081c 0900000A 		beq	.L54
 1359 0820 0C3083E2 		add	r3, r3, #12
 1360 0824 5BF07FF5 		dmb	ish
 1361              	.L91:
 1362 0828 9F2F93E1 		ldrex	r2, [r3]
 1363 082c 011042E2 		sub	r1, r2, #1
 1364 0830 910F83E1 		strex	r0, r1, [r3]
 1365 0834 000050E3 		cmp	r0, #0
 1366 0838 FAFFFF1A 		bne	.L91
 1367 083c 5BF07FF5 		dmb	ish
 1368 0840 010052E3 		cmp	r2, #1
 1369 0844 2000000A 		beq	.L104
 1370              	.L54:
 1371              	.LVL146:
 1372              	.LBB713:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1373              		.loc 3 707 0
 1374 0848 0030A0E3 		mov	r3, #0
 1375              	.LVL147:
 1376              	.L57:
 1377 084c 7C209DE5 		ldr	r2, [sp, #124]
 1378 0850 030052E1 		cmp	r2, r3
 1379 0854 1F0000DA 		ble	.L56
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 1380              		.loc 3 708 0
 1381 0858 A0209DE5 		ldr	r2, [sp, #160]
 1382 085c 0010A0E3 		mov	r1, #0
 1383 0860 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1384              		.loc 3 707 0
 1385 0864 013083E2 		add	r3, r3, #1
 1386              	.LVL148:
 1387 0868 F7FFFFEA 		b	.L57
 1388              	.LVL149:
 1389              	.L103:
 1390              	.LBE713:
 1391              	.LBE712:
 1392              	.LBE711:
 1393              	.LBE710:
 1394              	.LBE709:
 1395              	.LBB718:
 1396              	.LBB708:
 1397              	.LBB707:
 1398              	.LBB706:
 1399              	.LBB698:
 1400              	.LBB699:
 1401              	.LBB700:
 618:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 1402              		.loc 4 618 0
 1403 086c 40318DE5 		str	r3, [sp, #320]
 1404 0870 44318DE5 		str	r3, [sp, #324]
 1405              	.LVL150:
 1406              	.LBB701:
 622:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 1407              		.loc 4 622 0
 1408 0874 1C10A0E3 		mov	r1, #28
 1409 0878 050D8DE2 		add	r0, sp, #320
 1410              	.LVL151:
 1411 087c FEFFFFEB 		bl	_ZN2cv6String8allocateEj
 1412              	.LVL152:
 1413              	.LEHE7:
 1414 0880 1C20A0E3 		mov	r2, #28
 1415 0884 001000E3 		movw	r1, #:lower16:.LC0
 1416 0888 001040E3 		movt	r1, #:upper16:.LC0
 1417 088c FEFFFFEB 		bl	memcpy
 1418              	.LVL153:
 1419              	.LBE701:
 1420              	.LBE700:
 1421              	.LBE699:
 1422              	.LBE698:
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1423              		.loc 3 431 0
 1424 0890 AF3100E3 		movw	r3, #431
 1425 0894 00308DE5 		str	r3, [sp]
 1426 0898 003000E3 		movw	r3, #:lower16:.LC1
 1427 089c 003040E3 		movt	r3, #:upper16:.LC1
 1428 08a0 002000E3 		movw	r2, #:lower16:.LANCHOR1
 1429 08a4 002040E3 		movt	r2, #:upper16:.LANCHOR1
 1430 08a8 051D8DE2 		add	r1, sp, #320
 1431 08ac D600E0E3 		mvn	r0, #214
 1432              	.LEHB8:
 1433 08b0 FEFFFFEB 		bl	_ZN2cv5errorEiRKNS_6StringEPKcS4_i
 1434              	.LVL154:
 1435              	.LEHE8:
 1436              	.LBB702:
 1437              	.LBB703:
 1438              		.loc 4 664 0
 1439 08b4 050D8DE2 		add	r0, sp, #320
 1440              	.LVL155:
 1441 08b8 FEFFFFEB 		bl	_ZN2cv6String10deallocateEv
 1442              	.LVL156:
 1443 08bc C6FFFFEA 		b	.L52
 1444              	.L86:
 1445              	.LVL157:
 1446              	.LBE703:
 1447              	.LBE702:
 1448              	.LBB704:
 1449              	.LBB705:
 1450 08c0 050D8DE2 		add	r0, sp, #320
 1451              	.LVL158:
 1452 08c4 FEFFFFEB 		bl	_ZN2cv6String10deallocateEv
 1453              	.LVL159:
 1454 08c8 4CFEFFEA 		b	.L21
 1455              	.LVL160:
 1456              	.L104:
 1457              	.LBE705:
 1458              	.LBE704:
 1459              	.LBE706:
 1460              	.LBE707:
 1461              	.LBE708:
 1462              	.LBE718:
 1463              	.LBB719:
 1464              	.LBB716:
 1465              	.LBB715:
 1466              	.LBB714:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 1467              		.loc 3 704 0
 1468 08cc 78008DE2 		add	r0, sp, #120
 1469              	.LVL161:
 1470              	.LEHB9:
 1471 08d0 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 1472              	.LVL162:
 1473 08d4 DBFFFFEA 		b	.L54
 1474              	.LVL163:
 1475              	.L56:
 1476              	.LBE714:
 1477              	.LBE715:
1210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = m.datastart; dataend = m.dataend; datalimit = m.datalimit; allocator = m.allocator;
 1478              		.loc 3 1210 0
 1479 08d8 08309DE5 		ldr	r3, [sp, #8]
 1480 08dc 78308DE5 		str	r3, [sp, #120]
 1481 08e0 0C309DE5 		ldr	r3, [sp, #12]
 1482 08e4 7C308DE5 		str	r3, [sp, #124]
 1483 08e8 10309DE5 		ldr	r3, [sp, #16]
 1484 08ec 80308DE5 		str	r3, [sp, #128]
 1485 08f0 14309DE5 		ldr	r3, [sp, #20]
 1486 08f4 84308DE5 		str	r3, [sp, #132]
 1487 08f8 18309DE5 		ldr	r3, [sp, #24]
 1488 08fc 88308DE5 		str	r3, [sp, #136]
1211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = m.u;
 1489              		.loc 3 1211 0
 1490 0900 1C309DE5 		ldr	r3, [sp, #28]
 1491 0904 8C308DE5 		str	r3, [sp, #140]
 1492 0908 20309DE5 		ldr	r3, [sp, #32]
 1493 090c 90308DE5 		str	r3, [sp, #144]
 1494 0910 24309DE5 		ldr	r3, [sp, #36]
 1495 0914 94308DE5 		str	r3, [sp, #148]
 1496 0918 28309DE5 		ldr	r3, [sp, #40]
 1497 091c 98308DE5 		str	r3, [sp, #152]
1212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if (step.p != step.buf) // release self step/size
 1498              		.loc 3 1212 0
 1499 0920 2C309DE5 		ldr	r3, [sp, #44]
 1500 0924 9C308DE5 		str	r3, [sp, #156]
1213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 1501              		.loc 3 1213 0
 1502 0928 A4009DE5 		ldr	r0, [sp, #164]
 1503 092c A8308DE2 		add	r3, sp, #168
 1504 0930 030050E1 		cmp	r0, r3
 1505 0934 0400000A 		beq	.L58
1215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step.p = step.buf;
 1506              		.loc 3 1215 0
 1507 0938 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 1508              	.LVL164:
 1509              	.LEHE9:
1216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = &rows;
 1510              		.loc 3 1216 0
 1511 093c A8308DE2 		add	r3, sp, #168
 1512 0940 A4308DE5 		str	r3, [sp, #164]
1217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 1513              		.loc 3 1217 0
 1514 0944 80308DE2 		add	r3, sp, #128
 1515 0948 A0308DE5 		str	r3, [sp, #160]
 1516              	.L58:
1219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 1517              		.loc 3 1219 0
 1518 094c 0C309DE5 		ldr	r3, [sp, #12]
 1519 0950 020053E3 		cmp	r3, #2
 1520 0954 1C0000CA 		bgt	.L59
 1521              	.LVL165:
1221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[1] = m.step[1];
 1522              		.loc 3 1221 0
 1523 0958 34309DE5 		ldr	r3, [sp, #52]
 1524 095c 002093E5 		ldr	r2, [r3]
 1525 0960 A4309DE5 		ldr	r3, [sp, #164]
 1526 0964 002083E5 		str	r2, [r3]
 1527              	.LVL166:
1222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 1528              		.loc 3 1222 0
 1529 0968 34309DE5 		ldr	r3, [sp, #52]
 1530 096c 042093E5 		ldr	r2, [r3, #4]
 1531 0970 A4309DE5 		ldr	r3, [sp, #164]
 1532 0974 042083E5 		str	r2, [r3, #4]
 1533              	.L60:
1232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.data = NULL; m.datastart = NULL; m.dataend = NULL; m.datalimit = NULL;
 1534              		.loc 3 1232 0
 1535 0978 0030A0E3 		mov	r3, #0
 1536 097c FF3244E3 		movt	r3, 17151
 1537 0980 08308DE5 		str	r3, [sp, #8]
 1538 0984 0030A0E3 		mov	r3, #0
 1539 0988 14308DE5 		str	r3, [sp, #20]
 1540 098c 10308DE5 		str	r3, [sp, #16]
 1541 0990 0C308DE5 		str	r3, [sp, #12]
1234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.u = NULL;
 1542              		.loc 3 1234 0
 1543 0994 28308DE5 		str	r3, [sp, #40]
 1544              	.LVL167:
 1545              	.LBE716:
 1546              	.LBE719:
 1547              	.LBB720:
 1548              	.LBB721:
 1549              	.LBB722:
 1550              	.LBB723:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 1551              		.loc 3 705 0
 1552 0998 2C308DE5 		str	r3, [sp, #44]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 1553              		.loc 3 706 0
 1554 099c 18308DE5 		str	r3, [sp, #24]
 1555 09a0 24308DE5 		str	r3, [sp, #36]
 1556 09a4 20308DE5 		str	r3, [sp, #32]
 1557 09a8 1C308DE5 		str	r3, [sp, #28]
 1558              	.LVL168:
 1559              	.L63:
 1560              	.LBB724:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1561              		.loc 3 707 0
 1562 09ac 0C209DE5 		ldr	r2, [sp, #12]
 1563 09b0 030052E1 		cmp	r2, r3
 1564 09b4 110000DA 		ble	.L62
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 1565              		.loc 3 708 0
 1566 09b8 30209DE5 		ldr	r2, [sp, #48]
 1567 09bc 0010A0E3 		mov	r1, #0
 1568 09c0 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1569              		.loc 3 707 0
 1570 09c4 013083E2 		add	r3, r3, #1
 1571              	.LVL169:
 1572 09c8 F7FFFFEA 		b	.L63
 1573              	.LVL170:
 1574              	.L59:
 1575              	.LBE724:
 1576              	.LBE723:
 1577              	.LBE722:
 1578              	.LBE721:
 1579              	.LBE720:
 1580              	.LBB726:
 1581              	.LBB717:
1227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = m.size.p;
 1582              		.loc 3 1227 0
 1583 09cc 34309DE5 		ldr	r3, [sp, #52]
 1584 09d0 A4308DE5 		str	r3, [sp, #164]
1228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.step.p = m.step.buf;
 1585              		.loc 3 1228 0
 1586 09d4 30309DE5 		ldr	r3, [sp, #48]
 1587 09d8 A0308DE5 		str	r3, [sp, #160]
1229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.size.p = &m.rows;
 1588              		.loc 3 1229 0
 1589 09dc 38308DE2 		add	r3, sp, #56
 1590 09e0 34308DE5 		str	r3, [sp, #52]
1230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 1591              		.loc 3 1230 0
 1592 09e4 10308DE2 		add	r3, sp, #16
 1593 09e8 30308DE5 		str	r3, [sp, #48]
 1594 09ec E1FFFFEA 		b	.L60
 1595              	.L109:
 1596              		.align	3
 1597              	.L108:
 1598 09f0 00000000 		.word	0
 1599 09f4 00E06F40 		.word	1081073664
 1600 09f8 00000000 		.word	0
 1601 09fc 00C06F40 		.word	1081065472
 1602              	.LVL171:
 1603              	.L62:
 1604              	.LBE717:
 1605              	.LBE726:
 1606              	.LBB727:
 1607              	.LBB725:
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 1608              		.loc 3 591 0
 1609 0a00 34009DE5 		ldr	r0, [sp, #52]
 1610 0a04 38308DE2 		add	r3, sp, #56
 1611 0a08 030050E1 		cmp	r0, r3
 1612 0a0c 0000000A 		beq	.L64
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 1613              		.loc 3 592 0
 1614 0a10 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 1615              	.LVL172:
 1616              	.L64:
 1617              	.LBE725:
 1618              	.LBE727:
 438:../src/renesas/application/r_opencv.cpp **** 		{
 1619              		.loc 1 438 0
 1620 0a14 000054E3 		cmp	r4, #0
 1621 0a18 1400001A 		bne	.L65
 1622              	.LVL173:
 1623              	.LBB728:
 1624              	.LBB729:
 1625              	.LBB730:
 1626              	.LBB731:
 1627              	.LBB732:
 1628              		.loc 5 1565 0
 1629 0a1c 0020A0E3 		mov	r2, #0
 1630 0a20 F8208DE5 		str	r2, [sp, #248]
 1631 0a24 FC208DE5 		str	r2, [sp, #252]
 1632              	.LVL174:
 1633              	.LBE732:
 1634              	.LBE731:
 1635              	.LBE730:
 1636              	.LBB733:
 1637              	.LBB734:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1638              		.loc 3 60 0
 1639 0a28 0230A0E1 		mov	r3, r2
 1640 0a2c 013140E3 		movt	r3, 257
 1641 0a30 F0308DE5 		str	r3, [sp, #240]
 1642 0a34 78308DE2 		add	r3, sp, #120
 1643              	.LVL175:
 1644 0a38 F4308DE5 		str	r3, [sp, #244]
 1645              	.LVL176:
 1646              	.LBE734:
 1647              	.LBE733:
 1648              	.LBE729:
 1649              	.LBE728:
 1650              	.LBB735:
 1651              	.LBB736:
 1652              	.LBB737:
 1653              	.LBB738:
 1654              	.LBB739:
 1655              	.LBB740:
 1656              		.loc 5 1565 0
 1657 0a3c 08218DE5 		str	r2, [sp, #264]
 1658 0a40 0C218DE5 		str	r2, [sp, #268]
 1659              	.LVL177:
 1660              	.LBE740:
 1661              	.LBE739:
 1662              	.LBE738:
 1663              	.LBE737:
 1664              	.LBE736:
 1665              	.LBB741:
 1666              	.LBB742:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1667              		.loc 3 60 0
 1668 0a44 0210A0E1 		mov	r1, r2
 1669 0a48 011240E3 		movt	r1, 513
 1670 0a4c 00118DE5 		str	r1, [sp, #256]
 1671 0a50 04318DE5 		str	r3, [sp, #260]
 1672              	.LVL178:
 1673              	.LBE742:
 1674              	.LBE741:
 1675              	.LBE735:
 440:../src/renesas/application/r_opencv.cpp **** 		}
 1676              		.loc 1 440 0
 1677 0a54 1B1B1FED 		vldr.64	d1, .L108
 1678 0a58 905A07EE 		vmov	s15, r5	@ int
 1679 0a5c 670BB8EE 		vcvt.f64.u32	d0, s15
 1680 0a60 011C8DE2 		add	r1, sp, #256
 1681 0a64 F0008DE2 		add	r0, sp, #240
 1682              	.LEHB10:
 1683 0a68 FEFFFFEB 		bl	_ZN2cv9thresholdERKNS_11_InputArrayERKNS_12_OutputArrayEddi
 1684              	.LVL179:
 1685 0a6c 120000EA 		b	.L66
 1686              	.L65:
 1687              	.LVL180:
 1688              	.LBB743:
 1689              	.LBB744:
 1690              	.LBB745:
 1691              	.LBB746:
 1692              	.LBB747:
 1693              		.loc 5 1565 0
 1694 0a70 0030A0E3 		mov	r3, #0
 1695 0a74 18318DE5 		str	r3, [sp, #280]
 1696 0a78 1C318DE5 		str	r3, [sp, #284]
 1697              	.LVL181:
 1698              	.LBE747:
 1699              	.LBE746:
 1700              	.LBE745:
 1701              	.LBB748:
 1702              	.LBB749:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1703              		.loc 3 60 0
 1704 0a7c 0320A0E1 		mov	r2, r3
 1705 0a80 012140E3 		movt	r2, 257
 1706 0a84 10218DE5 		str	r2, [sp, #272]
 1707 0a88 78208DE2 		add	r2, sp, #120
 1708              	.LVL182:
 1709 0a8c 14218DE5 		str	r2, [sp, #276]
 1710              	.LVL183:
 1711              	.LBE749:
 1712              	.LBE748:
 1713              	.LBE744:
 1714              	.LBE743:
 1715              	.LBB750:
 1716              	.LBB751:
 1717              	.LBB752:
 1718              	.LBB753:
 1719              	.LBB754:
 1720              	.LBB755:
 1721              		.loc 5 1565 0
 1722 0a90 28318DE5 		str	r3, [sp, #296]
 1723 0a94 2C318DE5 		str	r3, [sp, #300]
 1724              	.LVL184:
 1725              	.LBE755:
 1726              	.LBE754:
 1727              	.LBE753:
 1728              	.LBE752:
 1729              	.LBE751:
 1730              	.LBB756:
 1731              	.LBB757:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 1732              		.loc 3 60 0
 1733 0a98 013240E3 		movt	r3, 513
 1734 0a9c 20318DE5 		str	r3, [sp, #288]
 1735 0aa0 24218DE5 		str	r2, [sp, #292]
 1736              	.LVL185:
 1737              	.LBE757:
 1738              	.LBE756:
 1739              	.LBE750:
 444:../src/renesas/application/r_opencv.cpp **** 		}
 1740              		.loc 1 444 0
 1741 0aa4 0820A0E3 		mov	r2, #8
 1742 0aa8 301B1FED 		vldr.64	d1, .L108
 1743 0aac 2F0B1FED 		vldr.64	d0, .L108+8
 1744 0ab0 121E8DE2 		add	r1, sp, #288
 1745 0ab4 110E8DE2 		add	r0, sp, #272
 1746 0ab8 FEFFFFEB 		bl	_ZN2cv9thresholdERKNS_11_InputArrayERKNS_12_OutputArrayEddi
 1747              	.LVL186:
 1748              	.L66:
 1749              	.LBB758:
 1750              	.LBB759:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 1751              		.loc 3 703 0
 1752 0abc 9C309DE5 		ldr	r3, [sp, #156]
 1753 0ac0 000053E3 		cmp	r3, #0
 1754 0ac4 0900000A 		beq	.L67
 1755 0ac8 0C3083E2 		add	r3, r3, #12
 1756 0acc 5BF07FF5 		dmb	ish
 1757              	.L90:
 1758 0ad0 9F2F93E1 		ldrex	r2, [r3]
 1759 0ad4 011042E2 		sub	r1, r2, #1
 1760 0ad8 910F83E1 		strex	r0, r1, [r3]
 1761 0adc 000050E3 		cmp	r0, #0
 1762 0ae0 FAFFFF1A 		bne	.L90
 1763 0ae4 5BF07FF5 		dmb	ish
 1764 0ae8 010052E3 		cmp	r2, #1
 1765 0aec 0D00000A 		beq	.L105
 1766              	.L67:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 1767              		.loc 3 705 0
 1768 0af0 0030A0E3 		mov	r3, #0
 1769 0af4 9C308DE5 		str	r3, [sp, #156]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 1770              		.loc 3 706 0
 1771 0af8 88308DE5 		str	r3, [sp, #136]
 1772 0afc 94308DE5 		str	r3, [sp, #148]
 1773 0b00 90308DE5 		str	r3, [sp, #144]
 1774 0b04 8C308DE5 		str	r3, [sp, #140]
 1775              	.LVL187:
 1776              	.L68:
 1777              	.LBB760:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1778              		.loc 3 707 0
 1779 0b08 7C209DE5 		ldr	r2, [sp, #124]
 1780 0b0c 030052E1 		cmp	r2, r3
 1781 0b10 070000DA 		ble	.L50
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 1782              		.loc 3 708 0
 1783 0b14 A0209DE5 		ldr	r2, [sp, #160]
 1784 0b18 0010A0E3 		mov	r1, #0
 1785 0b1c 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1786              		.loc 3 707 0
 1787 0b20 013083E2 		add	r3, r3, #1
 1788              	.LVL188:
 1789 0b24 F7FFFFEA 		b	.L68
 1790              	.LVL189:
 1791              	.L105:
 1792              	.LBE760:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 1793              		.loc 3 704 0
 1794 0b28 78008DE2 		add	r0, sp, #120
 1795              	.LVL190:
 1796 0b2c FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 1797              	.LVL191:
 1798              	.LEHE10:
 1799 0b30 EEFFFFEA 		b	.L67
 1800              	.LVL192:
 1801              	.L50:
 1802              	.LBE759:
 1803              	.LBE758:
 1804              	.LBB761:
 1805              	.LBB762:
 1806              	.LBB763:
 1807              	.LBB764:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 1808              		.loc 3 703 0
 1809 0b34 64309DE5 		ldr	r3, [sp, #100]
 1810 0b38 000053E3 		cmp	r3, #0
 1811 0b3c 0900000A 		beq	.L69
 1812 0b40 0C3083E2 		add	r3, r3, #12
 1813 0b44 5BF07FF5 		dmb	ish
 1814              	.L89:
 1815 0b48 9F2F93E1 		ldrex	r2, [r3]
 1816 0b4c 011042E2 		sub	r1, r2, #1
 1817 0b50 910F83E1 		strex	r0, r1, [r3]
 1818 0b54 000050E3 		cmp	r0, #0
 1819 0b58 FAFFFF1A 		bne	.L89
 1820 0b5c 5BF07FF5 		dmb	ish
 1821 0b60 010052E3 		cmp	r2, #1
 1822 0b64 0D00000A 		beq	.L106
 1823              	.L69:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 1824              		.loc 3 705 0
 1825 0b68 0030A0E3 		mov	r3, #0
 1826 0b6c 64308DE5 		str	r3, [sp, #100]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 1827              		.loc 3 706 0
 1828 0b70 50308DE5 		str	r3, [sp, #80]
 1829 0b74 5C308DE5 		str	r3, [sp, #92]
 1830 0b78 58308DE5 		str	r3, [sp, #88]
 1831 0b7c 54308DE5 		str	r3, [sp, #84]
 1832              	.LVL193:
 1833              	.L71:
 1834              	.LBB765:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1835              		.loc 3 707 0
 1836 0b80 44209DE5 		ldr	r2, [sp, #68]
 1837 0b84 030052E1 		cmp	r2, r3
 1838 0b88 070000DA 		ble	.L70
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 1839              		.loc 3 708 0
 1840 0b8c 68209DE5 		ldr	r2, [sp, #104]
 1841 0b90 0010A0E3 		mov	r1, #0
 1842 0b94 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1843              		.loc 3 707 0
 1844 0b98 013083E2 		add	r3, r3, #1
 1845              	.LVL194:
 1846 0b9c F7FFFFEA 		b	.L71
 1847              	.LVL195:
 1848              	.L106:
 1849              	.LBE765:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 1850              		.loc 3 704 0
 1851 0ba0 40008DE2 		add	r0, sp, #64
 1852              	.LVL196:
 1853 0ba4 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 1854              	.LVL197:
 1855 0ba8 EEFFFFEA 		b	.L69
 1856              	.LVL198:
 1857              	.L70:
 1858              	.LBE764:
 1859              	.LBE763:
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 1860              		.loc 3 591 0
 1861 0bac 6C009DE5 		ldr	r0, [sp, #108]
 1862 0bb0 70308DE2 		add	r3, sp, #112
 1863 0bb4 030050E1 		cmp	r0, r3
 1864 0bb8 0000000A 		beq	.L72
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 1865              		.loc 3 592 0
 1866 0bbc FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 1867              	.LVL199:
 1868              	.L72:
 1869              	.LBE762:
 1870              	.LBE761:
 1871              	.LBB766:
 1872              	.LBB767:
 1873              	.LBB768:
 1874              	.LBB769:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 1875              		.loc 3 703 0
 1876 0bc0 9C309DE5 		ldr	r3, [sp, #156]
 1877 0bc4 000053E3 		cmp	r3, #0
 1878 0bc8 0900000A 		beq	.L73
 1879 0bcc 0C3083E2 		add	r3, r3, #12
 1880 0bd0 5BF07FF5 		dmb	ish
 1881              	.L88:
 1882 0bd4 9F2F93E1 		ldrex	r2, [r3]
 1883 0bd8 011042E2 		sub	r1, r2, #1
 1884 0bdc 910F83E1 		strex	r0, r1, [r3]
 1885 0be0 000050E3 		cmp	r0, #0
 1886 0be4 FAFFFF1A 		bne	.L88
 1887 0be8 5BF07FF5 		dmb	ish
 1888 0bec 010052E3 		cmp	r2, #1
 1889 0bf0 0D00000A 		beq	.L107
 1890              	.L73:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 1891              		.loc 3 705 0
 1892 0bf4 0030A0E3 		mov	r3, #0
 1893 0bf8 9C308DE5 		str	r3, [sp, #156]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 1894              		.loc 3 706 0
 1895 0bfc 88308DE5 		str	r3, [sp, #136]
 1896 0c00 94308DE5 		str	r3, [sp, #148]
 1897 0c04 90308DE5 		str	r3, [sp, #144]
 1898 0c08 8C308DE5 		str	r3, [sp, #140]
 1899              	.LVL200:
 1900              	.L75:
 1901              	.LBB770:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1902              		.loc 3 707 0
 1903 0c0c 7C209DE5 		ldr	r2, [sp, #124]
 1904 0c10 030052E1 		cmp	r2, r3
 1905 0c14 070000DA 		ble	.L74
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 1906              		.loc 3 708 0
 1907 0c18 A0209DE5 		ldr	r2, [sp, #160]
 1908 0c1c 0010A0E3 		mov	r1, #0
 1909 0c20 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 1910              		.loc 3 707 0
 1911 0c24 013083E2 		add	r3, r3, #1
 1912              	.LVL201:
 1913 0c28 F7FFFFEA 		b	.L75
 1914              	.LVL202:
 1915              	.L107:
 1916              	.LBE770:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 1917              		.loc 3 704 0
 1918 0c2c 78008DE2 		add	r0, sp, #120
 1919              	.LVL203:
 1920 0c30 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 1921              	.LVL204:
 1922 0c34 EEFFFFEA 		b	.L73
 1923              	.LVL205:
 1924              	.L74:
 1925              	.LBE769:
 1926              	.LBE768:
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 1927              		.loc 3 591 0
 1928 0c38 A4009DE5 		ldr	r0, [sp, #164]
 1929 0c3c A8308DE2 		add	r3, sp, #168
 1930 0c40 030050E1 		cmp	r0, r3
 1931 0c44 0000000A 		beq	.L87
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 1932              		.loc 3 592 0
 1933 0c48 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 1934              	.LVL206:
 1935              	.L87:
 1936              	.LBE767:
 1937              	.LBE766:
 450:../src/renesas/application/r_opencv.cpp **** 
 1938              		.loc 1 450 0
 1939 0c4c 0000A0E3 		mov	r0, #0
 1940 0c50 52DF8DE2 		add	sp, sp, #328
 1941              		.cfi_remember_state
 1942              		.cfi_def_cfa_offset 24
 1943              		@ sp needed
 1944 0c54 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1945              	.LVL207:
 1946              	.L81:
 1947              		.cfi_restore_state
 420:../src/renesas/application/r_opencv.cpp **** 		mat_dst = Mat(in_h,in_w,CV_8UC1,dst);
 1948              		.loc 1 420 0
 1949 0c58 08008DE2 		add	r0, sp, #8
 1950              	.LVL208:
 1951 0c5c FEFFFFEB 		bl	_ZN2cv3MatD1Ev
 1952              	.LVL209:
 1953 0c60 66FDFFEA 		b	.L21
 1954              	.LVL210:
 1955              	.L82:
 421:../src/renesas/application/r_opencv.cpp **** 
 1956              		.loc 1 421 0
 1957 0c64 08008DE2 		add	r0, sp, #8
 1958              	.LVL211:
 1959 0c68 FEFFFFEB 		bl	_ZN2cv3MatD1Ev
 1960              	.LVL212:
 1961 0c6c 63FDFFEA 		b	.L21
 1962              	.LVL213:
 1963              	.L83:
 437:../src/renesas/application/r_opencv.cpp **** 		if (mode == 0)
 1964              		.loc 1 437 0
 1965 0c70 08008DE2 		add	r0, sp, #8
 1966              	.LVL214:
 1967 0c74 FEFFFFEB 		bl	_ZN2cv3MatD1Ev
 1968              	.LVL215:
 1969 0c78 60FDFFEA 		b	.L21
 1970              	.LVL216:
 1971              	.L80:
 1972 0c7c 5FFDFFEA 		b	.L21
 1973              		.cfi_endproc
 1974              	.LFE8637:
 1975              		.personality	__gxx_personality_v0
 1976              		.handlerdata
 1977              	.LLSDA8637:
 1978 0008 FF       		.byte	0xff
 1979 0009 FF       		.byte	0xff
 1980 000a 01       		.byte	0x1
 1981 000b 43       		.uleb128 .LLSDACSE8637-.LLSDACSB8637
 1982              	.LLSDACSB8637:
 1983 000c B403     		.uleb128 .LEHB0-.LFB8637
 1984 000e 04       		.uleb128 .LEHE0-.LEHB0
 1985 000f FC18     		.uleb128 .L80-.LFB8637
 1986 0011 00       		.uleb128 0
 1987 0012 E803     		.uleb128 .LEHB1-.LFB8637
 1988 0014 04       		.uleb128 .LEHE1-.LEHB1
 1989 0015 F803     		.uleb128 .L84-.LFB8637
 1990 0017 00       		.uleb128 0
 1991 0018 9004     		.uleb128 .LEHB2-.LFB8637
 1992 001a 04       		.uleb128 .LEHE2-.LEHB2
 1993 001b 00       		.uleb128 0
 1994 001c 00       		.uleb128 0
 1995 001d 9804     		.uleb128 .LEHB3-.LFB8637
 1996 001f 6C       		.uleb128 .LEHE3-.LEHB3
 1997 0020 D818     		.uleb128 .L81-.LFB8637
 1998 0022 00       		.uleb128 0
 1999 0023 D008     		.uleb128 .LEHB4-.LFB8637
 2000 0025 04       		.uleb128 .LEHE4-.LEHB4
 2001 0026 FC18     		.uleb128 .L80-.LFB8637
 2002 0028 00       		.uleb128 0
 2003 0029 8409     		.uleb128 .LEHB5-.LFB8637
 2004 002b 04       		.uleb128 .LEHE5-.LEHB5
 2005 002c 9409     		.uleb128 .L85-.LFB8637
 2006 002e 00       		.uleb128 0
 2007 002f A409     		.uleb128 .LEHB6-.LFB8637
 2008 0031 6C       		.uleb128 .LEHE6-.LEHB6
 2009 0032 E418     		.uleb128 .L82-.LFB8637
 2010 0034 00       		.uleb128 0
 2011 0035 B00C     		.uleb128 .LEHB7-.LFB8637
 2012 0037 D004     		.uleb128 .LEHE7-.LEHB7
 2013 0039 FC18     		.uleb128 .L80-.LFB8637
 2014 003b 00       		.uleb128 0
 2015 003c B011     		.uleb128 .LEHB8-.LFB8637
 2016 003e 04       		.uleb128 .LEHE8-.LEHB8
 2017 003f C011     		.uleb128 .L86-.LFB8637
 2018 0041 00       		.uleb128 0
 2019 0042 D011     		.uleb128 .LEHB9-.LFB8637
 2020 0044 6C       		.uleb128 .LEHE9-.LEHB9
 2021 0045 F018     		.uleb128 .L83-.LFB8637
 2022 0047 00       		.uleb128 0
 2023 0048 E814     		.uleb128 .LEHB10-.LFB8637
 2024 004a C801     		.uleb128 .LEHE10-.LEHB10
 2025 004c FC18     		.uleb128 .L80-.LFB8637
 2026 004e 00       		.uleb128 0
 2027              	.LLSDACSE8637:
 2028              		.section	.text.cv_threshold
 2029              		.fnend
 2031              		.section	.text.cv_bitwise_not,"ax",%progbits
 2032              		.align	2
 2033              		.global	cv_bitwise_not
 2034              		.syntax unified
 2035              		.arm
 2036              		.fpu neon
 2038              	cv_bitwise_not:
 2039              		.fnstart
 2040              	.LFB8638:
 453:../src/renesas/application/r_opencv.cpp **** 	Mat mat_src;
 2041              		.loc 1 453 0
 2042              		.cfi_startproc
 2043              		.cfi_personality 0,__gxx_personality_v0
 2044              		.cfi_lsda 0,.LLSDA8638
 2045              		@ args = 0, pretend = 0, frame = 152
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
 2047              	.LVL217:
 2048 0000 04E02DE5 		str	lr, [sp, #-4]!
 2049              		.save {lr}
 2050              		.cfi_def_cfa_offset 4
 2051              		.cfi_offset 14, -4
 2052              		.pad #164
 2053 0004 A4D04DE2 		sub	sp, sp, #164
 2054              		.cfi_def_cfa_offset 168
 2055              	.LVL218:
 2056              	.LBB861:
 2057              	.LBB862:
 335:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {}
 2058              		.loc 3 335 0
 2059 0008 00C0A0E3 		mov	ip, #0
 2060 000c FFC244E3 		movt	ip, 17151
 2061 0010 40C08DE5 		str	ip, [sp, #64]
 2062 0014 0030A0E3 		mov	r3, #0
 2063 0018 44308DE5 		str	r3, [sp, #68]
 2064 001c 48308DE5 		str	r3, [sp, #72]
 2065 0020 4C308DE5 		str	r3, [sp, #76]
 2066 0024 50308DE5 		str	r3, [sp, #80]
 2067 0028 54308DE5 		str	r3, [sp, #84]
 2068 002c 58308DE5 		str	r3, [sp, #88]
 2069 0030 5C308DE5 		str	r3, [sp, #92]
 2070 0034 60308DE5 		str	r3, [sp, #96]
 2071 0038 64308DE5 		str	r3, [sp, #100]
 2072              	.LVL219:
 2073              	.LBB863:
 2074              	.LBB864:
 2075              	.LBB865:
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 2076              		.loc 3 1246 0
 2077 003c 48E08DE2 		add	lr, sp, #72
 2078              	.LVL220:
 2079 0040 68E08DE5 		str	lr, [sp, #104]
 2080              	.LVL221:
 2081              	.LBE865:
 2082              	.LBE864:
 2083              	.LBE863:
 2084              	.LBB866:
 2085              	.LBB867:
 2086              	.LBB868:
1302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 2087              		.loc 3 1302 0
 2088 0044 70E08DE2 		add	lr, sp, #112
 2089 0048 6CE08DE5 		str	lr, [sp, #108]
 2090 004c 74308DE5 		str	r3, [sp, #116]
 2091 0050 70308DE5 		str	r3, [sp, #112]
 2092              	.LVL222:
 2093              	.LBE868:
 2094              	.LBE867:
 2095              	.LBE866:
 2096              	.LBE862:
 2097              	.LBE861:
 2098              	.LBB869:
 2099              	.LBB870:
 2100              	.LBB871:
 429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** {
 2101              		.loc 3 429 0
 2102 0054 08C08DE5 		str	ip, [sp, #8]
 2103 0058 02C0A0E3 		mov	ip, #2
 2104 005c 0CC08DE5 		str	ip, [sp, #12]
 2105 0060 10208DE5 		str	r2, [sp, #16]
 2106 0064 14108DE5 		str	r1, [sp, #20]
 2107 0068 18008DE5 		str	r0, [sp, #24]
 2108 006c 1C008DE5 		str	r0, [sp, #28]
 2109 0070 20308DE5 		str	r3, [sp, #32]
 2110 0074 24308DE5 		str	r3, [sp, #36]
 2111 0078 28308DE5 		str	r3, [sp, #40]
 2112 007c 2C308DE5 		str	r3, [sp, #44]
 2113              	.LVL223:
 2114              	.LBB872:
 2115              	.LBB873:
 2116              	.LBB874:
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 2117              		.loc 3 1246 0
 2118 0080 10C08DE2 		add	ip, sp, #16
 2119              	.LVL224:
 2120 0084 30C08DE5 		str	ip, [sp, #48]
 2121              	.LVL225:
 2122              	.LBE874:
 2123              	.LBE873:
 2124              	.LBE872:
 2125              	.LBB875:
 2126              	.LBB876:
 2127              	.LBB877:
1302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 2128              		.loc 3 1302 0
 2129 0088 38C08DE2 		add	ip, sp, #56
 2130 008c 34C08DE5 		str	ip, [sp, #52]
 2131 0090 3C308DE5 		str	r3, [sp, #60]
 2132 0094 38308DE5 		str	r3, [sp, #56]
 2133              	.LVL226:
 2134              	.LBE877:
 2135              	.LBE876:
 2136              	.LBE875:
 2137              	.LBB878:
 2138              	.LBB879:
 2139              	.LBB880:
 803:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     size_t p = 1;
 2140              		.loc 3 803 0
 2141 0098 920102E0 		mul	r2, r2, r1
 2142              	.LVL227:
 2143              	.LBE880:
 2144              	.LBE879:
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 2145              		.loc 3 431 0
 2146 009c 030052E1 		cmp	r2, r3
 2147 00a0 0100000A 		beq	.L111
 2148 00a4 030050E1 		cmp	r0, r3
 2149 00a8 2300000A 		beq	.L141
 2150              	.LVL228:
 2151              	.L111:
 434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if( _step == AUTO_STEP )
 2152              		.loc 3 434 0
 2153 00ac 14309DE5 		ldr	r3, [sp, #20]
 2154              	.LVL229:
 438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 2155              		.loc 3 438 0
 2156 00b0 08209DE5 		ldr	r2, [sp, #8]
 2157 00b4 012982E3 		orr	r2, r2, #16384
 2158 00b8 08208DE5 		str	r2, [sp, #8]
 2159              	.LVL230:
 2160              	.LBB881:
 2161              	.LBB882:
 2162              		.loc 3 1320 0
 2163 00bc 34209DE5 		ldr	r2, [sp, #52]
 2164              	.LVL231:
 2165              	.LBE882:
 2166              	.LBE881:
 452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     step[1] = esz;
 2167              		.loc 3 452 0
 2168 00c0 003082E5 		str	r3, [r2]
 2169              	.LVL232:
 453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datalimit = datastart + _step * rows;
 2170              		.loc 3 453 0
 2171 00c4 34209DE5 		ldr	r2, [sp, #52]
 2172 00c8 0110A0E3 		mov	r1, #1
 2173 00cc 041082E5 		str	r1, [r2, #4]
 454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     dataend = datalimit - _step + minstep;
 2174              		.loc 3 454 0
 2175 00d0 1C209DE5 		ldr	r2, [sp, #28]
 2176 00d4 10109DE5 		ldr	r1, [sp, #16]
 2177 00d8 912323E0 		mla	r3, r1, r3, r2
 2178              	.LVL233:
 2179 00dc 24308DE5 		str	r3, [sp, #36]
 455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 2180              		.loc 3 455 0
 2181 00e0 20308DE5 		str	r3, [sp, #32]
 2182              	.LVL234:
 2183              	.LBE878:
 2184              	.LBE871:
 2185              	.LBE870:
 2186              	.LBE869:
 2187              	.LBB894:
 2188              	.LBB895:
 2189              	.LBB896:
 2190              	.LBB897:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 2191              		.loc 3 703 0
 2192 00e4 64309DE5 		ldr	r3, [sp, #100]
 2193 00e8 000053E3 		cmp	r3, #0
 2194 00ec 0900000A 		beq	.L113
 2195 00f0 0C3083E2 		add	r3, r3, #12
 2196 00f4 5BF07FF5 		dmb	ish
 2197              	.L139:
 2198 00f8 9F2F93E1 		ldrex	r2, [r3]
 2199 00fc 011042E2 		sub	r1, r2, #1
 2200 0100 910F83E1 		strex	r0, r1, [r3]
 2201 0104 000050E3 		cmp	r0, #0
 2202 0108 FAFFFF1A 		bne	.L139
 2203 010c 5BF07FF5 		dmb	ish
 2204 0110 010052E3 		cmp	r2, #1
 2205 0114 2200000A 		beq	.L142
 2206              	.L113:
 2207              	.LVL235:
 2208              	.LBB898:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 2209              		.loc 3 707 0
 2210 0118 0030A0E3 		mov	r3, #0
 2211              	.LVL236:
 2212              	.L117:
 2213 011c 44209DE5 		ldr	r2, [sp, #68]
 2214 0120 030052E1 		cmp	r2, r3
 2215 0124 210000DA 		ble	.L116
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 2216              		.loc 3 708 0
 2217 0128 68209DE5 		ldr	r2, [sp, #104]
 2218 012c 0010A0E3 		mov	r1, #0
 2219 0130 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 2220              		.loc 3 707 0
 2221 0134 013083E2 		add	r3, r3, #1
 2222              	.LVL237:
 2223 0138 F7FFFFEA 		b	.L117
 2224              	.LVL238:
 2225              	.L141:
 2226              	.LBE898:
 2227              	.LBE897:
 2228              	.LBE896:
 2229              	.LBE895:
 2230              	.LBE894:
 2231              	.LBB903:
 2232              	.LBB893:
 2233              	.LBB892:
 2234              	.LBB891:
 2235              	.LBB883:
 2236              	.LBB884:
 2237              	.LBB885:
 618:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** {
 2238              		.loc 4 618 0
 2239 013c 98308DE5 		str	r3, [sp, #152]
 2240 0140 9C308DE5 		str	r3, [sp, #156]
 2241              	.LVL239:
 2242              	.LBB886:
 622:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\cvstd.hpp **** }
 2243              		.loc 4 622 0
 2244 0144 1C10A0E3 		mov	r1, #28
 2245              	.LVL240:
 2246 0148 98008DE2 		add	r0, sp, #152
 2247              	.LVL241:
 2248              	.LEHB11:
 2249 014c FEFFFFEB 		bl	_ZN2cv6String8allocateEj
 2250              	.LVL242:
 2251              	.LEHE11:
 2252 0150 1C20A0E3 		mov	r2, #28
 2253 0154 001000E3 		movw	r1, #:lower16:.LC0
 2254 0158 001040E3 		movt	r1, #:upper16:.LC0
 2255 015c FEFFFFEB 		bl	memcpy
 2256              	.LVL243:
 2257              	.LBE886:
 2258              	.LBE885:
 2259              	.LBE884:
 2260              	.LBE883:
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 2261              		.loc 3 431 0
 2262 0160 AF3100E3 		movw	r3, #431
 2263 0164 00308DE5 		str	r3, [sp]
 2264 0168 003000E3 		movw	r3, #:lower16:.LC1
 2265 016c 003040E3 		movt	r3, #:upper16:.LC1
 2266 0170 002000E3 		movw	r2, #:lower16:.LANCHOR1
 2267 0174 002040E3 		movt	r2, #:upper16:.LANCHOR1
 2268 0178 98108DE2 		add	r1, sp, #152
 2269 017c D600E0E3 		mvn	r0, #214
 2270              	.LEHB12:
 2271 0180 FEFFFFEB 		bl	_ZN2cv5errorEiRKNS_6StringEPKcS4_i
 2272              	.LVL244:
 2273              	.LEHE12:
 2274              	.LBB887:
 2275              	.LBB888:
 2276              		.loc 4 664 0
 2277 0184 98008DE2 		add	r0, sp, #152
 2278              	.LVL245:
 2279 0188 FEFFFFEB 		bl	_ZN2cv6String10deallocateEv
 2280              	.LVL246:
 2281 018c C6FFFFEA 		b	.L111
 2282              	.L135:
 2283              	.LVL247:
 2284              	.LBE888:
 2285              	.LBE887:
 2286              	.LBB889:
 2287              	.LBB890:
 2288 0190 98008DE2 		add	r0, sp, #152
 2289              	.LVL248:
 2290 0194 FEFFFFEB 		bl	_ZN2cv6String10deallocateEv
 2291              	.LVL249:
 2292              	.L115:
 2293              	.LBE890:
 2294              	.LBE889:
 2295              	.LBE891:
 2296              	.LBE892:
 2297              	.LBE893:
 2298              	.LBE903:
 454:../src/renesas/application/r_opencv.cpp **** 
 2299              		.loc 1 454 0
 2300 0198 40008DE2 		add	r0, sp, #64
 2301 019c FEFFFFEB 		bl	_ZN2cv3MatD1Ev
 2302              	.LVL250:
 2303              	.LEHB13:
 2304 01a0 FEFFFFEB 		bl	__cxa_end_cleanup
 2305              	.LVL251:
 2306              	.LEHE13:
 2307              	.L142:
 2308              	.LBB904:
 2309              	.LBB901:
 2310              	.LBB900:
 2311              	.LBB899:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 2312              		.loc 3 704 0
 2313 01a4 40008DE2 		add	r0, sp, #64
 2314              	.LVL252:
 2315              	.LEHB14:
 2316 01a8 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 2317              	.LVL253:
 2318 01ac D9FFFFEA 		b	.L113
 2319              	.LVL254:
 2320              	.L116:
 2321              	.LBE899:
 2322              	.LBE900:
1210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = m.datastart; dataend = m.dataend; datalimit = m.datalimit; allocator = m.allocator;
 2323              		.loc 3 1210 0
 2324 01b0 08309DE5 		ldr	r3, [sp, #8]
 2325 01b4 40308DE5 		str	r3, [sp, #64]
 2326 01b8 0C309DE5 		ldr	r3, [sp, #12]
 2327 01bc 44308DE5 		str	r3, [sp, #68]
 2328 01c0 10309DE5 		ldr	r3, [sp, #16]
 2329 01c4 48308DE5 		str	r3, [sp, #72]
 2330 01c8 14309DE5 		ldr	r3, [sp, #20]
 2331 01cc 4C308DE5 		str	r3, [sp, #76]
 2332 01d0 18309DE5 		ldr	r3, [sp, #24]
 2333 01d4 50308DE5 		str	r3, [sp, #80]
1211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = m.u;
 2334              		.loc 3 1211 0
 2335 01d8 1C309DE5 		ldr	r3, [sp, #28]
 2336 01dc 54308DE5 		str	r3, [sp, #84]
 2337 01e0 20309DE5 		ldr	r3, [sp, #32]
 2338 01e4 58308DE5 		str	r3, [sp, #88]
 2339 01e8 24309DE5 		ldr	r3, [sp, #36]
 2340 01ec 5C308DE5 		str	r3, [sp, #92]
 2341 01f0 28309DE5 		ldr	r3, [sp, #40]
 2342 01f4 60308DE5 		str	r3, [sp, #96]
1212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     if (step.p != step.buf) // release self step/size
 2343              		.loc 3 1212 0
 2344 01f8 2C309DE5 		ldr	r3, [sp, #44]
 2345 01fc 64308DE5 		str	r3, [sp, #100]
1213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 2346              		.loc 3 1213 0
 2347 0200 6C009DE5 		ldr	r0, [sp, #108]
 2348 0204 70308DE2 		add	r3, sp, #112
 2349 0208 030050E1 		cmp	r0, r3
 2350 020c 0400000A 		beq	.L118
1215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step.p = step.buf;
 2351              		.loc 3 1215 0
 2352 0210 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 2353              	.LVL255:
 2354              	.LEHE14:
1216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = &rows;
 2355              		.loc 3 1216 0
 2356 0214 70308DE2 		add	r3, sp, #112
 2357 0218 6C308DE5 		str	r3, [sp, #108]
1217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 2358              		.loc 3 1217 0
 2359 021c 48308DE2 		add	r3, sp, #72
 2360 0220 68308DE5 		str	r3, [sp, #104]
 2361              	.L118:
1219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     {
 2362              		.loc 3 1219 0
 2363 0224 0C309DE5 		ldr	r3, [sp, #12]
 2364 0228 020053E3 		cmp	r3, #2
 2365 022c 1C0000CA 		bgt	.L119
 2366              	.LVL256:
1221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         step[1] = m.step[1];
 2367              		.loc 3 1221 0
 2368 0230 34309DE5 		ldr	r3, [sp, #52]
 2369 0234 002093E5 		ldr	r2, [r3]
 2370 0238 6C309DE5 		ldr	r3, [sp, #108]
 2371 023c 002083E5 		str	r2, [r3]
 2372              	.LVL257:
1222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 2373              		.loc 3 1222 0
 2374 0240 34309DE5 		ldr	r3, [sp, #52]
 2375 0244 042093E5 		ldr	r2, [r3, #4]
 2376 0248 6C309DE5 		ldr	r3, [sp, #108]
 2377 024c 042083E5 		str	r2, [r3, #4]
 2378              	.L120:
1232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.data = NULL; m.datastart = NULL; m.dataend = NULL; m.datalimit = NULL;
 2379              		.loc 3 1232 0
 2380 0250 0030A0E3 		mov	r3, #0
 2381 0254 FF3244E3 		movt	r3, 17151
 2382 0258 08308DE5 		str	r3, [sp, #8]
 2383 025c 0030A0E3 		mov	r3, #0
 2384 0260 14308DE5 		str	r3, [sp, #20]
 2385 0264 10308DE5 		str	r3, [sp, #16]
 2386 0268 0C308DE5 		str	r3, [sp, #12]
1234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     m.u = NULL;
 2387              		.loc 3 1234 0
 2388 026c 28308DE5 		str	r3, [sp, #40]
 2389              	.LVL258:
 2390              	.LBE901:
 2391              	.LBE904:
 2392              	.LBB905:
 2393              	.LBB906:
 2394              	.LBB907:
 2395              	.LBB908:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 2396              		.loc 3 705 0
 2397 0270 2C308DE5 		str	r3, [sp, #44]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 2398              		.loc 3 706 0
 2399 0274 18308DE5 		str	r3, [sp, #24]
 2400 0278 24308DE5 		str	r3, [sp, #36]
 2401 027c 20308DE5 		str	r3, [sp, #32]
 2402 0280 1C308DE5 		str	r3, [sp, #28]
 2403              	.LVL259:
 2404              	.L123:
 2405              	.LBB909:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 2406              		.loc 3 707 0
 2407 0284 0C209DE5 		ldr	r2, [sp, #12]
 2408 0288 030052E1 		cmp	r2, r3
 2409 028c 0D0000DA 		ble	.L122
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 2410              		.loc 3 708 0
 2411 0290 30209DE5 		ldr	r2, [sp, #48]
 2412 0294 0010A0E3 		mov	r1, #0
 2413 0298 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 2414              		.loc 3 707 0
 2415 029c 013083E2 		add	r3, r3, #1
 2416              	.LVL260:
 2417 02a0 F7FFFFEA 		b	.L123
 2418              	.LVL261:
 2419              	.L119:
 2420              	.LBE909:
 2421              	.LBE908:
 2422              	.LBE907:
 2423              	.LBE906:
 2424              	.LBE905:
 2425              	.LBB911:
 2426              	.LBB902:
1227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p = m.size.p;
 2427              		.loc 3 1227 0
 2428 02a4 34309DE5 		ldr	r3, [sp, #52]
 2429 02a8 6C308DE5 		str	r3, [sp, #108]
1228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.step.p = m.step.buf;
 2430              		.loc 3 1228 0
 2431 02ac 30309DE5 		ldr	r3, [sp, #48]
 2432 02b0 68308DE5 		str	r3, [sp, #104]
1229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         m.size.p = &m.rows;
 2433              		.loc 3 1229 0
 2434 02b4 38308DE2 		add	r3, sp, #56
 2435 02b8 34308DE5 		str	r3, [sp, #52]
1230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     }
 2436              		.loc 3 1230 0
 2437 02bc 10308DE2 		add	r3, sp, #16
 2438 02c0 30308DE5 		str	r3, [sp, #48]
 2439 02c4 E1FFFFEA 		b	.L120
 2440              	.LVL262:
 2441              	.L122:
 2442              	.LBE902:
 2443              	.LBE911:
 2444              	.LBB912:
 2445              	.LBB910:
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 2446              		.loc 3 591 0
 2447 02c8 34009DE5 		ldr	r0, [sp, #52]
 2448 02cc 38308DE2 		add	r3, sp, #56
 2449 02d0 030050E1 		cmp	r0, r3
 2450 02d4 0000000A 		beq	.L124
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 2451              		.loc 3 592 0
 2452 02d8 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 2453              	.LVL263:
 2454              	.L124:
 2455              	.LBE910:
 2456              	.LBE912:
 2457              	.LBB913:
 2458              	.LBB914:
 2459              	.LBB915:
 2460              	.LBB916:
 2461              	.LBB917:
 2462              		.loc 5 1565 0
 2463 02dc 0030A0E3 		mov	r3, #0
 2464 02e0 80308DE5 		str	r3, [sp, #128]
 2465 02e4 84308DE5 		str	r3, [sp, #132]
 2466              	.LVL264:
 2467              	.LBE917:
 2468              	.LBE916:
 2469              	.LBE915:
 2470              	.LBB918:
 2471              	.LBB919:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 2472              		.loc 3 60 0
 2473 02e8 0320A0E1 		mov	r2, r3
 2474 02ec 012140E3 		movt	r2, 257
 2475 02f0 78208DE5 		str	r2, [sp, #120]
 2476 02f4 40208DE2 		add	r2, sp, #64
 2477              	.LVL265:
 2478 02f8 7C208DE5 		str	r2, [sp, #124]
 2479              	.LVL266:
 2480              	.LBE919:
 2481              	.LBE918:
 2482              	.LBE914:
 2483              	.LBE913:
 2484              	.LBB920:
 2485              	.LBB921:
 2486              	.LBB922:
 2487              	.LBB923:
 2488              	.LBB924:
 2489              	.LBB925:
 2490              		.loc 5 1565 0
 2491 02fc 90308DE5 		str	r3, [sp, #144]
 2492 0300 94308DE5 		str	r3, [sp, #148]
 2493              	.LVL267:
 2494              	.LBE925:
 2495              	.LBE924:
 2496              	.LBE923:
 2497              	.LBE922:
 2498              	.LBE921:
 2499              	.LBB926:
 2500              	.LBB927:
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** 
 2501              		.loc 3 60 0
 2502 0304 013240E3 		movt	r3, 513
 2503 0308 88308DE5 		str	r3, [sp, #136]
 2504 030c 8C208DE5 		str	r2, [sp, #140]
 2505              	.LVL268:
 2506              	.LEHB15:
 2507              	.LBE927:
 2508              	.LBE926:
 2509              	.LBE920:
 2510              		.file 6 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0.
   1:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /*M///////////////////////////////////////////////////////////////////////////////////////
   2:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
   3:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
   4:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
   5:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //  By downloading, copying, installing or using the software you agree to this license.
   6:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //  If you do not agree to this license, do not download, install,
   7:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //  copy or use the software.
   8:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
   9:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
  10:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //                           License Agreement
  11:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //                For Open Source Computer Vision Library
  12:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
  13:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // Copyright (C) 2000-2015, Intel Corporation, all rights reserved.
  14:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // Copyright (C) 2009-2011, Willow Garage Inc., all rights reserved.
  15:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // Copyright (C) 2015, OpenCV Foundation, all rights reserved.
  16:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // Copyright (C) 2015, Itseez Inc., all rights reserved.
  17:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // Third party copyrights are property of their respective owners.
  18:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
  19:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // Redistribution and use in source and binary forms, with or without modification,
  20:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // are permitted provided that the following conditions are met:
  21:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
  22:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //   * Redistribution's of source code must retain the above copyright notice,
  23:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //     this list of conditions and the following disclaimer.
  24:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
  25:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //   * Redistribution's in binary form must reproduce the above copyright notice,
  26:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //     this list of conditions and the following disclaimer in the documentation
  27:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //     and/or other materials provided with the distribution.
  28:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
  29:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //   * The name of the copyright holders may not be used to endorse or promote products
  30:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //     derived from this software without specific prior written permission.
  31:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
  32:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // This software is provided by the copyright holders and contributors "as is" and
  33:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // any express or implied warranties, including, but not limited to, the implied
  34:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // warranties of merchantability and fitness for a particular purpose are disclaimed.
  35:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // In no event shall the Intel Corporation or contributors be liable for any direct,
  36:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // indirect, incidental, special, exemplary, or consequential damages
  37:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // (including, but not limited to, procurement of substitute goods or services;
  38:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // loss of use, data, or profits; or business interruption) however caused
  39:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // and on any theory of liability, whether in contract, strict liability,
  40:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // or tort (including negligence or otherwise) arising in any way out of
  41:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** // the use of this software, even if advised of the possibility of such damage.
  42:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //
  43:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //M*/
  44:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
  45:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #ifndef OPENCV_CORE_HPP
  46:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #define OPENCV_CORE_HPP
  47:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
  48:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #ifndef __cplusplus
  49:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #  error core.hpp header must be compiled as C++
  50:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #endif
  51:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
  52:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/cvdef.h"
  53:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/version.hpp"
  54:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/base.hpp"
  55:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/cvstd.hpp"
  56:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/traits.hpp"
  57:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/matx.hpp"
  58:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/types.hpp"
  59:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/mat.hpp"
  60:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** #include "opencv2/core/persistence.hpp"
  61:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
  62:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /**
  63:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @defgroup core Core functionality
  64:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @{
  65:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_basic Basic structures
  66:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_c C structures and operations
  67:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @{
  68:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         @defgroup core_c_glue Connections with C++
  69:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @}
  70:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_array Operations on arrays
  71:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_xml XML/YAML Persistence
  72:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_cluster Clustering
  73:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_utils Utility and system functions and macros
  74:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @{
  75:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         @defgroup core_utils_sse SSE utilities
  76:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         @defgroup core_utils_neon NEON utilities
  77:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @}
  78:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_opengl OpenGL interoperability
  79:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_ipp Intel IPP Asynchronous C/C++ Converters
  80:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_optim Optimization Algorithms
  81:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_directx DirectX interoperability
  82:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_eigen Eigen support
  83:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_opencl OpenCL support
  84:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_va_intel Intel VA-API/OpenCL (CL-VA) interoperability
  85:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @defgroup core_hal Hardware Acceleration Layer
  86:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @{
  87:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         @defgroup core_hal_functions Functions
  88:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         @defgroup core_hal_interface Interface
  89:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         @defgroup core_hal_intrin Universal intrinsics
  90:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         @{
  91:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****             @defgroup core_hal_intrin_impl Private implementation helpers
  92:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         @}
  93:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     @}
  94:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @}
  95:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  */
  96:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
  97:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** namespace cv {
  98:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
  99:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! @addtogroup core_utils
 100:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! @{
 101:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 102:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /*! @brief Class passed to an error.
 103:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 104:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** This class encapsulates all or almost all necessary
 105:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** information about the error happened in the program. The exception is
 106:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** usually constructed and thrown implicitly via CV_Error and CV_Error_ macros.
 107:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @see error
 108:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  */
 109:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** class CV_EXPORTS Exception : public std::exception
 110:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** {
 111:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** public:
 112:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /*!
 113:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****      Default constructor
 114:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****      */
 115:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Exception();
 116:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /*!
 117:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****      Full constructor. Normally the constuctor is not called explicitly.
 118:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****      Instead, the macros CV_Error(), CV_Error_() and CV_Assert() are used.
 119:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     */
 120:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Exception(int _code, const String& _err, const String& _func, const String& _file, int _line);
 121:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     virtual ~Exception() throw();
 122:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 123:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /*!
 124:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****      \return the error description and the context as a text string.
 125:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     */
 126:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     virtual const char *what() const throw();
 127:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     void formatMessage();
 128:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 129:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     String msg; ///< the formatted error message
 130:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 131:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     int code; ///< error code @see CVStatus
 132:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     String err; ///< error description
 133:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     String func; ///< function name. Available only when the compiler supports getting it
 134:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     String file; ///< source file name where the error has occured
 135:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     int line; ///< line number in the source file where the error has occured
 136:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** };
 137:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 138:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /*! @brief Signals an error and raises the exception.
 139:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 140:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** By default the function prints information about the error to stderr,
 141:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** then it either stops if cv::setBreakOnError() had been called before or raises the exception.
 142:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** It is possible to alternate error processing by using cv::redirectError().
 143:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param exc the exception raisen.
 144:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @deprecated drop this version
 145:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  */
 146:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void error( const Exception& exc );
 147:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 148:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** enum SortFlags { SORT_EVERY_ROW    = 0, //!< each matrix row is sorted independently
 149:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                  SORT_EVERY_COLUMN = 1, //!< each matrix column is sorted
 150:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                         //!< independently; this flag and the previous one are
 151:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                         //!< mutually exclusive.
 152:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                  SORT_ASCENDING    = 0, //!< each matrix row is sorted in the ascending
 153:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                         //!< order.
 154:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                  SORT_DESCENDING   = 16 //!< each matrix row is sorted in the
 155:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                         //!< descending order; this flag and the previous one are a
 156:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                         //!< mutually exclusive.
 157:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                };
 158:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 159:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! @} core_utils
 160:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 161:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! @addtogroup core
 162:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! @{
 163:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 164:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! Covariation flags
 165:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** enum CovarFlags {
 166:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /** The output covariance matrix is calculated as:
 167:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****        \f[\texttt{scale}   \cdot  [  \texttt{vects}  [0]-  \texttt{mean}  , \texttt{vects}  [1]-  \
 168:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****        The covariance matrix will be nsamples x nsamples. Such an unusual covariance matrix is used
 169:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****        for fast PCA of a set of very large vectors (see, for example, the EigenFaces technique for
 170:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****        face recognition). Eigenvalues of this "scrambled" matrix match the eigenvalues of the true
 171:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****        covariance matrix. The "true" eigenvectors can be easily calculated from the eigenvectors of
 172:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****        the "scrambled" covariance matrix. */
 173:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     COVAR_SCRAMBLED = 0,
 174:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /**The output covariance matrix is calculated as:
 175:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         \f[\texttt{scale}   \cdot  [  \texttt{vects}  [0]-  \texttt{mean}  , \texttt{vects}  [1]-  
 176:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         covar will be a square matrix of the same size as the total number of elements in each inpu
 177:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         vector. One and only one of COVAR_SCRAMBLED and COVAR_NORMAL must be specified.*/
 178:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     COVAR_NORMAL    = 1,
 179:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /** If the flag is specified, the function does not calculate mean from
 180:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         the input vectors but, instead, uses the passed mean vector. This is useful if mean has bee
 181:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         pre-calculated or known in advance, or if the covariance matrix is calculated by parts. In
 182:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         this case, mean is not a mean vector of the input sub-set of vectors but rather the mean
 183:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         vector of the whole set.*/
 184:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     COVAR_USE_AVG   = 2,
 185:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /** If the flag is specified, the covariance matrix is scaled. In the
 186:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         "normal" mode, scale is 1./nsamples . In the "scrambled" mode, scale is the reciprocal of t
 187:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         total number of elements in each input vector. By default (if the flag is not specified), t
 188:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         covariance matrix is not scaled ( scale=1 ).*/
 189:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     COVAR_SCALE     = 4,
 190:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /** If the flag is
 191:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         specified, all the input vectors are stored as rows of the samples matrix. mean should be a
 192:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         single-row vector in this case.*/
 193:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     COVAR_ROWS      = 8,
 194:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /** If the flag is
 195:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         specified, all the input vectors are stored as columns of the samples matrix. mean should b
 196:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         single-column vector in this case.*/
 197:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     COVAR_COLS      = 16
 198:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** };
 199:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 200:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! k-Means flags
 201:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** enum KmeansFlags {
 202:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /** Select random initial centers in each attempt.*/
 203:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     KMEANS_RANDOM_CENTERS     = 0,
 204:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /** Use kmeans++ center initialization by Arthur and Vassilvitskii [Arthur2007].*/
 205:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     KMEANS_PP_CENTERS         = 2,
 206:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     /** During the first (and possibly the only) attempt, use the
 207:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         user-supplied labels instead of computing them from the initial centers. For the second and
 208:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         further attempts, use the random or semi-random centers. Use one of KMEANS_\*_CENTERS flag
 209:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****         to specify the exact method.*/
 210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     KMEANS_USE_INITIAL_LABELS = 1
 211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** };
 212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! type of line
 214:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** enum LineTypes {
 215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FILLED  = -1,
 216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     LINE_4  = 4, //!< 4-connected line
 217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     LINE_8  = 8, //!< 8-connected line
 218:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     LINE_AA = 16 //!< antialiased line
 219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** };
 220:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! Only a subset of Hershey fonts
 222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! <http://sources.isc.org/utils/misc/hershey-font.txt> are supported
 223:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** enum HersheyFonts {
 224:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_HERSHEY_SIMPLEX        = 0, //!< normal size sans-serif font
 225:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_HERSHEY_PLAIN          = 1, //!< small size sans-serif font
 226:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_HERSHEY_DUPLEX         = 2, //!< normal size sans-serif font (more complex than FONT_HERSH
 227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_HERSHEY_COMPLEX        = 3, //!< normal size serif font
 228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_HERSHEY_TRIPLEX        = 4, //!< normal size serif font (more complex than FONT_HERSHEY_CO
 229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_HERSHEY_COMPLEX_SMALL  = 5, //!< smaller version of FONT_HERSHEY_COMPLEX
 230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_HERSHEY_SCRIPT_SIMPLEX = 6, //!< hand-writing style font
 231:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_HERSHEY_SCRIPT_COMPLEX = 7, //!< more complex variant of FONT_HERSHEY_SCRIPT_SIMPLEX
 232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     FONT_ITALIC                 = 16 //!< flag for italic font
 233:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** };
 234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 235:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** enum ReduceTypes { REDUCE_SUM = 0, //!< the output is the sum of all rows/columns of the matrix.
 236:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                    REDUCE_AVG = 1, //!< the output is the mean vector of all rows/columns of the ma
 237:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                    REDUCE_MAX = 2, //!< the output is the maximum (column/row-wise) of all rows/col
 238:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                    REDUCE_MIN = 3  //!< the output is the minimum (column/row-wise) of all rows/col
 239:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                  };
 240:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 241:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 242:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Swaps two matrices
 243:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 244:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void swap(Mat& a, Mat& b);
 245:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload */
 246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void swap( UMat& a, UMat& b );
 247:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 248:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! @} core
 249:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 250:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! @addtogroup core_array
 251:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** //! @{
 252:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 253:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Computes the source location of an extrapolated pixel.
 254:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 255:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function computes and returns the coordinate of a donor pixel corresponding to the specified
 256:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** extrapolated pixel when using the specified extrapolation border mode. For example, if you use
 257:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** cv::BORDER_WRAP mode in the horizontal direction, cv::BORDER_REFLECT_101 in the vertical direction 
 258:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** want to compute value of the "virtual" pixel Point(-5, 100) in a floating-point image img , it
 259:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** looks like:
 260:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 261:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     float val = img.at<float>(borderInterpolate(100, img.rows, cv::BORDER_REFLECT_101),
 262:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                               borderInterpolate(-5, img.cols, cv::BORDER_WRAP));
 263:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 264:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Normally, the function is not called directly. It is used inside filtering functions and also in
 265:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** copyMakeBorder.
 266:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param p 0-based coordinate of the extrapolated pixel along one of the axes, likely \<0 or \>= len
 267:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param len Length of the array along the corresponding axis.
 268:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param borderType Border type, one of the cv::BorderTypes, except for cv::BORDER_TRANSPARENT and
 269:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** cv::BORDER_ISOLATED . When borderType==cv::BORDER_CONSTANT , the function always returns -1, regard
 270:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** of p and len.
 271:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 272:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa copyMakeBorder
 273:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 274:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W int borderInterpolate(int p, int len, int borderType);
 275:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 276:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Forms a border around an image.
 277:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 278:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function copies the source image into the middle of the destination image. The areas to the
 279:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** left, to the right, above and below the copied source image will be filled with extrapolated
 280:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** pixels. This is not what filtering functions based on it do (they extrapolate pixels on-fly), but
 281:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** what other more complex functions, including your own, may do to simplify image boundary handling.
 282:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 283:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function supports the mode when src is already in the middle of dst . In this case, the
 284:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** function does not copy src itself but simply constructs the border, for example:
 285:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 286:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 287:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // let border be the same in all directions
 288:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     int border=2;
 289:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // constructs a larger image to fit both the image and the border
 290:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat gray_buf(rgb.rows + border*2, rgb.cols + border*2, rgb.depth());
 291:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // select the middle part of it w/o copying data
 292:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat gray(gray_canvas, Rect(border, border, rgb.cols, rgb.rows));
 293:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // convert image from RGB to grayscale
 294:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cvtColor(rgb, gray, COLOR_RGB2GRAY);
 295:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // form a border in-place
 296:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     copyMakeBorder(gray, gray_buf, border, border,
 297:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                    border, border, BORDER_REPLICATE);
 298:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // now do some custom filtering ...
 299:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     ...
 300:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 301:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note When the source image is a part (ROI) of a bigger image, the function will try to use the
 302:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** pixels outside of the ROI to form a border. To disable this feature and always do extrapolation, as
 303:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** if src was not a ROI, use borderType | BORDER_ISOLATED.
 304:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 305:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src Source image.
 306:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst Destination image of the same type as src and the size Size(src.cols+left+right,
 307:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** src.rows+top+bottom) .
 308:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param top
 309:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param bottom
 310:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param left
 311:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param right Parameter specifying how many pixels in each direction from the source image rectangle
 312:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** to extrapolate. For example, top=1, bottom=1, left=1, right=1 mean that 1 pixel-wide border needs
 313:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** to be built.
 314:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param borderType Border type. See borderInterpolate for details.
 315:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param value Border value if borderType==BORDER_CONSTANT .
 316:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 317:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  borderInterpolate
 318:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 319:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void copyMakeBorder(InputArray src, OutputArray dst,
 320:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                  int top, int bottom, int left, int right,
 321:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                  int borderType, const Scalar& value = Scalar() );
 322:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 323:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates the per-element sum of two arrays or an array and a scalar.
 324:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 325:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function add calculates:
 326:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** - Sum of two arrays when both input arrays have the same size and the same number of channels:
 327:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst}(I) =  \texttt{saturate} ( \texttt{src1}(I) +  \texttt{src2}(I)) \quad \texttt{if ma
 328:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** - Sum of an array and a scalar when src2 is constructed from Scalar or has the same number of
 329:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** elements as `src1.channels()`:
 330:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst}(I) =  \texttt{saturate} ( \texttt{src1}(I) +  \texttt{src2} ) \quad \texttt{if mask
 331:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** - Sum of a scalar and an array when src1 is constructed from Scalar or has the same number of
 332:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** elements as `src2.channels()`:
 333:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst}(I) =  \texttt{saturate} ( \texttt{src1} +  \texttt{src2}(I) ) \quad \texttt{if mask
 334:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** where `I` is a multi-dimensional index of array elements. In case of multi-channel arrays, each
 335:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** channel is processed independently.
 336:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 337:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The first function in the list above can be replaced with matrix expressions:
 338:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 339:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     dst = src1 + src2;
 340:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     dst += src1; // equivalent to add(dst, src1, dst);
 341:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 342:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The input arrays and the output array can all have the same or different depths. For example, you
 343:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** can add a 16-bit unsigned array to a 8-bit signed array and store the sum as a 32-bit
 344:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** floating-point array. Depth of the output array is determined by the dtype parameter. In the second
 345:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** and third cases above, as well as in the first case, when src1.depth() == src2.depth(), dtype can
 346:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** be set to the default -1. In this case, the output array will have the same depth as the input
 347:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** array, be it src1, src2 or both.
 348:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note Saturation is not applied when the output array has the depth CV_32S. You may even get
 349:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** result of an incorrect sign in the case of overflow.
 350:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array or a scalar.
 351:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array or a scalar.
 352:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array that has the same size and number of channels as the input array(s); the
 353:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** depth is defined by dtype or src1/src2.
 354:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask - 8-bit single channel array, that specifies elements of the
 355:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** output array to be changed.
 356:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dtype optional depth of the output array (see the discussion below).
 357:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa subtract, addWeighted, scaleAdd, Mat::convertTo
 358:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 359:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void add(InputArray src1, InputArray src2, OutputArray dst,
 360:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                       InputArray mask = noArray(), int dtype = -1);
 361:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 362:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates the per-element difference between two arrays or array and a scalar.
 363:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 364:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function subtract calculates:
 365:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** - Difference between two arrays, when both input arrays have the same size and the same number of
 366:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** channels:
 367:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst}(I) =  \texttt{saturate} ( \texttt{src1}(I) -  \texttt{src2}(I)) \quad \texttt{i
 368:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** - Difference between an array and a scalar, when src2 is constructed from Scalar or has the same
 369:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** number of elements as `src1.channels()`:
 370:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst}(I) =  \texttt{saturate} ( \texttt{src1}(I) -  \texttt{src2} ) \quad \texttt{if 
 371:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** - Difference between a scalar and an array, when src1 is constructed from Scalar or has the same
 372:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** number of elements as `src2.channels()`:
 373:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst}(I) =  \texttt{saturate} ( \texttt{src1} -  \texttt{src2}(I) ) \quad \texttt{if 
 374:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** - The reverse difference between a scalar and an array in the case of `SubRS`:
 375:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst}(I) =  \texttt{saturate} ( \texttt{src2} -  \texttt{src1}(I) ) \quad \texttt{if 
 376:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** where I is a multi-dimensional index of array elements. In case of multi-channel arrays, each
 377:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** channel is processed independently.
 378:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 379:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The first function in the list above can be replaced with matrix expressions:
 380:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 381:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     dst = src1 - src2;
 382:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     dst -= src1; // equivalent to subtract(dst, src1, dst);
 383:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 384:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The input arrays and the output array can all have the same or different depths. For example, you
 385:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** can subtract to 8-bit unsigned arrays and store the difference in a 16-bit signed array. Depth of
 386:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** the output array is determined by dtype parameter. In the second and third cases above, as well as
 387:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** in the first case, when src1.depth() == src2.depth(), dtype can be set to the default -1. In this
 388:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** case the output array will have the same depth as the input array, be it src1, src2 or both.
 389:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note Saturation is not applied when the output array has the depth CV_32S. You may even get
 390:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** result of an incorrect sign in the case of overflow.
 391:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array or a scalar.
 392:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array or a scalar.
 393:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size and the same number of channels as the input array.
 394:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask; this is an 8-bit single channel array that specifies elements
 395:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** of the output array to be changed.
 396:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dtype optional depth of the output array
 397:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  add, addWeighted, scaleAdd, Mat::convertTo
 398:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****   */
 399:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void subtract(InputArray src1, InputArray src2, OutputArray dst,
 400:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                            InputArray mask = noArray(), int dtype = -1);
 401:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 402:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 403:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates the per-element scaled product of two arrays.
 404:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 405:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function multiply calculates the per-element product of two arrays:
 406:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 407:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst} (I)= \texttt{saturate} ( \texttt{scale} \cdot \texttt{src1} (I)  \cdot \texttt{src2
 408:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 409:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** There is also a @ref MatrixExpressions -friendly variant of the first function. See Mat::mul .
 410:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 411:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** For a not-per-element matrix product, see gemm .
 412:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 413:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note Saturation is not applied when the output array has the depth
 414:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_32S. You may even get result of an incorrect sign in the case of
 415:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** overflow.
 416:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array.
 417:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array of the same size and the same type as src1.
 418:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size and type as src1.
 419:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param scale optional scale factor.
 420:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dtype optional depth of the output array
 421:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa add, subtract, divide, scaleAdd, addWeighted, accumulate, accumulateProduct, accumulateSquare,
 422:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Mat::convertTo
 423:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 424:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void multiply(InputArray src1, InputArray src2,
 425:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                            OutputArray dst, double scale = 1, int dtype = -1);
 426:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 427:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Performs per-element division of two arrays or a scalar by an array.
 428:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 429:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::divide divides one array by another:
 430:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst(I) = saturate(src1(I)*scale/src2(I))}\f]
 431:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** or a scalar by an array when there is no src1 :
 432:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst(I) = saturate(scale/src2(I))}\f]
 433:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 434:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** When src2(I) is zero, dst(I) will also be zero. Different channels of
 435:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** multi-channel arrays are processed independently.
 436:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 437:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note Saturation is not applied when the output array has the depth CV_32S. You may even get
 438:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** result of an incorrect sign in the case of overflow.
 439:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array.
 440:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array of the same size and type as src1.
 441:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param scale scalar factor.
 442:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size and type as src2.
 443:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dtype optional depth of the output array; if -1, dst will have depth src2.depth(), but in
 444:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** case of an array-by-array division, you can only pass -1 when src1.depth()==src2.depth().
 445:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  multiply, add, subtract
 446:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 447:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void divide(InputArray src1, InputArray src2, OutputArray dst,
 448:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                          double scale = 1, int dtype = -1);
 449:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 450:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload */
 451:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void divide(double scale, InputArray src2,
 452:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                          OutputArray dst, int dtype = -1);
 453:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 454:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates the sum of a scaled array and another array.
 455:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 456:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function scaleAdd is one of the classical primitive linear algebra operations, known as DAXPY
 457:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** or SAXPY in [BLAS](http://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms). It calculates
 458:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** the sum of a scaled array and another array:
 459:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst} (I)= \texttt{scale} \cdot \texttt{src1} (I) +  \texttt{src2} (I)\f]
 460:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function can also be emulated with a matrix expression, for example:
 461:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 462:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat A(3, 3, CV_64F);
 463:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     ...
 464:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     A.row(0) = A.row(1)*2 + A.row(2);
 465:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 466:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array.
 467:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param alpha scale factor for the first array.
 468:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array of the same size and type as src1.
 469:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size and type as src1.
 470:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa add, addWeighted, subtract, Mat::dot, Mat::convertTo
 471:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 472:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void scaleAdd(InputArray src1, double alpha, InputArray src2, OutputArray dst);
 473:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 474:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates the weighted sum of two arrays.
 475:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 476:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function addWeighted calculates the weighted sum of two arrays as follows:
 477:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst} (I)= \texttt{saturate} ( \texttt{src1} (I)* \texttt{alpha} +  \texttt{src2} (I)* \t
 478:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** where I is a multi-dimensional index of array elements. In case of multi-channel arrays, each
 479:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** channel is processed independently.
 480:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function can be replaced with a matrix expression:
 481:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 482:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     dst = src1*alpha + src2*beta + gamma;
 483:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 484:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note Saturation is not applied when the output array has the depth CV_32S. You may even get
 485:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** result of an incorrect sign in the case of overflow.
 486:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array.
 487:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param alpha weight of the first array elements.
 488:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array of the same size and channel number as src1.
 489:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param beta weight of the second array elements.
 490:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param gamma scalar added to each sum.
 491:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array that has the same size and number of channels as the input arrays.
 492:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dtype optional depth of the output array; when both input arrays have the same depth, dtype
 493:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** can be set to -1, which will be equivalent to src1.depth().
 494:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  add, subtract, scaleAdd, Mat::convertTo
 495:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 496:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void addWeighted(InputArray src1, double alpha, InputArray src2,
 497:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                               double beta, double gamma, OutputArray dst, int dtype = -1);
 498:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 499:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Scales, calculates absolute values, and converts the result to 8-bit.
 500:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 501:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** On each element of the input array, the function convertScaleAbs
 502:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** performs three operations sequentially: scaling, taking an absolute
 503:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** value, conversion to an unsigned 8-bit type:
 504:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst} (I)= \texttt{saturate\_cast<uchar>} (| \texttt{src} (I)* \texttt{alpha} +  \texttt{
 505:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of multi-channel arrays, the function processes each channel
 506:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** independently. When the output is not 8-bit, the operation can be
 507:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** emulated by calling the Mat::convertTo method (or by using matrix
 508:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** expressions) and then by calculating an absolute value of the result.
 509:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** For example:
 510:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 511:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat_<float> A(30,30);
 512:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     randu(A, Scalar(-100), Scalar(100));
 513:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat_<float> B = A*5 + 3;
 514:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     B = abs(B);
 515:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // Mat_<float> B = abs(A*5+3) will also do the job,
 516:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // but it will allocate a temporary matrix
 517:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 518:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array.
 519:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array.
 520:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param alpha optional scale factor.
 521:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param beta optional delta added to the scaled values.
 522:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  Mat::convertTo, cv::abs(const Mat&)
 523:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 524:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void convertScaleAbs(InputArray src, OutputArray dst,
 525:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                   double alpha = 1, double beta = 0);
 526:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 527:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Converts an array to half precision floating number.
 528:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 529:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** This function converts FP32 (single precision floating point) from/to FP16 (half precision floating
 530:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_16S to represent the bit depth.  If the input array is neither of them, the function will raise 
 531:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The format of half precision floating point is defined in IEEE 754-2008.
 532:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 533:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array.
 534:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array.
 535:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 536:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void convertFp16(InputArray src, OutputArray dst);
 537:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 538:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Performs a look-up table transform of an array.
 539:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 540:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function LUT fills the output array with values from the look-up table. Indices of the entries
 541:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** are taken from the input array. That is, the function processes each element of src as follows:
 542:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst} (I)  \leftarrow \texttt{lut(src(I) + d)}\f]
 543:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** where
 544:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[d =  \fork{0}{if \(\texttt{src}\) has depth \(\texttt{CV_8U}\)}{128}{if \(\texttt{src}\) has dep
 545:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array of 8-bit elements.
 546:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param lut look-up table of 256 elements; in case of multi-channel input array, the table should
 547:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** either have a single channel (in this case the same table is used for all channels) or the same
 548:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** number of channels as in the input array.
 549:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size and number of channels as src, and the same depth as lut.
 550:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  convertScaleAbs, Mat::convertTo
 551:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 552:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void LUT(InputArray src, InputArray lut, OutputArray dst);
 553:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 554:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates the sum of array elements.
 555:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 556:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::sum calculates and returns the sum of array elements,
 557:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** independently for each channel.
 558:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array that must have from 1 to 4 channels.
 559:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  countNonZero, mean, meanStdDev, norm, minMaxLoc, reduce
 560:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 561:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_AS(sumElems) Scalar sum(InputArray src);
 562:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 563:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Counts non-zero array elements.
 564:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 565:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function returns the number of non-zero elements in src :
 566:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\sum _{I: \; \texttt{src} (I) \ne0 } 1\f]
 567:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src single-channel array.
 568:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  mean, meanStdDev, norm, minMaxLoc, calcCovarMatrix
 569:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 570:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W int countNonZero( InputArray src );
 571:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 572:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Returns the list of locations of non-zero pixels
 573:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 574:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Given a binary matrix (likely returned from an operation such
 575:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** as threshold(), compare(), >, ==, etc, return all of
 576:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** the non-zero indices as a cv::Mat or std::vector<cv::Point> (x,y)
 577:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** For example:
 578:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 579:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat binaryImage; // input, binary image
 580:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat locations;   // output, locations of non-zero pixels
 581:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::findNonZero(binaryImage, locations);
 582:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 583:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // access pixel coordinates
 584:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Point pnt = locations.at<Point>(i);
 585:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 586:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** or
 587:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 588:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat binaryImage; // input, binary image
 589:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     vector<Point> locations;   // output, locations of non-zero pixels
 590:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::findNonZero(binaryImage, locations);
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // access pixel coordinates
 593:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Point pnt = locations[i];
 594:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 595:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src single-channel array (type CV_8UC1)
 596:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param idx the output array, type of cv::Mat or std::vector<Point>, corresponding to non-zero indic
 597:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 598:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void findNonZero( InputArray src, OutputArray idx );
 599:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 600:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates an average (mean) of array elements.
 601:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 602:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::mean calculates the mean value M of array elements,
 603:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** independently for each channel, and return it:
 604:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\begin{array}{l} N =  \sum _{I: \; \texttt{mask} (I) \ne 0} 1 \\ M_c =  \left ( \sum _{I: \; \te
 605:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** When all the mask elements are 0's, the function returns Scalar::all(0)
 606:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array that should have from 1 to 4 channels so that the result can be stored in
 607:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Scalar_ .
 608:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask.
 609:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  countNonZero, meanStdDev, norm, minMaxLoc
 610:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 611:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W Scalar mean(InputArray src, InputArray mask = noArray());
 612:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 613:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** Calculates a mean and standard deviation of array elements.
 614:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 615:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::meanStdDev calculates the mean and the standard deviation M
 616:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** of array elements independently for each channel and returns it via the
 617:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** output parameters:
 618:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\begin{array}{l} N =  \sum _{I, \texttt{mask} (I)  \ne 0} 1 \\ \texttt{mean} _c =  \frac{\sum_{ 
 619:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** When all the mask elements are 0's, the function returns
 620:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** mean=stddev=Scalar::all(0).
 621:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note The calculated standard deviation is only the diagonal of the
 622:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** complete normalized covariance matrix. If the full matrix is needed, you
 623:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** can reshape the multi-channel array M x N to the single-channel array
 624:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** M\*N x mtx.channels() (only possible when the matrix is continuous) and
 625:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** then pass the matrix to calcCovarMatrix .
 626:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array that should have from 1 to 4 channels so that the results can be stored in
 627:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Scalar_ 's.
 628:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mean output parameter: calculated mean value.
 629:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param stddev output parameter: calculateded standard deviation.
 630:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask.
 631:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  countNonZero, mean, norm, minMaxLoc, calcCovarMatrix
 632:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 633:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void meanStdDev(InputArray src, OutputArray mean, OutputArray stddev,
 634:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                              InputArray mask=noArray());
 635:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 636:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates an absolute array norm, an absolute difference norm, or a
 637:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** relative difference norm.
 638:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 639:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::norm calculates an absolute norm of src1 (when there is no
 640:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** src2 ):
 641:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 642:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[norm =  \forkthree{\|\texttt{src1}\|_{L_{\infty}} =  \max _I | \texttt{src1} (I)|}{if  \(\texttt
 643:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** { \| \texttt{src1} \| _{L_1} =  \sum _I | \texttt{src1} (I)|}{if  \(\texttt{normType} = \texttt{NOR
 644:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** { \| \texttt{src1} \| _{L_2} =  \sqrt{\sum_I \texttt{src1}(I)^2} }{if  \(\texttt{normType} = \textt
 645:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 646:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** or an absolute or relative difference norm if src2 is there:
 647:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 648:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[norm =  \forkthree{\|\texttt{src1}-\texttt{src2}\|_{L_{\infty}} =  \max _I | \texttt{src1} (I) -
 649:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** { \| \texttt{src1} - \texttt{src2} \| _{L_1} =  \sum _I | \texttt{src1} (I) -  \texttt{src2} (I)|}{
 650:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** { \| \texttt{src1} - \texttt{src2} \| _{L_2} =  \sqrt{\sum_I (\texttt{src1}(I) - \texttt{src2}(I))^
 651:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 652:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** or
 653:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 654:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[norm =  \forkthree{\frac{\|\texttt{src1}-\texttt{src2}\|_{L_{\infty}}    }{\|\texttt{src2}\|_{L_
 655:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** { \frac{\|\texttt{src1}-\texttt{src2}\|_{L_1} }{\|\texttt{src2}\|_{L_1}} }{if  \(\texttt{normType} 
 656:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** { \frac{\|\texttt{src1}-\texttt{src2}\|_{L_2} }{\|\texttt{src2}\|_{L_2}} }{if  \(\texttt{normType} 
 657:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 658:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::norm returns the calculated norm.
 659:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 660:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** When the mask parameter is specified and it is not empty, the norm is
 661:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** calculated only over the region specified by the mask.
 662:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 663:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** A multi-channel input arrays are treated as a single-channel, that is,
 664:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** the results for all channels are combined.
 665:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 666:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array.
 667:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param normType type of the norm (see cv::NormTypes).
 668:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask; it must have the same size as src1 and CV_8UC1 type.
 669:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 670:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W double norm(InputArray src1, int normType = NORM_L2, InputArray mask = noArray());
 671:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 672:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
 673:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array.
 674:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array of the same size and the same type as src1.
 675:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param normType type of the norm (cv::NormTypes).
 676:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask; it must have the same size as src1 and CV_8UC1 type.
 677:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 678:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W double norm(InputArray src1, InputArray src2,
 679:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                          int normType = NORM_L2, InputArray mask = noArray());
 680:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
 681:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src first input array.
 682:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param normType type of the norm (see cv::NormTypes).
 683:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 684:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS double norm( const SparseMat& src, int normType );
 685:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 686:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief computes PSNR image/video quality metric
 687:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 688:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** see http://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio for details
 689:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @todo document
 690:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****   */
 691:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W double PSNR(InputArray src1, InputArray src2);
 692:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 693:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief naive nearest neighbor finder
 694:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 695:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** see http://en.wikipedia.org/wiki/Nearest_neighbor_search
 696:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @todo document
 697:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****   */
 698:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void batchDistance(InputArray src1, InputArray src2,
 699:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                 OutputArray dist, int dtype, OutputArray nidx,
 700:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                 int normType = NORM_L2, int K = 0,
 701:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                 InputArray mask = noArray(), int update = 0,
 702:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                 bool crosscheck = false);
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Normalizes the norm or value range of an array.
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::normalize normalizes scale and shift the input array elements so that
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\| \texttt{dst} \| _{L_p}= \texttt{alpha}\f]
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** (where p=Inf, 1 or 2) when normType=NORM_INF, NORM_L1, or NORM_L2, respectively; or so that
 709:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\min _I  \texttt{dst} (I)= \texttt{alpha} , \, \, \max _I  \texttt{dst} (I)= \texttt{beta}\f]
 710:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 711:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** when normType=NORM_MINMAX (for dense arrays only). The optional mask specifies a sub-array to be
 712:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** normalized. This means that the norm or min-n-max are calculated over the sub-array, and then this
 713:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** sub-array is modified to be normalized. If you want to only use the mask to calculate the norm or
 714:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** min-max but modify the whole array, you can use norm and Mat::convertTo.
 715:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 716:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of sparse matrices, only the non-zero values are analyzed and transformed. Because of this,
 717:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** the range transformation for sparse matrices is not allowed since it can shift the zero level.
 718:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 719:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Possible usage with some positive example data:
 720:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 721:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     vector<double> positiveData = { 2.0, 8.0, 10.0 };
 722:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     vector<double> normalizedData_l1, normalizedData_l2, normalizedData_inf, normalizedData_minmax;
 723:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 724:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // Norm to probability (total count)
 725:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // sum(numbers) = 20.0
 726:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 2.0      0.1     (2.0/20.0)
 727:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 8.0      0.4     (8.0/20.0)
 728:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 10.0     0.5     (10.0/20.0)
 729:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     normalize(positiveData, normalizedData_l1, 1.0, 0.0, NORM_L1);
 730:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 731:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // Norm to unit vector: ||positiveData|| = 1.0
 732:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 2.0      0.15
 733:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 8.0      0.62
 734:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 10.0     0.77
 735:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     normalize(positiveData, normalizedData_l2, 1.0, 0.0, NORM_L2);
 736:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 737:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // Norm to max element
 738:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 2.0      0.2     (2.0/10.0)
 739:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 8.0      0.8     (8.0/10.0)
 740:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 10.0     1.0     (10.0/10.0)
 741:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     normalize(positiveData, normalizedData_inf, 1.0, 0.0, NORM_INF);
 742:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 743:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // Norm to range [0.0;1.0]
 744:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 2.0      0.0     (shift to left border)
 745:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 8.0      0.75    (6.0/8.0)
 746:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 10.0     1.0     (shift to right border)
 747:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     normalize(positiveData, normalizedData_minmax, 1.0, 0.0, NORM_MINMAX);
 748:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 749:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 750:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array.
 751:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size as src .
 752:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param alpha norm value to normalize to or the lower range boundary in case of the range
 753:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** normalization.
 754:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param beta upper range boundary in case of the range normalization; it is not used for the norm
 755:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** normalization.
 756:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param norm_type normalization type (see cv::NormTypes).
 757:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dtype when negative, the output array has the same type as src; otherwise, it has the same
 758:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** number of channels as src and the depth =CV_MAT_DEPTH(dtype).
 759:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask.
 760:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa norm, Mat::convertTo, SparseMat::convertTo
 761:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 762:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void normalize( InputArray src, InputOutputArray dst, double alpha = 1, double beta = 
 763:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                              int norm_type = NORM_L2, int dtype = -1, InputArray mask = noArray());
 764:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 765:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
 766:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array.
 767:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size as src .
 768:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param alpha norm value to normalize to or the lower range boundary in case of the range
 769:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** normalization.
 770:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param normType normalization type (see cv::NormTypes).
 771:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 772:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void normalize( const SparseMat& src, SparseMat& dst, double alpha, int normType );
 773:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 774:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Finds the global minimum and maximum in an array.
 775:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 776:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::minMaxLoc finds the minimum and maximum element values and their positions. The
 777:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** extremums are searched across the whole array or, if mask is not an empty array, in the specified
 778:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** array region.
 779:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 780:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function do not work with multi-channel arrays. If you need to find minimum or maximum
 781:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** elements across all the channels, use Mat::reshape first to reinterpret the array as
 782:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** single-channel. Or you may extract the particular channel using either extractImageCOI , or
 783:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** mixChannels , or split .
 784:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input single-channel array.
 785:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param minVal pointer to the returned minimum value; NULL is used if not required.
 786:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param maxVal pointer to the returned maximum value; NULL is used if not required.
 787:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param minLoc pointer to the returned minimum location (in 2D case); NULL is used if not required.
 788:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param maxLoc pointer to the returned maximum location (in 2D case); NULL is used if not required.
 789:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional mask used to select a sub-array.
 790:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa max, min, compare, inRange, extractImageCOI, mixChannels, split, Mat::reshape
 791:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 792:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void minMaxLoc(InputArray src, CV_OUT double* minVal,
 793:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                             CV_OUT double* maxVal = 0, CV_OUT Point* minLoc = 0,
 794:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                             CV_OUT Point* maxLoc = 0, InputArray mask = noArray());
 795:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 796:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 797:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Finds the global minimum and maximum in an array
 798:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 799:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::minMaxIdx finds the minimum and maximum element values and their positions. The
 800:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** extremums are searched across the whole array or, if mask is not an empty array, in the specified
 801:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** array region. The function does not work with multi-channel arrays. If you need to find minimum or
 802:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** maximum elements across all the channels, use Mat::reshape first to reinterpret the array as
 803:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** single-channel. Or you may extract the particular channel using either extractImageCOI , or
 804:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** mixChannels , or split . In case of a sparse matrix, the minimum is found among non-zero elements
 805:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** only.
 806:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note When minIdx is not NULL, it must have at least 2 elements (as well as maxIdx), even if src is
 807:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** a single-row or single-column matrix. In OpenCV (following MATLAB) each array has at least 2
 808:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** dimensions, i.e. single-column matrix is Mx1 matrix (and therefore minIdx/maxIdx will be
 809:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** (i1,0)/(i2,0)) and single-row matrix is 1xN matrix (and therefore minIdx/maxIdx will be
 810:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** (0,j1)/(0,j2)).
 811:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input single-channel array.
 812:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param minVal pointer to the returned minimum value; NULL is used if not required.
 813:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param maxVal pointer to the returned maximum value; NULL is used if not required.
 814:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param minIdx pointer to the returned minimum location (in nD case); NULL is used if not required;
 815:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Otherwise, it must point to an array of src.dims elements, the coordinates of the minimum element
 816:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** in each dimension are stored there sequentially.
 817:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param maxIdx pointer to the returned maximum location (in nD case). NULL is used if not required.
 818:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask specified array region
 819:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 820:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void minMaxIdx(InputArray src, double* minVal, double* maxVal = 0,
 821:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                           int* minIdx = 0, int* maxIdx = 0, InputArray mask = noArray());
 822:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 823:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
 824:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param a input single-channel array.
 825:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param minVal pointer to the returned minimum value; NULL is used if not required.
 826:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param maxVal pointer to the returned maximum value; NULL is used if not required.
 827:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param minIdx pointer to the returned minimum location (in nD case); NULL is used if not required;
 828:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Otherwise, it must point to an array of src.dims elements, the coordinates of the minimum element
 829:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** in each dimension are stored there sequentially.
 830:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param maxIdx pointer to the returned maximum location (in nD case). NULL is used if not required.
 831:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 832:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void minMaxLoc(const SparseMat& a, double* minVal,
 833:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                           double* maxVal, int* minIdx = 0, int* maxIdx = 0);
 834:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 835:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Reduces a matrix to a vector.
 836:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 837:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::reduce reduces the matrix to a vector by treating the matrix rows/columns as a set
 838:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 1D vectors and performing the specified operation on the vectors until a single row/column is
 839:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** obtained. For example, the function can be used to compute horizontal and vertical projections of a
 840:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** raster image. In case of REDUCE_MAX and REDUCE_MIN , the output image should have the same type as 
 841:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of REDUCE_SUM and REDUCE_AVG , the output may have a larger element bit-depth to preserve a
 842:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** And multi-channel arrays are also supported in these two reduction modes.
 843:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input 2D matrix.
 844:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output vector. Its size and type is defined by dim and dtype parameters.
 845:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dim dimension index along which the matrix is reduced. 0 means that the matrix is reduced to
 846:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** a single row. 1 means that the matrix is reduced to a single column.
 847:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param rtype reduction operation that could be one of cv::ReduceTypes
 848:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dtype when negative, the output vector will have the same type as the input matrix,
 849:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** otherwise, its type will be CV_MAKE_TYPE(CV_MAT_DEPTH(dtype), src.channels()).
 850:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa repeat
 851:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 852:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void reduce(InputArray src, OutputArray dst, int dim, int rtype, int dtype = -1);
 853:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 854:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Creates one multi-channel array out of several single-channel ones.
 855:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 856:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::merge merges several arrays to make a single multi-channel array. That is, each
 857:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** element of the output array will be a concatenation of the elements of the input arrays, where
 858:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** elements of i-th input array are treated as mv[i].channels()-element vectors.
 859:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 860:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::split does the reverse operation. If you need to shuffle channels in some other
 861:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** advanced way, use cv::mixChannels.
 862:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mv input array of matrices to be merged; all the matrices in mv must have the same
 863:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** size and the same depth.
 864:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param count number of input matrices when mv is a plain C array; it must be greater than zero.
 865:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size and the same depth as mv[0]; The number of channels will
 866:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** be equal to the parameter count.
 867:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa  mixChannels, split, Mat::reshape
 868:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 869:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void merge(const Mat* mv, size_t count, OutputArray dst);
 870:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 871:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
 872:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mv input vector of matrices to be merged; all the matrices in mv must have the same
 873:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** size and the same depth.
 874:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size and the same depth as mv[0]; The number of channels will
 875:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** be the total number of channels in the matrix array.
 876:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****   */
 877:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void merge(InputArrayOfArrays mv, OutputArray dst);
 878:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 879:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Divides a multi-channel array into several single-channel arrays.
 880:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 881:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::split splits a multi-channel array into separate single-channel arrays:
 882:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{mv} [c](I) =  \texttt{src} (I)_c\f]
 883:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** If you need to extract a single channel or do some other sophisticated channel permutation, use
 884:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** mixChannels .
 885:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input multi-channel array.
 886:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mvbegin output array; the number of arrays must match src.channels(); the arrays themselves 
 887:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** reallocated, if needed.
 888:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa merge, mixChannels, cvtColor
 889:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 890:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void split(const Mat& src, Mat* mvbegin);
 891:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 892:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
 893:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param m input multi-channel array.
 894:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mv output vector of arrays; the arrays themselves are reallocated, if needed.
 895:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 896:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void split(InputArray m, OutputArrayOfArrays mv);
 897:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 898:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Copies specified channels from input arrays to the specified channels of
 899:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** output arrays.
 900:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 901:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::mixChannels provides an advanced mechanism for shuffling image channels.
 902:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 903:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** cv::split,cv::merge,cv::extractChannel,cv::insertChannel and some forms of cv::cvtColor are partial
 904:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 905:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In the example below, the code splits a 4-channel BGRA image into a 3-channel BGR (with B and R
 906:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** channels swapped) and a separate alpha-channel image:
 907:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
 908:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat bgra( 100, 100, CV_8UC4, Scalar(255,0,0,255) );
 909:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat bgr( bgra.rows, bgra.cols, CV_8UC3 );
 910:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat alpha( bgra.rows, bgra.cols, CV_8UC1 );
 911:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 912:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // forming an array of matrices is a quite efficient operation,
 913:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // because the matrix data is not copied, only the headers
 914:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     Mat out[] = { bgr, alpha };
 915:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // bgra[0] -> bgr[2], bgra[1] -> bgr[1],
 916:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // bgra[2] -> bgr[0], bgra[3] -> alpha[0]
 917:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     int from_to[] = { 0,2, 1,1, 2,0, 3,3 };
 918:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     mixChannels( &bgra, 1, out, 2, from_to, 4 );
 919:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
 920:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @note Unlike many other new-style C++ functions in OpenCV (see the introduction section and
 921:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Mat::create ), cv::mixChannels requires the output arrays to be pre-allocated before calling the
 922:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** function.
 923:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array or vector of matrices; all of the matrices must have the same size and the
 924:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** same depth.
 925:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param nsrcs number of matrices in `src`.
 926:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array or vector of matrices; all the matrices **must be allocated**; their size a
 927:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** depth must be the same as in `src[0]`.
 928:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param ndsts number of matrices in `dst`.
 929:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param fromTo array of index pairs specifying which channels are copied and where; fromTo[k\*2] is
 930:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** a 0-based index of the input channel in src, fromTo[k\*2+1] is an index of the output channel in
 931:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** dst; the continuous channel numbering is used: the first input image channels are indexed from 0 to
 932:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** src[0].channels()-1, the second input image channels are indexed from src[0].channels() to
 933:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** src[0].channels() + src[1].channels()-1, and so on, the same scheme is used for the output image
 934:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** channels; as a special case, when fromTo[k\*2] is negative, the corresponding output channel is
 935:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** filled with zero .
 936:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param npairs number of index pairs in `fromTo`.
 937:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa split, merge, extractChannel, insertChannel, cvtColor
 938:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 939:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void mixChannels(const Mat* src, size_t nsrcs, Mat* dst, size_t ndsts,
 940:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                             const int* fromTo, size_t npairs);
 941:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 942:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
 943:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array or vector of matrices; all of the matrices must have the same size and the
 944:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** same depth.
 945:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array or vector of matrices; all the matrices **must be allocated**; their size a
 946:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** depth must be the same as in src[0].
 947:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param fromTo array of index pairs specifying which channels are copied and where; fromTo[k\*2] is
 948:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** a 0-based index of the input channel in src, fromTo[k\*2+1] is an index of the output channel in
 949:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** dst; the continuous channel numbering is used: the first input image channels are indexed from 0 to
 950:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** src[0].channels()-1, the second input image channels are indexed from src[0].channels() to
 951:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** src[0].channels() + src[1].channels()-1, and so on, the same scheme is used for the output image
 952:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** channels; as a special case, when fromTo[k\*2] is negative, the corresponding output channel is
 953:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** filled with zero .
 954:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param npairs number of index pairs in fromTo.
 955:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 956:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void mixChannels(InputArrayOfArrays src, InputOutputArrayOfArrays dst,
 957:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                             const int* fromTo, size_t npairs);
 958:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 959:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
 960:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array or vector of matrices; all of the matrices must have the same size and the
 961:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** same depth.
 962:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array or vector of matrices; all the matrices **must be allocated**; their size a
 963:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** depth must be the same as in src[0].
 964:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param fromTo array of index pairs specifying which channels are copied and where; fromTo[k\*2] is
 965:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** a 0-based index of the input channel in src, fromTo[k\*2+1] is an index of the output channel in
 966:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** dst; the continuous channel numbering is used: the first input image channels are indexed from 0 to
 967:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** src[0].channels()-1, the second input image channels are indexed from src[0].channels() to
 968:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** src[0].channels() + src[1].channels()-1, and so on, the same scheme is used for the output image
 969:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** channels; as a special case, when fromTo[k\*2] is negative, the corresponding output channel is
 970:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** filled with zero .
 971:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 972:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void mixChannels(InputArrayOfArrays src, InputOutputArrayOfArrays dst,
 973:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                               const std::vector<int>& fromTo);
 974:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 975:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Extracts a single channel from src (coi is 0-based index)
 976:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array
 977:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array
 978:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param coi index of channel to extract
 979:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa mixChannels, split
 980:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 981:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void extractChannel(InputArray src, OutputArray dst, int coi);
 982:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 983:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Inserts a single channel to dst (coi is 0-based index)
 984:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array
 985:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array
 986:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param coi index of channel for insertion
 987:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa mixChannels, merge
 988:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
 989:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void insertChannel(InputArray src, InputOutputArray dst, int coi);
 990:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 991:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Flips a 2D array around vertical, horizontal, or both axes.
 992:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
 993:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::flip flips the array in one of three different ways (row
 994:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** and column indices are 0-based):
 995:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst} _{ij} =
 996:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \left\{
 997:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \begin{array}{l l}
 998:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \texttt{src} _{\texttt{src.rows}-i-1,j} & if\;  \texttt{flipCode} = 0 \\
 999:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \texttt{src} _{i, \texttt{src.cols} -j-1} & if\;  \texttt{flipCode} > 0 \\
1000:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \texttt{src} _{ \texttt{src.rows} -i-1, \texttt{src.cols} -j-1} & if\; \texttt{flipCode} < 0 \\
1001:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \end{array}
1002:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \right.\f]
1003:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The example scenarios of using the function are the following:
1004:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Vertical flipping of the image (flipCode == 0) to switch between
1005:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     top-left and bottom-left image origin. This is a typical operation
1006:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     in video processing on Microsoft Windows\* OS.
1007:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Horizontal flipping of the image with the subsequent horizontal
1008:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     shift and absolute difference calculation to check for a
1009:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     vertical-axis symmetry (flipCode \> 0).
1010:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Simultaneous horizontal and vertical flipping of the image with
1011:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     the subsequent shift and absolute difference calculation to check
1012:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     for a central symmetry (flipCode \< 0).
1013:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Reversing the order of point arrays (flipCode \> 0 or
1014:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     flipCode == 0).
1015:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array.
1016:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same size and type as src.
1017:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param flipCode a flag to specify how to flip the array; 0 means
1018:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** flipping around the x-axis and positive value (for example, 1) means
1019:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** flipping around y-axis. Negative value (for example, -1) means flipping
1020:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** around both axes.
1021:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa transpose , repeat , completeSymm
1022:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1023:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void flip(InputArray src, OutputArray dst, int flipCode);
1024:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1025:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** enum RotateFlags {
1026:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     ROTATE_90_CLOCKWISE = 0, //Rotate 90 degrees clockwise
1027:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     ROTATE_180 = 1, //Rotate 180 degrees clockwise
1028:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     ROTATE_90_COUNTERCLOCKWISE = 2, //Rotate 270 degrees clockwise
1029:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** };
1030:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Rotates a 2D array in multiples of 90 degrees.
1031:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function rotate rotates the array in one of three different ways:
1032:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Rotate by 90 degrees clockwise (rotateCode = ROTATE_90).
1033:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Rotate by 180 degrees clockwise (rotateCode = ROTATE_180).
1034:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Rotate by 270 degrees clockwise (rotateCode = ROTATE_270).
1035:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array.
1036:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same type as src.  The size is the same with ROTATE_180,
1037:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** and the rows and cols are switched for ROTATE_90 and ROTATE_270.
1038:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param rotateCode an enum to specify how to rotate the array; see the enum RotateFlags
1039:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa transpose , repeat , completeSymm, flip, RotateFlags
1040:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1041:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void rotate(InputArray src, OutputArray dst, int rotateCode);
1042:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1043:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Fills the output array with repeated copies of the input array.
1044:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1045:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::repeat duplicates the input array one or more times along each of the two axes:
1046:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst} _{ij}= \texttt{src} _{i\mod src.rows, \; j\mod src.cols }\f]
1047:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The second variant of the function is more convenient to use with @ref MatrixExpressions.
1048:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array to replicate.
1049:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param ny Flag to specify how many times the `src` is repeated along the
1050:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** vertical axis.
1051:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param nx Flag to specify how many times the `src` is repeated along the
1052:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** horizontal axis.
1053:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array of the same type as `src`.
1054:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa cv::reduce
1055:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1056:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void repeat(InputArray src, int ny, int nx, OutputArray dst);
1057:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1058:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
1059:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array to replicate.
1060:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param ny Flag to specify how many times the `src` is repeated along the
1061:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** vertical axis.
1062:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param nx Flag to specify how many times the `src` is repeated along the
1063:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** horizontal axis.
1064:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****   */
1065:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS Mat repeat(const Mat& src, int ny, int nx);
1066:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1067:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Applies horizontal concatenation to given matrices.
1068:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1069:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function horizontally concatenates two or more cv::Mat matrices (with the same number of rows).
1070:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
1071:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat matArray[] = { cv::Mat(4, 1, CV_8UC1, cv::Scalar(1)),
1072:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                            cv::Mat(4, 1, CV_8UC1, cv::Scalar(2)),
1073:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                            cv::Mat(4, 1, CV_8UC1, cv::Scalar(3)),};
1074:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1075:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat out;
1076:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::hconcat( matArray, 3, out );
1077:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //out:
1078:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //[1, 2, 3;
1079:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 1, 2, 3;
1080:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 1, 2, 3;
1081:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 1, 2, 3]
1082:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
1083:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array or vector of matrices. all of the matrices must have the same number of rows
1084:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param nsrc number of matrices in src.
1085:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array. It has the same number of rows and depth as the src, and the sum of cols o
1086:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa cv::vconcat(const Mat*, size_t, OutputArray), @sa cv::vconcat(InputArrayOfArrays, OutputArray) 
1087:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1088:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void hconcat(const Mat* src, size_t nsrc, OutputArray dst);
1089:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
1090:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @code{.cpp}
1091:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat_<float> A = (cv::Mat_<float>(3, 2) << 1, 4,
1092:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                                   2, 5,
1093:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                                   3, 6);
1094:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat_<float> B = (cv::Mat_<float>(3, 2) << 7, 10,
1095:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                                   8, 11,
1096:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                                   9, 12);
1097:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1098:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat C;
1099:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::hconcat(A, B, C);
1100:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //C:
1101:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //[1, 4, 7, 10;
1102:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 2, 5, 8, 11;
1103:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 3, 6, 9, 12]
1104:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @endcode
1105:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param src1 first input array to be considered for horizontal concatenation.
1106:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param src2 second input array to be considered for horizontal concatenation.
1107:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param dst output array. It has the same number of rows and depth as the src1 and src2, and the su
1108:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  */
1109:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void hconcat(InputArray src1, InputArray src2, OutputArray dst);
1110:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
1111:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @code{.cpp}
1112:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     std::vector<cv::Mat> matrices = { cv::Mat(4, 1, CV_8UC1, cv::Scalar(1)),
1113:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                       cv::Mat(4, 1, CV_8UC1, cv::Scalar(2)),
1114:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                       cv::Mat(4, 1, CV_8UC1, cv::Scalar(3)),};
1115:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1116:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat out;
1117:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::hconcat( matrices, out );
1118:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //out:
1119:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //[1, 2, 3;
1120:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 1, 2, 3;
1121:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 1, 2, 3;
1122:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 1, 2, 3]
1123:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @endcode
1124:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param src input array or vector of matrices. all of the matrices must have the same number of row
1125:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param dst output array. It has the same number of rows and depth as the src, and the sum of cols 
1126:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** same depth.
1127:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  */
1128:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void hconcat(InputArrayOfArrays src, OutputArray dst);
1129:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1130:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Applies vertical concatenation to given matrices.
1131:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1132:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function vertically concatenates two or more cv::Mat matrices (with the same number of cols).
1133:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @code{.cpp}
1134:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat matArray[] = { cv::Mat(1, 4, CV_8UC1, cv::Scalar(1)),
1135:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                            cv::Mat(1, 4, CV_8UC1, cv::Scalar(2)),
1136:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                            cv::Mat(1, 4, CV_8UC1, cv::Scalar(3)),};
1137:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1138:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat out;
1139:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::vconcat( matArray, 3, out );
1140:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //out:
1141:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //[1,   1,   1,   1;
1142:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 2,   2,   2,   2;
1143:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 3,   3,   3,   3]
1144:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @endcode
1145:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array or vector of matrices. all of the matrices must have the same number of cols
1146:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param nsrc number of matrices in src.
1147:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array. It has the same number of cols and depth as the src, and the sum of rows o
1148:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @sa cv::hconcat(const Mat*, size_t, OutputArray), @sa cv::hconcat(InputArrayOfArrays, OutputArray) 
1149:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1150:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void vconcat(const Mat* src, size_t nsrc, OutputArray dst);
1151:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
1152:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @code{.cpp}
1153:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat_<float> A = (cv::Mat_<float>(3, 2) << 1, 7,
1154:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                                   2, 8,
1155:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                                   3, 9);
1156:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat_<float> B = (cv::Mat_<float>(3, 2) << 4, 10,
1157:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                                   5, 11,
1158:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                                   6, 12);
1159:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1160:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat C;
1161:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::vconcat(A, B, C);
1162:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //C:
1163:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //[1, 7;
1164:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 2, 8;
1165:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 3, 9;
1166:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 4, 10;
1167:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 5, 11;
1168:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 6, 12]
1169:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @endcode
1170:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param src1 first input array to be considered for vertical concatenation.
1171:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param src2 second input array to be considered for vertical concatenation.
1172:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param dst output array. It has the same number of cols and depth as the src1 and src2, and the su
1173:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  */
1174:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS void vconcat(InputArray src1, InputArray src2, OutputArray dst);
1175:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @overload
1176:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @code{.cpp}
1177:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     std::vector<cv::Mat> matrices = { cv::Mat(1, 4, CV_8UC1, cv::Scalar(1)),
1178:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                       cv::Mat(1, 4, CV_8UC1, cv::Scalar(2)),
1179:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                                       cv::Mat(1, 4, CV_8UC1, cv::Scalar(3)),};
1180:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1181:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::Mat out;
1182:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     cv::vconcat( matrices, out );
1183:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //out:
1184:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     //[1,   1,   1,   1;
1185:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 2,   2,   2,   2;
1186:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     // 3,   3,   3,   3]
1187:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @endcode
1188:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param src input array or vector of matrices. all of the matrices must have the same number of col
1189:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  @param dst output array. It has the same number of cols and depth as the src, and the sum of rows 
1190:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** same depth.
1191:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****  */
1192:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void vconcat(InputArrayOfArrays src, OutputArray dst);
1193:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1194:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief computes bitwise conjunction of the two arrays (dst = src1 & src2)
1195:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** Calculates the per-element bit-wise conjunction of two arrays or an
1196:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** array and a scalar.
1197:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1198:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::bitwise_and calculates the per-element bit-wise logical conjunction for:
1199:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Two arrays when src1 and src2 have the same size:
1200:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1} (I)  \wedge \texttt{src2} (I) \quad \texttt{if mask} (I) \
1201:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   An array and a scalar when src2 is constructed from Scalar or has
1202:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     the same number of elements as `src1.channels()`:
1203:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1} (I)  \wedge \texttt{src2} \quad \texttt{if mask} (I) \ne0\
1204:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   A scalar and an array when src1 is constructed from Scalar or has
1205:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     the same number of elements as `src2.channels()`:
1206:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1}  \wedge \texttt{src2} (I) \quad \texttt{if mask} (I) \ne0\
1207:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of floating-point arrays, their machine-specific bit
1208:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** representations (usually IEEE754-compliant) are used for the operation.
1209:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of multi-channel arrays, each channel is processed
1210:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** independently. In the second and third cases above, the scalar is first
1211:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** converted to the array type.
1212:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array or a scalar.
1213:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array or a scalar.
1214:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array that has the same size and type as the input
1215:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** arrays.
1216:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask, 8-bit single channel array, that
1217:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** specifies elements of the output array to be changed.
1218:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1219:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void bitwise_and(InputArray src1, InputArray src2,
1220:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                               OutputArray dst, InputArray mask = noArray());
1221:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1222:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates the per-element bit-wise disjunction of two arrays or an
1223:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** array and a scalar.
1224:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1225:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::bitwise_or calculates the per-element bit-wise logical disjunction for:
1226:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Two arrays when src1 and src2 have the same size:
1227:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1} (I)  \vee \texttt{src2} (I) \quad \texttt{if mask} (I) \ne
1228:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   An array and a scalar when src2 is constructed from Scalar or has
1229:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     the same number of elements as `src1.channels()`:
1230:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1} (I)  \vee \texttt{src2} \quad \texttt{if mask} (I) \ne0\f]
1231:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   A scalar and an array when src1 is constructed from Scalar or has
1232:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     the same number of elements as `src2.channels()`:
1233:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1}  \vee \texttt{src2} (I) \quad \texttt{if mask} (I) \ne0\f]
1234:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of floating-point arrays, their machine-specific bit
1235:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** representations (usually IEEE754-compliant) are used for the operation.
1236:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of multi-channel arrays, each channel is processed
1237:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** independently. In the second and third cases above, the scalar is first
1238:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** converted to the array type.
1239:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array or a scalar.
1240:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array or a scalar.
1241:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array that has the same size and type as the input
1242:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** arrays.
1243:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask, 8-bit single channel array, that
1244:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** specifies elements of the output array to be changed.
1245:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1246:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void bitwise_or(InputArray src1, InputArray src2,
1247:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                              OutputArray dst, InputArray mask = noArray());
1248:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1249:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief Calculates the per-element bit-wise "exclusive or" operation on two
1250:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** arrays or an array and a scalar.
1251:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1252:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::bitwise_xor calculates the per-element bit-wise logical "exclusive-or"
1253:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** operation for:
1254:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   Two arrays when src1 and src2 have the same size:
1255:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1} (I)  \oplus \texttt{src2} (I) \quad \texttt{if mask} (I) \
1256:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   An array and a scalar when src2 is constructed from Scalar or has
1257:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     the same number of elements as `src1.channels()`:
1258:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1} (I)  \oplus \texttt{src2} \quad \texttt{if mask} (I) \ne0\
1259:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** *   A scalar and an array when src1 is constructed from Scalar or has
1260:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     the same number of elements as `src2.channels()`:
1261:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****     \f[\texttt{dst} (I) =  \texttt{src1}  \oplus \texttt{src2} (I) \quad \texttt{if mask} (I) \ne0\
1262:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of floating-point arrays, their machine-specific bit
1263:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** representations (usually IEEE754-compliant) are used for the operation.
1264:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of multi-channel arrays, each channel is processed
1265:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** independently. In the 2nd and 3rd cases above, the scalar is first
1266:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** converted to the array type.
1267:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src1 first input array or a scalar.
1268:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src2 second input array or a scalar.
1269:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array that has the same size and type as the input
1270:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** arrays.
1271:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask, 8-bit single channel array, that
1272:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** specifies elements of the output array to be changed.
1273:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1274:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void bitwise_xor(InputArray src1, InputArray src2,
1275:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                               OutputArray dst, InputArray mask = noArray());
1276:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1277:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** /** @brief  Inverts every bit of an array.
1278:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** 
1279:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** The function cv::bitwise_not calculates per-element bit-wise inversion of the input
1280:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** array:
1281:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** \f[\texttt{dst} (I) =  \neg \texttt{src} (I)\f]
1282:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** In case of a floating-point input array, its machine-specific bit
1283:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** representation (usually IEEE754-compliant) is used for the operation. In
1284:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** case of multi-channel arrays, each channel is processed independently.
1285:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param src input array.
1286:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param dst output array that has the same size and type as the input
1287:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** array.
1288:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** @param mask optional operation mask, 8-bit single channel array, that
1289:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** specifies elements of the output array to be changed.
1290:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** */
1291:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp **** CV_EXPORTS_W void bitwise_not(InputArray src, OutputArray dst,
1292:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2\core.hpp ****                               InputArray mask = noArray());
 2511              		.loc 6 1292 0
 2512 0310 FEFFFFEB 		bl	_ZN2cv7noArrayEv
 2513              	.LVL269:
 458:../src/renesas/application/r_opencv.cpp **** 
 2514              		.loc 1 458 0
 2515 0314 0020A0E1 		mov	r2, r0
 2516 0318 88108DE2 		add	r1, sp, #136
 2517 031c 78008DE2 		add	r0, sp, #120
 2518 0320 FEFFFFEB 		bl	_ZN2cv11bitwise_notERKNS_11_InputArrayERKNS_12_OutputArrayES2_
 2519              	.LVL270:
 2520              	.LBB928:
 2521              	.LBB929:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 2522              		.loc 3 703 0
 2523 0324 64309DE5 		ldr	r3, [sp, #100]
 2524 0328 000053E3 		cmp	r3, #0
 2525 032c 0900000A 		beq	.L125
 2526 0330 0C3083E2 		add	r3, r3, #12
 2527 0334 5BF07FF5 		dmb	ish
 2528              	.L138:
 2529 0338 9F2F93E1 		ldrex	r2, [r3]
 2530 033c 011042E2 		sub	r1, r2, #1
 2531 0340 910F83E1 		strex	r0, r1, [r3]
 2532 0344 000050E3 		cmp	r0, #0
 2533 0348 FAFFFF1A 		bne	.L138
 2534 034c 5BF07FF5 		dmb	ish
 2535 0350 010052E3 		cmp	r2, #1
 2536 0354 0D00000A 		beq	.L143
 2537              	.L125:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 2538              		.loc 3 705 0
 2539 0358 0030A0E3 		mov	r3, #0
 2540 035c 64308DE5 		str	r3, [sp, #100]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 2541              		.loc 3 706 0
 2542 0360 50308DE5 		str	r3, [sp, #80]
 2543 0364 5C308DE5 		str	r3, [sp, #92]
 2544 0368 58308DE5 		str	r3, [sp, #88]
 2545 036c 54308DE5 		str	r3, [sp, #84]
 2546              	.LVL271:
 2547              	.L127:
 2548              	.LBB930:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 2549              		.loc 3 707 0
 2550 0370 44209DE5 		ldr	r2, [sp, #68]
 2551 0374 030052E1 		cmp	r2, r3
 2552 0378 070000DA 		ble	.L126
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 2553              		.loc 3 708 0
 2554 037c 68209DE5 		ldr	r2, [sp, #104]
 2555 0380 0010A0E3 		mov	r1, #0
 2556 0384 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 2557              		.loc 3 707 0
 2558 0388 013083E2 		add	r3, r3, #1
 2559              	.LVL272:
 2560 038c F7FFFFEA 		b	.L127
 2561              	.LVL273:
 2562              	.L143:
 2563              	.LBE930:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 2564              		.loc 3 704 0
 2565 0390 40008DE2 		add	r0, sp, #64
 2566              	.LVL274:
 2567 0394 FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 2568              	.LVL275:
 2569              	.LEHE15:
 2570 0398 EEFFFFEA 		b	.L125
 2571              	.LVL276:
 2572              	.L126:
 2573              	.LBE929:
 2574              	.LBE928:
 2575              	.LBB931:
 2576              	.LBB932:
 2577              	.LBB933:
 2578              	.LBB934:
 703:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         deallocate();
 2579              		.loc 3 703 0
 2580 039c 64309DE5 		ldr	r3, [sp, #100]
 2581 03a0 000053E3 		cmp	r3, #0
 2582 03a4 0900000A 		beq	.L128
 2583 03a8 0C3083E2 		add	r3, r3, #12
 2584 03ac 5BF07FF5 		dmb	ish
 2585              	.L137:
 2586 03b0 9F2F93E1 		ldrex	r2, [r3]
 2587 03b4 011042E2 		sub	r1, r2, #1
 2588 03b8 910F83E1 		strex	r0, r1, [r3]
 2589 03bc 000050E3 		cmp	r0, #0
 2590 03c0 FAFFFF1A 		bne	.L137
 2591 03c4 5BF07FF5 		dmb	ish
 2592 03c8 010052E3 		cmp	r2, #1
 2593 03cc 0D00000A 		beq	.L144
 2594              	.L128:
 705:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     datastart = dataend = datalimit = data = 0;
 2595              		.loc 3 705 0
 2596 03d0 0030A0E3 		mov	r3, #0
 2597 03d4 64308DE5 		str	r3, [sp, #100]
 706:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     for(int i = 0; i < dims; i++)
 2598              		.loc 3 706 0
 2599 03d8 50308DE5 		str	r3, [sp, #80]
 2600 03dc 5C308DE5 		str	r3, [sp, #92]
 2601 03e0 58308DE5 		str	r3, [sp, #88]
 2602 03e4 54308DE5 		str	r3, [sp, #84]
 2603              	.LVL277:
 2604              	.L130:
 2605              	.LBB935:
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 2606              		.loc 3 707 0
 2607 03e8 44209DE5 		ldr	r2, [sp, #68]
 2608 03ec 030052E1 		cmp	r2, r3
 2609 03f0 070000DA 		ble	.L129
 708:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** #ifdef _DEBUG
 2610              		.loc 3 708 0
 2611 03f4 68209DE5 		ldr	r2, [sp, #104]
 2612 03f8 0010A0E3 		mov	r1, #0
 2613 03fc 031182E7 		str	r1, [r2, r3, lsl #2]
 707:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         size.p[i] = 0;
 2614              		.loc 3 707 0
 2615 0400 013083E2 		add	r3, r3, #1
 2616              	.LVL278:
 2617 0404 F7FFFFEA 		b	.L130
 2618              	.LVL279:
 2619              	.L144:
 2620              	.LBE935:
 704:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****     u = NULL;
 2621              		.loc 3 704 0
 2622 0408 40008DE2 		add	r0, sp, #64
 2623              	.LVL280:
 2624 040c FEFFFFEB 		bl	_ZN2cv3Mat10deallocateEv
 2625              	.LVL281:
 2626 0410 EEFFFFEA 		b	.L128
 2627              	.LVL282:
 2628              	.L129:
 2629              	.LBE934:
 2630              	.LBE933:
 591:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp ****         fastFree(step.p);
 2631              		.loc 3 591 0
 2632 0414 6C009DE5 		ldr	r0, [sp, #108]
 2633 0418 70308DE2 		add	r3, sp, #112
 2634 041c 030050E1 		cmp	r0, r3
 2635 0420 0000000A 		beq	.L136
 592:D:\Project\e2_studio\workspace2\RZA2M_DRP_Benchmark_V1.0.0\RZA2M_DRP_Benchmark_V1.0.0\mw\src\opencv_neon\core\include/opencv2/core\mat.inl.hpp **** }
 2636              		.loc 3 592 0
 2637 0424 FEFFFFEB 		bl	_ZN2cv8fastFreeEPv
 2638              	.LVL283:
 2639              	.L136:
 2640              	.LBE932:
 2641              	.LBE931:
 2642              		.loc 1 463 0
 2643 0428 0000A0E3 		mov	r0, #0
 2644 042c A4D08DE2 		add	sp, sp, #164
 2645              		.cfi_remember_state
 2646              		.cfi_def_cfa_offset 4
 2647              		@ sp needed
 2648 0430 04F09DE4 		ldr	pc, [sp], #4
 2649              	.LVL284:
 2650              	.L134:
 2651              		.cfi_restore_state
 456:../src/renesas/application/r_opencv.cpp **** 
 2652              		.loc 1 456 0
 2653 0434 08008DE2 		add	r0, sp, #8
 2654              	.LVL285:
 2655 0438 FEFFFFEB 		bl	_ZN2cv3MatD1Ev
 2656              	.LVL286:
 2657 043c 55FFFFEA 		b	.L115
 2658              	.LVL287:
 2659              	.L133:
 2660 0440 54FFFFEA 		b	.L115
 2661              		.cfi_endproc
 2662              	.LFE8638:
 2663              		.personality	__gxx_personality_v0
 2664              		.handlerdata
 2665              	.LLSDA8638:
 2666 0008 FF       		.byte	0xff
 2667 0009 FF       		.byte	0xff
 2668 000a 01       		.byte	0x1
 2669 000b 1E       		.uleb128 .LLSDACSE8638-.LLSDACSB8638
 2670              	.LLSDACSB8638:
 2671 000c CC02     		.uleb128 .LEHB11-.LFB8638
 2672 000e 04       		.uleb128 .LEHE11-.LEHB11
 2673 000f C008     		.uleb128 .L133-.LFB8638
 2674 0011 00       		.uleb128 0
 2675 0012 8003     		.uleb128 .LEHB12-.LFB8638
 2676 0014 04       		.uleb128 .LEHE12-.LEHB12
 2677 0015 9003     		.uleb128 .L135-.LFB8638
 2678 0017 00       		.uleb128 0
 2679 0018 A003     		.uleb128 .LEHB13-.LFB8638
 2680 001a 04       		.uleb128 .LEHE13-.LEHB13
 2681 001b 00       		.uleb128 0
 2682 001c 00       		.uleb128 0
 2683 001d A803     		.uleb128 .LEHB14-.LFB8638
 2684 001f 6C       		.uleb128 .LEHE14-.LEHB14
 2685 0020 B408     		.uleb128 .L134-.LFB8638
 2686 0022 00       		.uleb128 0
 2687 0023 9006     		.uleb128 .LEHB15-.LFB8638
 2688 0025 8801     		.uleb128 .LEHE15-.LEHB15
 2689 0027 C008     		.uleb128 .L133-.LFB8638
 2690 0029 00       		.uleb128 0
 2691              	.LLSDACSE8638:
 2692              		.section	.text.cv_bitwise_not
 2693              		.fnend
 2695              		.section	.text._GLOBAL__sub_I_cv_threshold,"ax",%progbits
 2696              		.align	2
 2697              		.syntax unified
 2698              		.arm
 2699              		.fpu neon
 2701              	_GLOBAL__sub_I_cv_threshold:
 2702              		.fnstart
 2703              	.LFB11114:
 2704              		.loc 1 463 0
 2705              		.cfi_startproc
 2706              		@ args = 0, pretend = 0, frame = 0
 2707              		@ frame_needed = 0, uses_anonymous_args = 0
 2708 0000 10402DE9 		push	{r4, lr}
 2709              		.cfi_def_cfa_offset 8
 2710              		.cfi_offset 4, -8
 2711              		.cfi_offset 14, -4
 2712              		.loc 1 463 0
 2713 0004 FF1F0FE3 		movw	r1, #65535
 2714 0008 0100A0E3 		mov	r0, #1
 2715 000c FEFFFFEB 		bl	_Z41__static_initialization_and_destruction_0ii
 2716              	.LVL288:
 2717 0010 1080BDE8 		pop	{r4, pc}
 2718              		.cfi_endproc
 2719              	.LFE11114:
 2720              		.cantunwind
 2721              		.fnend
 2723              		.section	.init_array,"aw",%init_array
 2724              		.align	2
 2725 0000 00000000 		.word	_GLOBAL__sub_I_cv_threshold(target1)
 2726              		.section	.bss._ZStL8__ioinit,"aw",%nobits
 2727              		.align	2
 2728              		.set	.LANCHOR0,. + 0
 2731              	_ZStL8__ioinit:
 2732 0000 00       		.space	1
 2733              		.section	.rodata._ZZN2cv3MatC4EiiiPvjE8__func__,"a",%progbits
 2734              		.align	2
 2735              		.set	.LANCHOR1,. + 0
 2738              	_ZZN2cv3MatC4EiiiPvjE8__func__:
 2739 0000 4D617400 		.ascii	"Mat\000"
 2740              		.section	.rodata.cv_threshold.str1.4,"aMS",%progbits,1
 2741              		.align	2
 2742              	.LC0:
 2743 0000 746F7461 		.ascii	"total() == 0 || data != NULL\000"
 2743      6C282920 
 2743      3D3D2030 
 2743      207C7C20 
 2743      64617461 
 2744 001d 000000   		.space	3
 2745              	.LC1:
 2746 0020 443A5C50 		.ascii	"D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Bench"
 2746      726F6A65 
 2746      63745C65 
 2746      325F7374 
 2746      7564696F 
 2747 004f 6D61726B 		.ascii	"mark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0.0\\mw\\src\\o"
 2747      5F56312E 
 2747      302E305C 
 2747      525A4132 
 2747      4D5F4452 
 2748 007e 70656E63 		.ascii	"pencv_neon\\core\\include/opencv2/core/mat.inl.hpp\000"
 2748      765F6E65 
 2748      6F6E5C63 
 2748      6F72655C 
 2748      696E636C 
 2749              		.text
 2750              	.Letext0:
 2751              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2752              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 2753              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2754              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2755              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2756              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2757              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2758              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2759              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2760              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2761              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2762              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2763              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2764              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2765              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2766              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2767              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2768              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2769              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2770              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2771              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2772              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2773              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2774              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2775              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2776              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2777              		.file 33 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2778              		.file 34 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2779              		.file 35 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2780              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2781              		.file 37 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2782              		.file 38 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2783              		.file 39 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2784              		.file 40 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2785              		.file 41 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2786              		.file 42 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2787              		.file 43 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2788              		.file 44 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2789              		.file 45 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2790              		.file 46 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2791              		.file 47 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2792              		.file 48 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2793              		.file 49 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2794              		.file 50 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2795              		.file 51 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2796              		.file 52 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2797              		.file 53 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2798              		.file 54 "<built-in>"
 2799              		.file 55 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2800              		.file 56 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2801              		.file 57 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2802              		.file 58 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2803              		.file 59 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 2804              		.file 60 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2805              		.file 61 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2806              		.file 62 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2807              		.file 63 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2808              		.file 64 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2809              		.file 65 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2810              		.file 66 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2811              		.file 67 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2812              		.file 68 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2813              		.file 69 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2814              		.file 70 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2815              		.file 71 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2816              		.file 72 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2817              		.file 73 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2818              		.file 74 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2819              		.file 75 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2820              		.file 76 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2821              		.file 77 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2822              		.file 78 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2823              		.file 79 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2824              		.file 80 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2825              		.file 81 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2826              		.file 82 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2827              		.file 83 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2828              		.file 84 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2829              		.file 85 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2830              		.file 86 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2831              		.file 87 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.0
 2832              		.file 88 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2833              		.file 89 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2834              		.file 90 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2835              		.file 91 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2836              		.file 92 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2837              		.file 93 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2838              		.file 94 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2839              		.file 95 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2840              		.file 96 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2841              		.file 97 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2842              		.file 98 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2843              		.file 99 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.0
 2844              		.file 100 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.
 2845              		.file 101 "d:\\project\\e2_studio\\workspace2\\rza2m_drp_benchmark_v1.0.0\\rza2m_drp_benchmark_v1.
 2846              		.file 102 "D:\\Project\\e2_studio\\workspace2\\RZA2M_DRP_Benchmark_V1.0.0\\RZA2M_DRP_Benchmark_V1.
DEFINED SYMBOLS
                            *ABS*:00000000 r_opencv.cpp
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:17     .text._Z41__static_initialization_and_destruction_0ii:00000000 $a
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:22     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2728   .bss._ZStL8__ioinit:00000000 .LANCHOR0
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:00000000 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:65     .text._ZN2cv3MatD2Ev:00000000 $a
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:71     .text._ZN2cv3MatD2Ev:00000000 _ZN2cv3MatD2Ev
   .ARM.extab.text._ZN2cv3MatD2Ev:00000000 $d
   .ARM.exidx.text._ZN2cv3MatD2Ev:00000000 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:71     .text._ZN2cv3MatD2Ev:00000000 _ZN2cv3MatD1Ev
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:175    .text.cv_threshold:00000000 $a
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:181    .text.cv_threshold:00000000 cv_threshold
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2742   .rodata.cv_threshold.str1.4:00000000 .LC0
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2745   .rodata.cv_threshold.str1.4:00000020 .LC1
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2735   .rodata._ZZN2cv3MatC4EiiiPvjE8__func__:00000000 .LANCHOR1
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:1598   .text.cv_threshold:000009f0 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:1609   .text.cv_threshold:00000a00 $a
     .ARM.extab.text.cv_threshold:00000000 $d
     .ARM.exidx.text.cv_threshold:00000000 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2032   .text.cv_bitwise_not:00000000 $a
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2038   .text.cv_bitwise_not:00000000 cv_bitwise_not
   .ARM.extab.text.cv_bitwise_not:00000000 $d
   .ARM.exidx.text.cv_bitwise_not:00000000 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2696   .text._GLOBAL__sub_I_cv_threshold:00000000 $a
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2701   .text._GLOBAL__sub_I_cv_threshold:00000000 _GLOBAL__sub_I_cv_threshold
.ARM.exidx.text._GLOBAL__sub_I_cv_threshold:00000000 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2724   .init_array:00000000 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2727   .bss._ZStL8__ioinit:00000000 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2731   .bss._ZStL8__ioinit:00000000 _ZStL8__ioinit
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2734   .rodata._ZZN2cv3MatC4EiiiPvjE8__func__:00000000 $d
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2738   .rodata._ZZN2cv3MatC4EiiiPvjE8__func__:00000000 _ZZN2cv3MatC4EiiiPvjE8__func__
C:\Users\10094\AppData\Local\Temp\ccPOgam1.s:2741   .rodata.cv_threshold.str1.4:00000000 $d
                           .group:00000000 _ZN2cv3MatD5Ev
                           .group:00000000 wm4.0.7361c1aecea25e8baae4de786685f76c
                           .group:00000000 wm4.opencv_modules.hpp.8.7afb80e771c6a0a74dbc12d67056e2ca
                           .group:00000000 wm4.cvdef.h.46.1db83e9cc069ad1b481f8bb625d16c32
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.newlib.h.21.64e14ed41172bf448383d50cbb14725e
                           .group:00000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4.stddef.h.39.096871ec3ca5abfedfa76e8d05f4a8d6
                           .group:00000000 wm4.cdefs.h.47.ef8413a24f515b2210954be82adc67e2
                           .group:00000000 wm4.limits.h.8.5e0fff2a87dd91e185228a3ec87c2c24
                           .group:00000000 wm4.limits.h.60.a7abcffe79f1387d61d92dd90bd582e0
                           .group:00000000 wm4.interface.h.2.514d731c44ac9f9caada9a62d521bc99
                           .group:00000000 wm4.cstddef.40.7f59894b65c26f8fc669473914a0ef3e
                           .group:00000000 wm4.cconfig.h.31.7952c39026e1cd3ced67638d66ebfd40
                           .group:00000000 wm4.cpu_defines.h.31.54d44f9d3e7c42875c5a7fd49795eb93
                           .group:00000000 wm4.cconfig.h.541.3e7122a26aab9f5a5399e0379cd75f44
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.interface.h.63.a5c31ef31cf1990791f46d646a2be8f0
                           .group:00000000 wm4.cvdef.h.83.3f2d9d19454e0f6b8b601d687786706b
                           .group:00000000 wm4.cvdef.h.223.40dbad333a8479200200efa6dbe36633
                           .group:00000000 wm4.version.hpp.51.debc431a5f11d2604bbfc1decc2046ee
                           .group:00000000 wm4.climits.45.8315849d840ddf5e5f7d0eea79d30608
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.32b820b957e206cbc57b9805350afbca
                           .group:00000000 wm4.move.h.159.368bac456bc1dfb8448d51bb65764956
                           .group:00000000 wm4.utility.158.7c70a6d34a442db3c2c1c48c450d507e
                           .group:00000000 wm4.exception_defines.h.31.ca6841b9be3287386aafc5c717935b2e
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.assertions.h.30.f3970bbdad8b12088edf616ddeecdc90
                           .group:00000000 wm4.stl_iterator.h.409.7a84ee40267bb1222b7cd9a74055edfb
                           .group:00000000 wm4.debug.h.30.70fe957e8e7c7ceba3caf19b0959f126
                           .group:00000000 wm4.stl_algobase.h.491.ec4060988bfff82dc579decdb75c72d6
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4.ieeefp.h.77.49bcce8a603f3d93a95080d6a3573782
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.184.7120b8bb2e0149e2359704f4e2251b68
                           .group:00000000 wm4.reent.h.17.87376802c2b370b32a762f0a30482d9e
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.std_abs.h.31.4587ba001d85390d152353c24c92c0c8
                           .group:00000000 wm4.cstdlib.80.9130cf66e68370da17fd25eb61f97205
                           .group:00000000 wm4.cxxabi_init_exception.h.42.029852b0f286014c9c193b74ad22df55
                           .group:00000000 wm4.limits.38.60dcee91746348a1c05bc517a2a30e56
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.cstring.45.6ab09de7fb97b576e744347688ddc8d7
                           .group:00000000 wm4.ctype.h.2.cf64fe4c5e8c0ac0f52f1143312d4909
                           .group:00000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:00000000 wm4.wchar.h.2.f837619576d797e948eb58c44fac4678
                           .group:00000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.wchar.h.29.a2e47dbaf15eb55ee89b81cde1df8997
                           .group:00000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:00000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:00000000 wm4.locale.h.8.27d0fe4c0abbb6f8893a1fa7c1799fd9
                           .group:00000000 wm4.locale.h.16.90d16f662e7119f5b192650a45179c6c
                           .group:00000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:00000000 wm4.stl_function.h.57.6639ab8e57d2230b4b27118173a32750
                           .group:00000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:00000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:00000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.4494b0884bb80e2bd270999c8eda1e12
                           .group:00000000 wm4.cstdio.45.1ffaea3e7c26dce1e03f5847a7439edb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.functional_hash.h.31.d995554db01f631b375a95ecfc605ca0
                           .group:00000000 wm4.math.h.13.4f1ab8d1725735081bbdb9ebcf6dba66
                           .group:00000000 wm4.cmath.46.89ae5d13519e89e95f697bb5bcb06312
                           .group:00000000 wm4.base.hpp.274.8cab526ac8d3e9faf965a3ade618943d
                           .group:00000000 wm4.cmath.44.b3bcbb5fe53ec6617dec8aa8eb7b03cc
                           .group:00000000 wm4.fast_math.hpp.71.ad3fa91533fc849671f546ae558e7c5c
                           .group:00000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:00000000 wm4.operations.hpp.228.3441243a926d86fbf1b47aede02aac00
                           .group:00000000 wm4.wctype.h.2.898a9b94aa35d125e245195b099726a8
                           .group:00000000 wm4.wctype.h.21.aec4d35c940c33b3f9c6f879c49edcd8
                           .group:00000000 wm4.cwctype.54.6582aca101688c1c3785d03bc15e2af6
                           .group:00000000 wm4.locale_facets.h.56.0d4bb655ce5e76ea564363ed7c5a34fc
                           .group:00000000 wm4.complex.48.35882bf660c89513561522cceb2bb226
                           .group:00000000 wm4.assert.h.11.a5d97ca77559a42890313c4941c01fd9
                           .group:00000000 wm4.types_c.h.72.04a0cd0d7335cf48c81b7c74bc414443
                           .group:00000000 wm4.core_c.h.89.5f187c070e4528cbd6397ec2375cbad6
                           .group:00000000 wm4.config.h.31.5642f43ccca9023e839cec500866449c
                           .group:00000000 wm4.defines.h.49.85eaff82a61f7f1b64114cb36b08dd6e
                           .group:00000000 wm4.calib3d_c.h.45.c419bc6c02de593106ecca3659565fcb
                           .group:00000000 wm4.types_c.h.44.8d56329ce4395db6ce6e49afaf664574
                           .group:00000000 wm4.imgproc_c.h.784.d5f378dccd3e429020e937f61e5eb1f5
                           .group:00000000 wm4.stl_deque.h.57.55fe6ac7ebde76ce17bda7fba9be08c0
                           .group:00000000 wm4.objdetect_c.h.64.06743801b666d233419a39221a53df5f
                           .group:00000000 wm4.cuda_types.hpp.44.f7b29dd86aaefc1872576b790bdb9c37
                           .group:00000000 wm4.tracking_c.h.45.432871ee2c19b25da000cf1f109c2edb
                           .group:00000000 wm4.time.h.8.db4619001f026d0b4874c029fef0e91f
                           .group:00000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:00000000 wm4.time.h.25.106a07801fea6508dd6bbd3b8a1c271a
                           .group:00000000 wm4.ctime.45.1de2a3f6d2be05036815a19a22f571fa
                           .group:00000000 wm4.mcu_board_select.h.31.7f7a1c962a4ca00898aa17751bce3853
                           .group:00000000 wm4.r_typedefs.h.38.1c2e25d93fcd28394231f589285de2a9
                           .group:00000000 wm4.adc_iodefine.h.29.14c6f50dce37432a7d004e4b1ce33da7
                           .group:00000000 wm4.bsc_iodefine.h.29.9281d1f3639266933964d6d0c2d42c4f
                           .group:00000000 wm4.ceu_iodefine.h.29.2a669d0b46fdde030a50db9e3c307fbf
                           .group:00000000 wm4.cpg_iodefine.h.29.d6fdc9cb4798723afd88b251d64c2ce2
                           .group:00000000 wm4.csi2link_iodefine.h.29.221c4531636a409f24d307b16341ada8
                           .group:00000000 wm4.dmac_iodefine.h.29.578fccc2cc1da886ec95a029bf874f01
                           .group:00000000 wm4.drpk_iodefine.h.29.580eb8588a2b2d43d2726fbe791e513f
                           .group:00000000 wm4.drw_iodefine.h.29.df30f4a4a34a79f6a86c4df91353dffe
                           .group:00000000 wm4.edmac_iodefine.h.29.33e8759349004a722f42f5429c1353f6
                           .group:00000000 wm4.eptpc_iodefine.h.29.74d8f9fab0f5549b56097fb9e937dde8
                           .group:00000000 wm4.etherc_iodefine.h.29.14602750383a574f1c21f994ad33a366
                           .group:00000000 wm4.gpio_iodefine.h.29.3d0b021c56839cee4ae5149903684e4b
                           .group:00000000 wm4.gpt_iodefine.h.29.557ead75d7b0585b898d3898b64c7f87
                           .group:00000000 wm4.hyper_iodefine.h.29.000caadbb74d881e97db55b39b432154
                           .group:00000000 wm4.imr_iodefine.h.29.77c022f017e711c4d51cc0145db1dad3
                           .group:00000000 wm4.intc_iodefine.h.29.b68f5799a35a7495d63b4cd458e1ba57
                           .group:00000000 wm4.irda_iodefine.h.29.37e67bd2005173d68a74d1cc937d8444
                           .group:00000000 wm4.jcu_iodefine.h.29.3aca452908962e7a7ccf26164751feda
                           .group:00000000 wm4.lvds_iodefine.h.29.c11cbe1900e5209c8dcc76c2336c16bc
                           .group:00000000 wm4.mtu_iodefine.h.29.5498fb974bb53caf05aa143c2deec781
                           .group:00000000 wm4.nandc_iodefine.h.29.e0b343306750f017ee86e169ad98efe9
                           .group:00000000 wm4.octa_iodefine.h.29.07f258f06288ca2075168d59626c2aac
                           .group:00000000 wm4.ostm_iodefine.h.29.6914f7e330a1cf0008b34219adcdfed4
                           .group:00000000 wm4.pl_iodefine.h.29.abbb6d725aed990aa8343242bfe31416
                           .group:00000000 wm4.pmg_iodefine.h.29.8bcfbc4771a6f9b7dd4d6f504427219e
                           .group:00000000 wm4.poeg_iodefine.h.29.0d8e258d10986260cbc70cfb8c0ef273
                           .group:00000000 wm4.poe_iodefine.h.29.fe74e55e7b6b4afbe3596c74ba035e98
                           .group:00000000 wm4.prr_iodefine.h.29.c1f15576f7a27b9c83aa3b40f5b2f988
                           .group:00000000 wm4.ptpedmac_iodefine.h.29.cd24a93374ce35cebc41e26889d619ef
                           .group:00000000 wm4.rcanfd_iodefine.h.29.b6feaa6a7ae0ef05da408110e3fc69b1
                           .group:00000000 wm4.rcan_iodefine.h.29.a47a89db1b35c12b54af48fa1956acba
                           .group:00000000 wm4.riic_iodefine.h.29.f96943d49800d297612c4af3bba5c943
                           .group:00000000 wm4.rspi_iodefine.h.29.7efa041fe34a7d27db66a7b337879dfe
                           .group:00000000 wm4.rtc_iodefine.h.29.6dc76be5ca3df69cecb5a81d06cc46b5
                           .group:00000000 wm4.scifa_iodefine.h.29.b04ccd664d71baaf31c75761c45b9c4d
                           .group:00000000 wm4.scim_iodefine.h.29.87d0760abf94446b00d826c797bf0ff2
                           .group:00000000 wm4.sdmmc_iodefine.h.29.e67e9815445e8057a3262d1566bea0db
                           .group:00000000 wm4.spdif_iodefine.h.29.59f5d70150fa200a4d8ee50be1ee34c8
                           .group:00000000 wm4.spibsc_iodefine.h.29.f4930f8b8da1140200204513a363c76f
                           .group:00000000 wm4.sprite_iodefine.h.29.55796d1fa083a2457fea4ece974a192e
                           .group:00000000 wm4.ssif_iodefine.h.29.054ec6d95f487f631f16aee39c85c47a
                           .group:00000000 wm4.usb_iodefine.h.29.6dc44ea388ba227e8fdcfb33c315887b
                           .group:00000000 wm4.vdc_iodefine.h.29.db282ded1f052d8567fbbd3b61ce8f7a
                           .group:00000000 wm4.vin_iodefine.h.29.9b392e5601347d53e64be3272934e170
                           .group:00000000 wm4.wdt_iodefine.h.29.ed07bb44b797072f8c28b41c64fdca30
                           .group:00000000 wm4.iobitmask.h.29.773e8f8428b0c21e1206a8c47a6d3927
                           .group:00000000 wm4.adc_iobitmask.h.29.48ba2821c8a4fc20022447ad9316d399
                           .group:00000000 wm4.bsc_iobitmask.h.29.115d15c4ad4b48e00598dcd62d33c637
                           .group:00000000 wm4.ceu_iobitmask.h.29.413b5b68bb3c2148786493166a57173e
                           .group:00000000 wm4.cpg_iobitmask.h.29.58382d682aa9abf69ab653ac5fe9149b
                           .group:00000000 wm4.csi2link_iobitmask.h.29.701c130cb17627664fe7c147084057cf
                           .group:00000000 wm4.dmac_iobitmask.h.29.98850e876107975c53dc0bb8ebb53eb5
                           .group:00000000 wm4.drpk_iobitmask.h.29.167e7cf6b1feb4d38b8903a46d8c35ac
                           .group:00000000 wm4.drw_iobitmask.h.29.71d46f2244f6e7ae6117fe6c41c5567d
                           .group:00000000 wm4.edmac_iobitmask.h.29.4e406d859155ba914663e1cf61cad89a
                           .group:00000000 wm4.eptpc_iobitmask.h.29.64bcd0a67db3a886572992ae6da8898c
                           .group:00000000 wm4.etherc_iobitmask.h.29.07b13cb10c426023658e5c51f952b6de
                           .group:00000000 wm4.gpio_iobitmask.h.29.ea8c1464682eb61f2d0763b97ed530f9
                           .group:00000000 wm4.gpt_iobitmask.h.29.94173800a704c5ba32e348ba97cd23cf
                           .group:00000000 wm4.hyper_iobitmask.h.29.f09febbc7b835674abe34ae75f3c700d
                           .group:00000000 wm4.imr2_iobitmask.h.29.90b834f92ca4d39c49dda81fe096b5f0
                           .group:00000000 wm4.intc_iobitmask.h.29.6d3be2e47bf3d7eb7e91eeddcab863af
                           .group:00000000 wm4.irda_iobitmask.h.29.6f43dde454e599a1d4a8be2978ac9459
                           .group:00000000 wm4.jcu_iobitmask.h.29.9fd48851a81ff31733aa19b29e4846ad
                           .group:00000000 wm4.lvds_iobitmask.h.29.4a6f69c8911426fa05f0b05eab5f5e15
                           .group:00000000 wm4.mtu_iobitmask.h.29.7a98ba20f3fb30f35d72abcc74524cc2
                           .group:00000000 wm4.nandc_iobitmask.h.29.a3a0f4ae99fdf814aa6f25f430186b14
                           .group:00000000 wm4.octa_iobitmask.h.29.88d29c353902045cc5df621720d36632
                           .group:00000000 wm4.ostm_iobitmask.h.29.38ee9f4e1711e17bd3f38545ba631cde
                           .group:00000000 wm4.pl310_iobitmask.h.29.c1ef5625c0a9d67f24e89fe2fd7e4886
                           .group:00000000 wm4.pmg_iobitmask.h.29.d20cb8352080a58cf6cbf526935d968e
                           .group:00000000 wm4.poe3_iobitmask.h.29.3a3444cc2dbf606e2370573e16d57254
                           .group:00000000 wm4.poeg_iobitmask.h.29.5601eb8cf1161926d683c0720340f85d
                           .group:00000000 wm4.prr_iobitmask.h.29.52f8479a52e2236c122b5956e4bdbfce
                           .group:00000000 wm4.ptpedmac_iobitmask.h.29.494dcb2240ebba7fa20d0c2ab02007f7
                           .group:00000000 wm4.rcanfd_iobitmask.h.29.4376b1b7ff587ba618a622f2c4029df7
                           .group:00000000 wm4.rcan_iobitmask.h.29.c6f8b9b62e8fdc007f8b5f40c1f7e95d
                           .group:00000000 wm4.riic_iobitmask.h.29.b6e4a30b4a750b93bf8b54b204e41e8e
                           .group:00000000 wm4.rspi_iobitmask.h.29.2e257f44186c83ca40dbb0db2548623b
                           .group:00000000 wm4.rtc_iobitmask.h.29.83f9de1730e532ab7dfce6a57bb996ea
                           .group:00000000 wm4.scifa_iobitmask.h.29.c7af830569e0d6a26f3d66e3adc293d7
                           .group:00000000 wm4.scim_iobitmask.h.29.3b5e9d8b03a11c94acd93de96d2037f6
                           .group:00000000 wm4.sdmmc_iobitmask.h.29.023cb9ff953a162569769cc98970f23e
                           .group:00000000 wm4.spdif_iobitmask.h.29.c16f83f628828ab24aa2b72615b93e69
                           .group:00000000 wm4.spibsc_iobitmask.h.29.8ade4a581f57cd5b82569a69eb5f0d67
                           .group:00000000 wm4.sprite_iobitmask.h.29.82888597faf7ebb3bc86b5f1018a2253
                           .group:00000000 wm4.ssif_iobitmask.h.29.482529b431f1ad627a02168620c61eee
                           .group:00000000 wm4.usb_iobitmask.h.29.aae4dfd463dfdd120bf5855c9dc97483
                           .group:00000000 wm4.vdc6_iobitmask.h.29.3ce0a3f9d2209ce71e4fec48b4ecb79a
                           .group:00000000 wm4.vin_iobitmask.h.29.576a1d6e4b2cf6cbd353044865e437f2
                           .group:00000000 wm4.wdt_iobitmask.h.29.c612db09eac33fb3da8d8aaee67287a9
                           .group:00000000 wm4.driver.h.36.e845ee112228a323a15767ba5ed55e32
                           .group:00000000 wm4.reent.h.91.b3ea049ebc5486622b61409b78486f84
                           .group:00000000 wm4._default_fcntl.h.6.6460bee906b14bf62388713178ece422
                           .group:00000000 wm4.stat.h.2.d7cc6995cafd683776dd1e608b181b33
                           .group:00000000 wm4.fcntl.h.9.9336f33d7f5028f694c75e6e224e0cf7
                           .group:00000000 wm4.r_devlink_wrapper.h.71.70095b186f49b4e8547c7f00050c4257
                           .group:00000000 wm4.rza_io_regrw.h.46.8ffd34a4c69bd0fad4b7b3d6d30a6855
                           .group:00000000 wm4.r_cache_lld_rza2m.h.49.8943c30e0d78454ab1bac47fcdc61a41
                           .group:00000000 wm4.r_cpg_lld_rza2m.h.43.7fe5132a77561580dbf35c71e690474f
                           .group:00000000 wm4.r_cpg_drv_api.h.38.b40a52cab6e6adb0f168c573c5a31ec8
                           .group:00000000 wm4.r_gpio_drv_api.h.88.f296296c75201b7ffad4ce7b1e5337e5
                           .group:00000000 wm4.r_gpio_lld_rza2m.h.45.b9676c2739b4c00d77987fe632217935
                           .group:00000000 wm4.r_intc_lld_rza2m.h.46.7dc7c9a114da565f71778e91111dd70b
                           .group:00000000 wm4.r_mmu_lld_rza2m.h.41.3e841c712e0b350b02dd41ff0093d85d
                           .group:00000000 wm4.r_stb_lld_rza2m.h.46.c1a1fce253cc34cd49049ab15104e0d0
                           .group:00000000 wm4.r_bsc_lld_rza2m.h.30.db8a1463b905452b1ec96ad2e3da18a4
                           .group:00000000 wm4.r_ceu_user.h.38.140474eca4ac6a909fdcd22019c567ca
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.r_dk2_if.h.53.04a09603c8426576ee9c3b06e8b8dd44
                           .group:00000000 wm4.rz_co_typedef.h.33.c6d06516395cac9809b743c5ea9c17ab
                           .group:00000000 wm4.r_jcu_typedef.h.62.f28b2736609f230013d899023f2d5a54
                           .group:00000000 wm4.r_mipi_user.h.41.904962207e45a5581bdc399e4d770943
                           .group:00000000 wm4.r_rza2m_riic_lld_cfg.h.40.1a5f6c5ea695a369eafb519f9773c77d
                           .group:00000000 wm4.r_rza2m_riic_lld_api.h.37.76c059981812ab1c27bbe073398fe70a
                           .group:00000000 wm4.r_riic_drv_api.h.77.d3e88cefd960d5349156344e20f8969e
                           .group:00000000 wm4.r_vdc_user.h.49.5060b5b77fe69e4e595de8fadc36e78b
                           .group:00000000 wm4.r_vdc.h.48.a14f484516009cb4cb3742c0c9b79bbd
                           .group:00000000 wm4.r_rvapi_vdc.h.73.5f3535c567d3af3dccdafb254b48c817
                           .group:00000000 wm4.r_spea.h.48.b9ed4fd711365d515684299152d7899f
                           .group:00000000 wm4.r_rza2_scifa_lld_cfg.h.37.7a46a4beb27e120eb804765fbf41c7ce
                           .group:00000000 wm4.r_scifa_lld_rza2m_api.h.42.bf3348f1877be2a35daaf7307d1083ab
                           .group:00000000 wm4.r_scifa_drv_api.h.90.7ad2e6f1bf099aca54e367524f538022
                           .group:00000000 wm4.r_rza2_scifa_lld.h.73.d0daf7287239025b54ce272d1f179bc4
                           .group:00000000 wm4.r_sd_cfg.h.37.c020fda203b6091ea9a05c044d112f48
                           .group:00000000 wm4.r_sdif.h.39.e8128497d2cbef5623d9f8b71f13fd2c
                           .group:00000000 wm4.trace.h.67.bddc4e225b6f150c649875384d686fa0
                           .group:00000000 wm4.os_port_config.h.30.dc2a07b0b1ef27f5072d53aadb97c22f
                           .group:00000000 wm4.inttypes.h.14.b28deb26920e51e0da310220ef0f9003
                           .group:00000000 wm4.inttypes.h.28.c3e61b48c6ae3a7cb62609add2dd53d1
                           .group:00000000 wm4.compiler_port.h.55.df9c2dc6e7c3c8d2023a60d359d51c90
                           .group:00000000 wm4.os_port.h.35.60eee634b12b0ae58a20642f379ee18f
                           .group:00000000 wm4.FreeRTOSConfig.h.29.57d7ee2ca1fa56012ddbf298eb71a67e
                           .group:00000000 wm4.projdefs.h.29.3472c8470d131a5f474bc7437ea94609
                           .group:00000000 wm4.portmacro.h.71.5aaa521454bf5c46feaeb3600165fe21
                           .group:00000000 wm4.portable.h.64.00b423ba030e23bed354b037664af7a6
                           .group:00000000 wm4.mpu_wrappers.h.29.c427bcb47cdbc76126df163ed8d718ae
                           .group:00000000 wm4.freertos.h.66.8cf20fb8e5505a32acad25b15f03255e
                           .group:00000000 wm4.list.h.61.5c5a38f6bc6687eed6d893e57dabd8e6
                           .group:00000000 wm4.task.h.46.3ef9a27c775afa221d5872c3a27e24ba
                           .group:00000000 wm4.queue.h.65.c672d4100a726c23d437015b36fefeae
                           .group:00000000 wm4.semphr.h.39.340b671c07db4901cda8217ed0bf5efe
                           .group:00000000 wm4.freertos_cli.h.44.d2b0c6a5d95d64df83dde78f17a38854
                           .group:00000000 wm4.os_port_freertos.h.42.927b913f954bdc6c1595c3cbdcc26b35
                           .group:00000000 wm4.os_port.h.105.486b9c4d7fa5ba92a137fc779addadcb
                           .group:00000000 wm4.r_task_priority.h.42.5f9d7a8c6eb031adfea4722ebab12dd4
                           .group:00000000 wm4.r_os_abstraction_api.h.52.f52c5f8a865f19209d200bd66fbd6702
                           .group:00000000 wm4.r_drp.h.25.ffc333a65e5b2d9259fb21e57f80c88e

UNDEFINED SYMBOLS
_ZNSt8ios_base4InitC1Ev
__dso_handle
_ZNSt8ios_base4InitD1Ev
__aeabi_atexit
__gxx_personality_v0
_ZN2cv3Mat10deallocateEv
_ZN2cv8fastFreeEPv
_ZN2cv6String8allocateEj
memcpy
_ZN2cv5errorEiRKNS_6StringEPKcS4_i
_ZN2cv6String10deallocateEv
__cxa_end_cleanup
_ZN2cv9thresholdERKNS_11_InputArrayERKNS_12_OutputArrayEddi
_ZN2cv7noArrayEv
_ZN2cv11bitwise_notERKNS_11_InputArrayERKNS_12_OutputArrayES2_
